//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use crate::mobile_entity_state;
use game_module::module_bindings::MobileEntityState;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use ts_rs::TS;

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize, TS)]
#[ts(rename = "MobileEntityState")]
pub struct Model {
    pub entity_id: u64,
    pub chunk_index: u64,
    pub timestamp: u64,
    pub location_x: i32,
    pub location_z: i32,
    pub destination_x: i32,
    pub destination_z: i32,
    pub dimension: u32,
    pub is_running: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl From<MobileEntityState> for Model {
    fn from(value: MobileEntityState) -> Self {
        mobile_entity_state::Model {
            entity_id: value.entity_id,
            chunk_index: value.chunk_index,
            timestamp: value.timestamp,
            location_x: value.location_x,
            location_z: value.location_z,
            destination_x: value.destination_x,
            destination_z: value.destination_z,
            dimension: value.dimension,
            is_running: value.is_running,
        }
    }
}
