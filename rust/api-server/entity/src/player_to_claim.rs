//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "player_to_claim")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub player_id: i64,
    #[sea_orm(primary_key)]
    pub claim_id: i64,
    pub inventory_permission: bool,
    pub build_permission: bool,
    pub officer_permission: bool,
    pub co_owner_permission: bool,
    pub region: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::player_username_state::Entity",
        from = "Column::PlayerId",
        to = "super::player_username_state::Column::EntityId"
    )]
    PlayerUsernameState,
}

impl ActiveModelBehavior for ActiveModel {}
