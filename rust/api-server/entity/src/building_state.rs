//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use game_module::module_bindings::BuildingState;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use ts_rs::TS;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, TS)]
#[ts(rename = "BuildingState")]
#[sea_orm(table_name = "building_state")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub entity_id: i64,
    pub claim_entity_id: i64,
    pub direction_index: i32,
    pub building_description_id: i32,
    pub constructed_by_player_entity_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

impl From<BuildingState> for Model {
    fn from(value: BuildingState) -> Self {
        Self {
            entity_id: value.entity_id as i64,
            claim_entity_id: value.claim_entity_id as i64,
            direction_index: value.direction_index,
            building_description_id: value.building_description_id,
            constructed_by_player_entity_id: value.constructed_by_player_entity_id as i64,
        }
    }
}
