//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use sea_orm::{FromJsonQueryResult, JsonValue};
use serde::{Deserialize, Serialize};
use crate::inventory::ExpendedRefrence;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "trade_order")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub entity_id: i64,
    pub building_entity_id: i64,
    #[sea_orm(column_type = "Json")]
    pub remaining_stock: i32,
    #[sea_orm(column_type = "Json")]
    pub offer_items: Vec<TradeOrderOfferItem>,
    #[sea_orm(column_type = "Json")]
    pub offer_cargo_id: Vec<i32>,
    #[sea_orm(column_type = "Json")]
    pub required_items: Vec<TradeOrderOfferItem>,
    #[sea_orm(column_type = "Json")]
    pub required_cargo_id: Vec<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

#[axum_codec::apply(encode, decode)]
#[derive(Clone, Debug, PartialEq, Eq, FromJsonQueryResult)]
pub struct TradeOrderOfferItem {
    pub item_id: i64,
    pub quantity: i64,
    pub item_type: JsonValue,
    pub durability: JsonValue,
}
