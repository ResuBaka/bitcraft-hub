//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use crate::shared::{JsonRarity, Rarity};
use game_module::module_bindings::item_desc_type;
use sea_orm::{FromJsonQueryResult, entity::prelude::*};
use serde::{Deserialize, Serialize};
use ts_rs::TS;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize, TS)]
#[ts(rename = "ItemDesc")]
#[sea_orm(table_name = "item_desc")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub name: String,
    pub description: String,
    pub volume: i32,
    pub durability: i32,
    pub convert_to_on_durability_zero: i32,
    pub secondary_knowledge_id: i32,
    pub model_asset_name: String,
    pub icon_asset_name: String,
    pub tier: i32,
    pub tag: String,
    #[sea_orm(column_type = "Json")]
    pub rarity: JsonRarity,
    pub compendium_entry: bool,
    pub item_list_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

impl From<item_desc_type::ItemDesc> for crate::item_desc::Model {
    fn from(value: item_desc_type::ItemDesc) -> Self {
        let rarity = match &value.rarity {
            game_module::module_bindings::Rarity::Default => crate::shared::JsonRarity::Default,
            game_module::module_bindings::Rarity::Common => crate::shared::JsonRarity::Common,
            game_module::module_bindings::Rarity::Uncommon => crate::shared::JsonRarity::Uncommon,
            game_module::module_bindings::Rarity::Rare => crate::shared::JsonRarity::Rare,
            game_module::module_bindings::Rarity::Epic => crate::shared::JsonRarity::Epic,
            game_module::module_bindings::Rarity::Legendary => crate::shared::JsonRarity::Legendary,
            game_module::module_bindings::Rarity::Mythic => crate::shared::JsonRarity::Mythic,
        };
        crate::item_desc::Model {
            id: value.id,
            name: value.name,
            description: value.description,
            volume: value.volume,
            durability: value.durability,
            convert_to_on_durability_zero: value.convert_to_on_durability_zero,
            secondary_knowledge_id: value.secondary_knowledge_id,
            model_asset_name: value.model_asset_name,
            icon_asset_name: value.icon_asset_name,
            tier: value.tier,
            tag: value.tag,
            rarity,
            compendium_entry: value.compendium_entry,
            item_list_id: value.item_list_id,
        }
    }
}
