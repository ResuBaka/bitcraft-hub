// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#![allow(unused, clippy::all)]
use spacetimedb_sdk::__codegen::{self as __sdk, __lib, __sats, __ws};

use super::achievement_desc_type::AchievementDesc;
use super::alert_desc_type::AlertDesc;
use super::biome_desc_type::BiomeDesc;
use super::buff_desc_type::BuffDesc;
use super::buff_type_desc_type::BuffTypeDesc;
use super::building_claim_desc_type::BuildingClaimDesc;
use super::building_desc_type::BuildingDesc;
use super::building_portal_desc_type::BuildingPortalDesc;
use super::building_repairs_desc_type::BuildingRepairsDesc;
use super::building_spawn_desc_type::BuildingSpawnDesc;
use super::building_type_desc_type::BuildingTypeDesc;
use super::cargo_desc_type::CargoDesc;
use super::character_stat_desc_type::CharacterStatDesc;
use super::chest_rarity_desc_type::ChestRarityDesc;
use super::claim_tech_desc_type::ClaimTechDesc;
use super::claim_tile_cost_type::ClaimTileCost;
use super::climb_requirement_desc_type::ClimbRequirementDesc;
use super::clothing_desc_type::ClothingDesc;
use super::collectible_desc_type::CollectibleDesc;
use super::combat_action_desc_type::CombatActionDesc;
use super::construction_recipe_desc_type::ConstructionRecipeDesc;
use super::crafting_recipe_desc_type::CraftingRecipeDesc;
use super::deconstruction_recipe_desc_type::DeconstructionRecipeDesc;
use super::deployable_desc_type::DeployableDesc;
use super::distant_visible_entity_desc_type::DistantVisibleEntityDesc;
use super::elevator_desc_type::ElevatorDesc;
use super::emote_desc_type::EmoteDesc;
use super::empire_color_desc_type::EmpireColorDesc;
use super::empire_icon_desc_type::EmpireIconDesc;
use super::empire_notification_desc_type::EmpireNotificationDesc;
use super::empire_rank_desc_type::EmpireRankDesc;
use super::empire_supplies_desc_type::EmpireSuppliesDesc;
use super::empire_territory_desc_type::EmpireTerritoryDesc;
use super::enemy_ai_params_desc_type::EnemyAiParamsDesc;
use super::enemy_desc_type::EnemyDesc;
use super::environment_debuff_desc_type::EnvironmentDebuffDesc;
use super::equipment_desc_type::EquipmentDesc;
use super::extraction_recipe_desc_type::ExtractionRecipeDesc;
use super::food_desc_type::FoodDesc;
use super::gate_desc_type::GateDesc;
use super::hexite_exchange_entry_desc_type::HexiteExchangeEntryDesc;
use super::interior_environment_desc_type::InteriorEnvironmentDesc;
use super::interior_instance_desc_type::InteriorInstanceDesc;
use super::interior_network_desc_type::InteriorNetworkDesc;
use super::interior_portal_connections_desc_type::InteriorPortalConnectionsDesc;
use super::interior_shape_desc_type::InteriorShapeDesc;
use super::interior_spawn_desc_type::InteriorSpawnDesc;
use super::item_conversion_recipe_desc_type::ItemConversionRecipeDesc;
use super::item_desc_type::ItemDesc;
use super::item_list_desc_type::ItemListDesc;
use super::knowledge_scroll_desc_type::KnowledgeScrollDesc;
use super::knowledge_scroll_type_desc_type::KnowledgeScrollTypeDesc;
use super::knowledge_stat_modifier_desc_type::KnowledgeStatModifierDesc;
use super::loot_chest_desc_type::LootChestDesc;
use super::loot_rarity_desc_type::LootRarityDesc;
use super::loot_table_desc_type::LootTableDesc;
use super::npc_desc_type::NpcDesc;
use super::onboarding_reward_desc_type::OnboardingRewardDesc;
use super::parameters_desc_type::ParametersDesc;
use super::pathfinding_desc_type::PathfindingDesc;
use super::paving_tile_desc_type::PavingTileDesc;
use super::pillar_shaping_desc_type::PillarShapingDesc;
use super::player_action_desc_type::PlayerActionDesc;
use super::player_housing_desc_type::PlayerHousingDesc;
use super::private_parameters_desc_type::PrivateParametersDesc;
use super::reserved_name_desc_type::ReservedNameDesc;
use super::resource_clump_desc_type::ResourceClumpDesc;
use super::resource_desc_type::ResourceDesc;
use super::resource_growth_recipe_desc_type::ResourceGrowthRecipeDesc;
use super::resource_placement_recipe_desc_type::ResourcePlacementRecipeDesc;
use super::secondary_knowledge_desc_type::SecondaryKnowledgeDesc;
use super::skill_desc_type::SkillDesc;
use super::targeting_matrix_desc_type::TargetingMatrixDesc;
use super::teleport_item_desc_type::TeleportItemDesc;
use super::terraform_recipe_desc_type::TerraformRecipeDesc;
use super::tool_desc_type::ToolDesc;
use super::tool_type_desc_type::ToolTypeDesc;
use super::traveler_task_desc_type::TravelerTaskDesc;
use super::traveler_trade_order_desc_type::TravelerTradeOrderDesc;
use super::wall_desc_type::WallDesc;
use super::weapon_desc_type::WeaponDesc;
use super::weapon_type_desc_type::WeaponTypeDesc;

#[derive(__lib::ser::Serialize, __lib::de::Deserialize, Clone, PartialEq, Debug)]
#[sats(crate = __lib)]
pub struct StaticDataUpload {
    pub parameters: Vec<ParametersDesc>,
    pub private_parameters: Vec<PrivateParametersDesc>,
    pub secondary_knowledges: Vec<SecondaryKnowledgeDesc>,
    pub weapon_types: Vec<WeaponTypeDesc>,
    pub skills: Vec<SkillDesc>,
    pub targeting_matrices: Vec<TargetingMatrixDesc>,
    pub npcs: Vec<NpcDesc>,
    pub loot_rarities: Vec<LootRarityDesc>,
    pub knowledge_scroll_types: Vec<KnowledgeScrollTypeDesc>,
    pub items: Vec<ItemDesc>,
    pub enemy_ai_params: Vec<EnemyAiParamsDesc>,
    pub empire_ranks: Vec<EmpireRankDesc>,
    pub emotes: Vec<EmoteDesc>,
    pub climb_requirements: Vec<ClimbRequirementDesc>,
    pub claim_tile_costs: Vec<ClaimTileCost>,
    pub claim_tech: Vec<ClaimTechDesc>,
    pub character_stats: Vec<CharacterStatDesc>,
    pub cargos: Vec<CargoDesc>,
    pub building_types: Vec<BuildingTypeDesc>,
    pub buildings: Vec<BuildingDesc>,
    pub biomes: Vec<BiomeDesc>,
    pub interior_shapes: Vec<InteriorShapeDesc>,
    pub buff_types: Vec<BuffTypeDesc>,
    pub buffs: Vec<BuffDesc>,
    pub alerts: Vec<AlertDesc>,
    pub tool_types: Vec<ToolTypeDesc>,
    pub item_lists: Vec<ItemListDesc>,
    pub foods: Vec<FoodDesc>,
    pub achievements: Vec<AchievementDesc>,
    pub knowledge_stat_modifiers: Vec<KnowledgeStatModifierDesc>,
    pub interior_instances: Vec<InteriorInstanceDesc>,
    pub interior_environments: Vec<InteriorEnvironmentDesc>,
    pub interior_spawns: Vec<InteriorSpawnDesc>,
    pub building_portals: Vec<BuildingPortalDesc>,
    pub portal_connections: Vec<InteriorPortalConnectionsDesc>,
    pub building_interior_networks: Vec<InteriorNetworkDesc>,
    pub building_claims: Vec<BuildingClaimDesc>,
    pub building_repairs: Vec<BuildingRepairsDesc>,
    pub building_spawns: Vec<BuildingSpawnDesc>,
    pub chest_rarities: Vec<ChestRarityDesc>,
    pub clothing: Vec<ClothingDesc>,
    pub collectibles: Vec<CollectibleDesc>,
    pub combat_actions: Vec<CombatActionDesc>,
    pub construction: Vec<ConstructionRecipeDesc>,
    pub crafting: Vec<CraftingRecipeDesc>,
    pub desconstructions: Vec<DeconstructionRecipeDesc>,
    pub empire_supplies: Vec<EmpireSuppliesDesc>,
    pub enemies: Vec<EnemyDesc>,
    pub environment_debuffs: Vec<EnvironmentDebuffDesc>,
    pub equipment: Vec<EquipmentDesc>,
    pub extraction: Vec<ExtractionRecipeDesc>,
    pub item_conversion_recipes: Vec<ItemConversionRecipeDesc>,
    pub knowledge_scrolls: Vec<KnowledgeScrollDesc>,
    pub loot_chests: Vec<LootChestDesc>,
    pub loot_tables: Vec<LootTableDesc>,
    pub paving: Vec<PavingTileDesc>,
    pub pathfinding: Vec<PathfindingDesc>,
    pub pillar_shaping: Vec<PillarShapingDesc>,
    pub resources: Vec<ResourceDesc>,
    pub resource_clumps: Vec<ResourceClumpDesc>,
    pub resource_growths: Vec<ResourceGrowthRecipeDesc>,
    pub resource_placements: Vec<ResourcePlacementRecipeDesc>,
    pub teleport_items: Vec<TeleportItemDesc>,
    pub tools: Vec<ToolDesc>,
    pub traveler_tasks: Vec<TravelerTaskDesc>,
    pub traveler_trade_orders: Vec<TravelerTradeOrderDesc>,
    pub deployables: Vec<DeployableDesc>,
    pub weapons: Vec<WeaponDesc>,
    pub onboarding_rewards: Vec<OnboardingRewardDesc>,
    pub terraform_recipes: Vec<TerraformRecipeDesc>,
    pub empire_notifications: Vec<EmpireNotificationDesc>,
    pub empire_territories: Vec<EmpireTerritoryDesc>,
    pub empire_colors: Vec<EmpireColorDesc>,
    pub empire_icons: Vec<EmpireIconDesc>,
    pub walls: Vec<WallDesc>,
    pub gates: Vec<GateDesc>,
    pub elevators: Vec<ElevatorDesc>,
    pub player_actions: Vec<PlayerActionDesc>,
    pub distant_visibile_entities: Vec<DistantVisibleEntityDesc>,
    pub player_housing: Vec<PlayerHousingDesc>,
    pub hexite_exchange_entries: Vec<HexiteExchangeEntryDesc>,
    pub reserved_name: Vec<ReservedNameDesc>,
}

impl __sdk::InModule for StaticDataUpload {
    type Module = super::RemoteModule;
}
