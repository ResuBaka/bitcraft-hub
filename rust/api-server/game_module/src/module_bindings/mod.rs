// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.2.0 (commit fb41e50eb73573b70eea532aeb6158eaac06fae0).

#![allow(unused, clippy::all)]
use spacetimedb_sdk::__codegen::{self as __sdk, __lib, __sats, __ws};

pub mod a_i_debug_state_table;
pub mod achievement_claim_reducer;
pub mod achievement_desc_table;
pub mod achievement_desc_type;
pub mod acquire_knowledge_from_entities_reducer;
pub mod action_cooldown_type;
pub mod action_state_table;
pub mod action_state_type;
pub mod active_buff_state_table;
pub mod active_buff_state_type;
pub mod active_buff_type;
pub mod admin_alpha_3_complete_onboarding_reducer;
pub mod admin_alpha_3_reset_onboarding_to_fifth_temple_quest_reducer;
pub mod admin_alpha_3_reset_onboarding_to_first_expand_quest_reducer;
pub mod admin_alpha_3_reset_onboarding_to_first_temple_quest_reducer;
pub mod admin_alpha_3_reset_onboarding_to_fourth_expand_quest_reducer;
pub mod admin_alpha_3_reset_onboarding_to_fourth_temple_quest_reducer;
pub mod admin_alpha_3_reset_onboarding_to_second_expand_quest_reducer;
pub mod admin_alpha_3_reset_onboarding_to_second_temple_quest_reducer;
pub mod admin_alpha_3_reset_onboarding_to_third_expand_quest_reducer;
pub mod admin_alpha_3_reset_onboarding_to_third_temple_quest_reducer;
pub mod admin_broadcast_message_msg_type;
pub mod admin_broadcast_msg_region_reducer;
pub mod admin_broadcast_table;
pub mod admin_broadcast_type;
pub mod admin_clear_all_resources_reducer;
pub mod admin_collapse_ruin_reducer;
pub mod admin_collapse_ruins_reducer;
pub mod admin_complete_all_passive_crafts_reducer;
pub mod admin_count_inventory_items_reducer;
pub mod admin_despawn_overworld_enemies_reducer;
pub mod admin_grant_collectibles_reducer;
pub mod admin_reset_all_herd_locations_reducer;
pub mod admin_reset_herd_locations_reducer;
pub mod admin_reset_onboarding_completely_reducer;
pub mod admin_restore_all_collapsed_ruins_reducer;
pub mod admin_restore_player_state_reducer;
pub mod admin_restore_player_state_scheduled_reducer;
pub mod admin_restore_player_state_timer_table;
pub mod admin_restore_player_state_timer_type;
pub mod admin_sign_out_all_region_reducer;
pub mod admin_sign_out_reducer;
pub mod admin_sign_out_string_reducer;
pub mod admin_update_light_source_states_reducer;
pub mod ai_debug_state_type;
pub mod alert_desc_table;
pub mod alert_desc_type;
pub mod alert_state_table;
pub mod alert_state_type;
pub mod alert_type_type;
pub mod attached_herds_state_table;
pub mod attached_herds_state_type;
pub mod attack_impact_reducer;
pub mod attack_impact_timer_table;
pub mod attack_impact_timer_type;
pub mod attack_outcome_state_table;
pub mod attack_outcome_state_type;
pub mod attack_reducer;
pub mod attack_scheduled_reducer;
pub mod attack_start_reducer;
pub mod attack_timer_table;
pub mod attack_timer_type;
pub mod auction_listing_state_type;
pub mod auto_claim_state_table;
pub mod auto_claim_state_type;
pub mod auto_logout_loop_reducer;
pub mod auto_logout_loop_timer_table;
pub mod auto_logout_loop_timer_type;
pub mod barter_stall_order_accept_reducer;
pub mod barter_stall_order_create_reducer;
pub mod barter_stall_order_delete_reducer;
pub mod barter_stall_set_market_mode_enabled_reducer;
pub mod barter_stall_set_market_mode_enabled_request_type;
pub mod barter_stall_state_table;
pub mod barter_stall_state_type;
pub mod biome_desc_table;
pub mod biome_desc_type;
pub mod biome_type;
pub mod blueprint_place_reducer;
pub mod buff_category_type;
pub mod buff_desc_table;
pub mod buff_desc_type;
pub mod buff_effect_type;
pub mod buff_type_desc_table;
pub mod buff_type_desc_type;
pub mod building_category_type;
pub mod building_claim_desc_table;
pub mod building_claim_desc_type;
pub mod building_decay_agent_loop_reducer;
pub mod building_decay_loop_timer_table;
pub mod building_decay_loop_timer_type;
pub mod building_deconstruct_reducer;
pub mod building_deconstruct_start_reducer;
pub mod building_desc_table;
pub mod building_desc_type;
pub mod building_despawn_reducer;
pub mod building_despawn_timer_table;
pub mod building_despawn_timer_type;
pub mod building_function_type;
pub mod building_function_type_mapping_desc_table;
pub mod building_function_type_mapping_desc_type;
pub mod building_interaction_level_type;
pub mod building_move_reducer;
pub mod building_nickname_state_op_type;
pub mod building_nickname_state_table;
pub mod building_nickname_state_type;
pub mod building_portal_desc_table;
pub mod building_portal_desc_type;
pub mod building_repair_reducer;
pub mod building_repair_start_reducer;
pub mod building_repairs_desc_table;
pub mod building_repairs_desc_type;
pub mod building_requirement_type;
pub mod building_set_nickname_reducer;
pub mod building_set_sign_text_reducer;
pub mod building_set_sign_text_request_type;
pub mod building_spawn_desc_table;
pub mod building_spawn_desc_type;
pub mod building_spawn_type_type;
pub mod building_state_op_type;
pub mod building_state_table;
pub mod building_state_type;
pub mod building_type_desc_table;
pub mod building_type_desc_type;
pub mod buy_order_state_table;
pub mod capped_level_requirement_type;
pub mod cargo_desc_table;
pub mod cargo_desc_type;
pub mod character_stat_desc_table;
pub mod character_stat_desc_type;
pub mod character_stat_type_type;
pub mod character_stats_state_table;
pub mod character_stats_state_type;
pub mod chat_channel_type;
pub mod chat_message_state_table;
pub mod chat_message_state_type;
pub mod chat_post_message_reducer;
pub mod cheat_building_move_reducer;
pub mod cheat_building_place_reducer;
pub mod cheat_cargo_grant_reducer;
pub mod cheat_cargo_grant_request_type;
pub mod cheat_claim_take_ownership_reducer;
pub mod cheat_claim_totem_add_supplies_reducer;
pub mod cheat_claim_totem_complete_current_research_reducer;
pub mod cheat_claim_totem_research_all_reducer;
pub mod cheat_clear_buffs_and_debuffs_reducer;
pub mod cheat_compendium_enemy_place_request_type;
pub mod cheat_compendium_item_place_request_type;
pub mod cheat_compendium_place_enemy_reducer;
pub mod cheat_compendium_place_resource_reducer;
pub mod cheat_delete_item_reducer;
pub mod cheat_deployable_store_reducer;
pub mod cheat_discover_map_reducer;
pub mod cheat_discover_map_request_type;
pub mod cheat_experience_grant_reducer;
pub mod cheat_experience_grant_request_type;
pub mod cheat_grant_knowledge_reducer;
pub mod cheat_grant_knowledge_request_type;
pub mod cheat_grant_teleport_energy_reducer;
pub mod cheat_item_stack_grant_and_equip_reducer;
pub mod cheat_item_stack_grant_reducer;
pub mod cheat_item_stack_grant_request_type;
pub mod cheat_kill_reducer;
pub mod cheat_paving_add_tile_reducer;
pub mod cheat_paving_destroy_reducer;
pub mod cheat_pillar_shaping_add_pillar_reducer;
pub mod cheat_pillar_shaping_destroy_reducer;
pub mod cheat_project_site_add_all_materials_reducer;
pub mod cheat_remove_entity_building_reducer;
pub mod cheat_remove_entity_enemy_reducer;
pub mod cheat_remove_entity_request_type;
pub mod cheat_remove_entity_resource_reducer;
pub mod cheat_set_ai_debug_state_reducer;
pub mod cheat_set_debug_ai_state_request_type;
pub mod cheat_spawn_loot_chest_reducer;
pub mod cheat_spawn_loot_chest_request_type;
pub mod cheat_teleport_float_reducer;
pub mod cheat_teleport_float_request_type;
pub mod cheat_terraform_reducer;
pub mod cheat_terraform_request_type;
pub mod cheat_toggle_active_collectible_reducer;
pub mod cheat_toggle_active_collectible_request_type;
pub mod cheat_warp_reducer;
pub mod cheat_warp_request_type;
pub mod chest_loot_rarity_type;
pub mod chest_rarity_desc_table;
pub mod chest_rarity_desc_type;
pub mod chunk_coordinates_message_type;
pub mod claim_add_member_reducer;
pub mod claim_add_recruitment_reducer;
pub mod claim_add_tile_reducer;
pub mod claim_apply_for_recruitment_reducer;
pub mod claim_create_empire_settlement_msg_type;
pub mod claim_leave_reducer;
pub mod claim_local_state_table;
pub mod claim_local_state_type;
pub mod claim_member_state_op_type;
pub mod claim_member_state_table;
pub mod claim_member_state_type;
pub mod claim_permission_type;
pub mod claim_purchase_supplies_from_player_reducer;
pub mod claim_purchase_supplies_from_player_request_type;
pub mod claim_recruitment_state_table;
pub mod claim_recruitment_state_type;
pub mod claim_remove_member_reducer;
pub mod claim_remove_recruitment_reducer;
pub mod claim_remove_tile_reducer;
pub mod claim_rename_reducer;
pub mod claim_resupply_reducer;
pub mod claim_resupply_request_type;
pub mod claim_resupply_start_reducer;
pub mod claim_set_member_permissions_reducer;
pub mod claim_set_purchase_supply_price_reducer;
pub mod claim_set_purchase_supply_price_request_type;
pub mod claim_set_purchase_supply_threshold_reducer;
pub mod claim_set_purchase_supply_threshold_request_type;
pub mod claim_state_op_type;
pub mod claim_state_table;
pub mod claim_state_type;
pub mod claim_take_ownership_reducer;
pub mod claim_tech_cancel_reducer;
pub mod claim_tech_desc_table;
pub mod claim_tech_desc_type;
pub mod claim_tech_learn_reducer;
pub mod claim_tech_state_table;
pub mod claim_tech_state_type;
pub mod claim_tech_unlock_tech_reducer;
pub mod claim_tech_unlock_timer_table;
pub mod claim_tech_unlock_timer_type;
pub mod claim_tile_cost_table;
pub mod claim_tile_cost_type;
pub mod claim_tile_state_table;
pub mod claim_tile_state_type;
pub mod claim_transfer_ownership_reducer;
pub mod claim_type_type;
pub mod claim_withdraw_from_treasury_reducer;
pub mod clear_staged_static_data_reducer;
pub mod climb_requirement_desc_table;
pub mod climb_requirement_desc_type;
pub mod closed_listing_collect_reducer;
pub mod closed_listing_state_table;
pub mod closed_listing_state_type;
pub mod clothing_desc_table;
pub mod clothing_desc_type;
pub mod clothing_mask_type;
pub mod clothing_visual_type;
pub mod collect_stats_reducer_reducer;
pub mod collect_stats_timer_table;
pub mod collect_stats_timer_type;
pub mod collectible_activate_reducer;
pub mod collectible_desc_table;
pub mod collectible_desc_type;
pub mod collectible_type_type;
pub mod combat_action_desc_table;
pub mod combat_action_desc_type;
pub mod combat_state_table;
pub mod combat_state_type;
pub mod commit_staged_static_data_reducer;
pub mod common_rng_type;
pub mod complete_onboarding_quest_reducer;
pub mod complete_onboarding_state_reducer;
pub mod config_table;
pub mod config_type;
pub mod construction_recipe_desc_table;
pub mod construction_recipe_desc_type;
pub mod convert_collectible_to_deed_reducer;
pub mod convert_deed_to_collectible_reducer;
pub mod craft_cancel_reducer;
pub mod craft_collect_all_reducer;
pub mod craft_collect_reducer;
pub mod craft_continue_reducer;
pub mod craft_continue_start_reducer;
pub mod craft_initiate_reducer;
pub mod craft_initiate_start_reducer;
pub mod crafting_recipe_desc_table;
pub mod crafting_recipe_desc_type;
pub mod csv_stat_entry_type;
pub mod current_version_reducer;
pub mod day_night_agent_loop_reducer;
pub mod day_night_loop_timer_table;
pub mod day_night_loop_timer_type;
pub mod deconstruction_recipe_desc_table;
pub mod deconstruction_recipe_desc_type;
pub mod delete_all_npcs_reducer;
pub mod delete_empire_msg_type;
pub mod deployable_collectible_state_table;
pub mod deployable_collectible_state_type;
pub mod deployable_deploy_reducer;
pub mod deployable_deploy_request_type;
pub mod deployable_deploy_start_reducer;
pub mod deployable_desc_table;
pub mod deployable_desc_type;
pub mod deployable_dismount_reducer;
pub mod deployable_dismount_scheduled_reducer;
pub mod deployable_dismount_timer_table;
pub mod deployable_dismount_timer_type;
pub mod deployable_mount_reducer;
pub mod deployable_move_off_claim_reducer;
pub mod deployable_move_reducer;
pub mod deployable_state_table;
pub mod deployable_state_type;
pub mod deployable_store_reducer;
pub mod deployable_store_request_type;
pub mod deployable_store_start_reducer;
pub mod deployable_type_type;
pub mod destroy_dimension_network_reducer;
pub mod destroy_dimension_network_timer_table;
pub mod destroy_dimension_network_timer_type;
pub mod dev_delete_world_reducer;
pub mod dimension_description_state_table;
pub mod dimension_description_state_type;
pub mod dimension_network_state_table;
pub mod dimension_network_state_type;
pub mod dimension_type_type;
pub mod discover_entities_reducer;
pub mod distant_visible_entity_desc_table;
pub mod distant_visible_entity_desc_type;
pub mod distant_visible_entity_table;
pub mod distant_visible_entity_type;
pub mod dropped_inventory_despawn_reducer;
pub mod dropped_inventory_despawn_timer_table;
pub mod dropped_inventory_despawn_timer_type;
pub mod dropped_inventory_lose_ownership_reducer;
pub mod dropped_inventory_ownership_timer_table;
pub mod dropped_inventory_ownership_timer_type;
pub mod dropped_inventory_state_table;
pub mod dropped_inventory_state_type;
pub mod duel_agent_timer_loop_reducer;
pub mod duel_agent_timer_table;
pub mod duel_agent_timer_type;
pub mod duel_despawn_reducer;
pub mod duel_despawn_timer_table;
pub mod duel_despawn_timer_type;
pub mod duel_state_table;
pub mod duel_state_type;
pub mod eat_reducer;
pub mod elevator_desc_table;
pub mod elevator_desc_type;
pub mod emote_desc_table;
pub mod emote_desc_type;
pub mod emote_reducer;
pub mod emote_start_reducer;
pub mod empire_add_siege_supplies_reducer;
pub mod empire_add_siege_supplies_request_type;
pub mod empire_chunk_state_op_type;
pub mod empire_chunk_state_table;
pub mod empire_chunk_state_type;
pub mod empire_claim_join_msg_type;
pub mod empire_claim_join_reducer;
pub mod empire_collect_hexite_capsule_msg_type;
pub mod empire_collect_hexite_capsule_reducer;
pub mod empire_collect_hexite_capsule_request_type;
pub mod empire_color_desc_table;
pub mod empire_color_desc_type;
pub mod empire_create_building_msg_type;
pub mod empire_deploy_siege_engine_reducer;
pub mod empire_deploy_siege_engine_start_reducer;
pub mod empire_expansion_state_op_type;
pub mod empire_expansion_state_table;
pub mod empire_expansion_state_type;
pub mod empire_icon_desc_table;
pub mod empire_icon_desc_type;
pub mod empire_node_siege_state_op_type;
pub mod empire_node_siege_state_table;
pub mod empire_node_siege_state_type;
pub mod empire_node_state_op_type;
pub mod empire_node_state_table;
pub mod empire_node_state_type;
pub mod empire_notification_desc_table;
pub mod empire_notification_desc_type;
pub mod empire_notification_type_type;
pub mod empire_player_data_state_op_type;
pub mod empire_player_data_state_table;
pub mod empire_player_data_state_type;
pub mod empire_queue_supplies_msg_type;
pub mod empire_queue_supplies_reducer;
pub mod empire_queue_supplies_request_type;
pub mod empire_rank_desc_table;
pub mod empire_rank_desc_type;
pub mod empire_rank_state_op_type;
pub mod empire_rank_state_table;
pub mod empire_rank_state_type;
pub mod empire_remove_crown_msg_type;
pub mod empire_resupply_node_msg_type;
pub mod empire_resupply_node_reducer;
pub mod empire_resupply_node_request_type;
pub mod empire_resupply_node_start_reducer;
pub mod empire_settlement_state_op_type;
pub mod empire_settlement_state_table;
pub mod empire_settlement_state_type;
pub mod empire_siege_add_supplies_msg_type;
pub mod empire_siege_depleted_watchtower_reducer;
pub mod empire_start_siege_msg_type;
pub mod empire_start_siege_request_type;
pub mod empire_state_op_type;
pub mod empire_state_table;
pub mod empire_state_type;
pub mod empire_supplies_desc_table;
pub mod empire_supplies_desc_type;
pub mod empire_territory_desc_table;
pub mod empire_territory_desc_type;
pub mod empire_update_emperor_crown_msg_type;
pub mod end_grace_period_reducer;
pub mod end_grace_period_timer_table;
pub mod end_grace_period_timer_type;
pub mod enemy_ai_params_desc_table;
pub mod enemy_ai_params_desc_type;
pub mod enemy_clear_aggro_reducer;
pub mod enemy_clear_aggro_request_type;
pub mod enemy_desc_table;
pub mod enemy_desc_type;
pub mod enemy_despawn_from_mob_monitor_batch_reducer;
pub mod enemy_despawn_from_mob_monitor_reducer;
pub mod enemy_despawn_reducer;
pub mod enemy_despawn_timer_table;
pub mod enemy_despawn_timer_type;
pub mod enemy_mob_monitor_state_table;
pub mod enemy_mob_monitor_state_type;
pub mod enemy_move_batch_reducer;
pub mod enemy_move_reducer;
pub mod enemy_move_request_type;
pub mod enemy_regen_agent_loop_reducer;
pub mod enemy_regen_loop_timer_table;
pub mod enemy_regen_loop_timer_type;
pub mod enemy_set_health_batch_reducer;
pub mod enemy_set_health_reducer;
pub mod enemy_set_health_request_type;
pub mod enemy_spawn_batch_reducer;
pub mod enemy_spawn_loot_reducer;
pub mod enemy_spawn_loot_request_type;
pub mod enemy_spawn_reducer;
pub mod enemy_spawn_request_type;
pub mod enemy_state_table;
pub mod enemy_state_type;
pub mod enemy_status_type;
pub mod enemy_type_type;
pub mod entity_attack_request_type;
pub mod entity_type_type;
pub mod environment_debuff_agent_loop_reducer;
pub mod environment_debuff_desc_table;
pub mod environment_debuff_desc_type;
pub mod environment_debuff_loop_timer_table;
pub mod environment_debuff_loop_timer_type;
pub mod environment_resistance_type_type;
pub mod equipment_add_reducer;
pub mod equipment_desc_table;
pub mod equipment_desc_type;
pub mod equipment_remove_reducer;
pub mod equipment_slot_type;
pub mod equipment_slot_type_type;
pub mod equipment_state_table;
pub mod equipment_state_type;
pub mod equipment_visual_type_type;
pub mod experience_stack_f_32_type;
pub mod experience_stack_type;
pub mod experience_state_table;
pub mod experience_state_type;
pub mod exploration_chunks_state_table;
pub mod exploration_chunks_state_type;
pub mod extract_outcome_state_table;
pub mod extract_outcome_state_type;
pub mod extract_reducer;
pub mod extract_start_reducer;
pub mod extraction_recipe_desc_table;
pub mod extraction_recipe_desc_type;
pub mod float_hex_tile_message_type;
pub mod food_desc_table;
pub mod food_desc_type;
pub mod footprint_tile_state_table;
pub mod footprint_tile_state_type;
pub mod footprint_tile_type;
pub mod footprint_type_type;
pub mod force_generate_types_table;
pub mod force_generate_types_type;
pub mod force_start_agents_reducer;
pub mod gate_desc_table;
pub mod gate_desc_type;
pub mod generate_dev_island_reducer;
pub mod generate_flat_world_reducer;
pub mod generate_world_reducer;
pub mod global_delete_empire_building_msg_type;
pub mod global_search_state_table;
pub mod global_search_state_type;
pub mod globals_table;
pub mod globals_type;
pub mod grace_period_type_type;
pub mod grant_hub_item_msg_type;
pub mod growth_agent_loop_reducer;
pub mod growth_loop_timer_table;
pub mod growth_loop_timer_type;
pub mod growth_state_table;
pub mod growth_state_type;
pub mod hand_equipment_visual_type;
pub mod health_state_table;
pub mod health_state_type;
pub mod herd_state_table;
pub mod herd_state_type;
pub mod hex_direction_type;
pub mod hexite_exchange_entry_desc_table;
pub mod hexite_exchange_entry_desc_type;
pub mod hide_deployable_reducer;
pub mod hide_deployable_timer_table;
pub mod hide_deployable_timer_type;
pub mod hub_item_type_type;
pub mod identity_connected_reducer;
pub mod identity_disconnected_reducer;
pub mod identity_role_op_type;
pub mod identity_role_table;
pub mod identity_role_type;
pub mod import_achievement_desc_reducer;
pub mod import_active_buff_state_reducer;
pub mod import_admin_broadcast_reducer;
pub mod import_alert_desc_reducer;
pub mod import_alert_state_reducer;
pub mod import_attack_outcome_state_reducer;
pub mod import_biome_desc_reducer;
pub mod import_buff_desc_reducer;
pub mod import_buff_type_desc_reducer;
pub mod import_building_claim_desc_reducer;
pub mod import_building_desc_reducer;
pub mod import_building_portal_desc_reducer;
pub mod import_building_repairs_desc_reducer;
pub mod import_building_spawn_desc_reducer;
pub mod import_building_state_reducer;
pub mod import_building_type_desc_reducer;
pub mod import_cargo_desc_reducer;
pub mod import_character_stat_desc_reducer;
pub mod import_character_stats_state_reducer;
pub mod import_chat_message_state_reducer;
pub mod import_chest_rarity_desc_reducer;
pub mod import_claim_local_state_reducer;
pub mod import_claim_recruitment_state_reducer;
pub mod import_claim_state_reducer;
pub mod import_claim_tech_desc_reducer;
pub mod import_claim_tech_state_reducer;
pub mod import_claim_tile_cost_reducer;
pub mod import_claim_tile_state_reducer;
pub mod import_climb_requirement_desc_reducer;
pub mod import_clothing_desc_reducer;
pub mod import_collectible_desc_reducer;
pub mod import_combat_action_desc_reducer;
pub mod import_combat_state_reducer;
pub mod import_config_reducer;
pub mod import_construction_recipe_desc_reducer;
pub mod import_crafting_recipe_desc_reducer;
pub mod import_deconstruction_recipe_desc_reducer;
pub mod import_deployable_desc_reducer;
pub mod import_deployable_state_reducer;
pub mod import_dimension_description_state_reducer;
pub mod import_dimension_network_description_state_reducer;
pub mod import_distant_visible_entity_desc_reducer;
pub mod import_dropped_inventory_state_reducer;
pub mod import_elevator_desc_reducer;
pub mod import_emote_desc_reducer;
pub mod import_empire_colors_desc_reducer;
pub mod import_empire_icon_desc_reducer;
pub mod import_empire_notification_desc_reducer;
pub mod import_empire_rank_desc_reducer;
pub mod import_empire_supplies_desc_reducer;
pub mod import_empire_territory_desc_reducer;
pub mod import_enemy_ai_params_desc_reducer;
pub mod import_enemy_desc_reducer;
pub mod import_enemy_state_reducer;
pub mod import_environment_debuff_desc_reducer;
pub mod import_equipment_desc_reducer;
pub mod import_equipment_state_reducer;
pub mod import_experience_state_reducer;
pub mod import_exploration_chunks_state_reducer;
pub mod import_extraction_recipe_desc_reducer;
pub mod import_food_desc_reducer;
pub mod import_footprint_tile_state_reducer;
pub mod import_gate_desc_reducer;
pub mod import_globals_reducer;
pub mod import_growth_state_reducer;
pub mod import_health_state_reducer;
pub mod import_herd_cache_reducer;
pub mod import_hexite_exchange_entry_desc_reducer;
pub mod import_identity_role_reducer;
pub mod import_interior_collapse_trigger_state_reducer;
pub mod import_interior_environment_desc_reducer;
pub mod import_interior_instance_desc_reducer;
pub mod import_interior_network_desc_reducer;
pub mod import_interior_portal_connections_desc_reducer;
pub mod import_interior_shape_desc_reducer;
pub mod import_interior_spawn_desc_reducer;
pub mod import_inventory_state_reducer;
pub mod import_item_conversion_recipe_desc_reducer;
pub mod import_item_desc_reducer;
pub mod import_item_list_desc_reducer;
pub mod import_knowledge_achievement_state_reducer;
pub mod import_knowledge_battle_action_state_reducer;
pub mod import_knowledge_building_state_reducer;
pub mod import_knowledge_cargo_state_reducer;
pub mod import_knowledge_construction_state_reducer;
pub mod import_knowledge_craft_state_reducer;
pub mod import_knowledge_deployable_state_reducer;
pub mod import_knowledge_enemy_state_reducer;
pub mod import_knowledge_extract_state_reducer;
pub mod import_knowledge_item_state_reducer;
pub mod import_knowledge_lore_state_reducer;
pub mod import_knowledge_npc_state_reducer;
pub mod import_knowledge_paving_state_reducer;
pub mod import_knowledge_pillar_shaping_state_reducer;
pub mod import_knowledge_resource_placement_state_reducer;
pub mod import_knowledge_resource_state_reducer;
pub mod import_knowledge_ruins_state_reducer;
pub mod import_knowledge_scroll_desc_reducer;
pub mod import_knowledge_scroll_type_desc_reducer;
pub mod import_knowledge_secondary_state_reducer;
pub mod import_knowledge_stat_modifier_desc_reducer;
pub mod import_knowledge_vault_state_reducer;
pub mod import_location_cache_reducer;
pub mod import_location_state_reducer;
pub mod import_loot_chest_desc_reducer;
pub mod import_loot_chest_state_reducer;
pub mod import_loot_rarity_desc_reducer;
pub mod import_loot_table_desc_reducer;
pub mod import_mobile_entity_state_reducer;
pub mod import_mounting_state_reducer;
pub mod import_npc_desc_reducer;
pub mod import_npc_state_reducer;
pub mod import_onboarding_reward_desc_reducer;
pub mod import_onboarding_state_reducer;
pub mod import_parameters_desc_reducer;
pub mod import_pathfinding_desc_reducer;
pub mod import_paved_tile_state_reducer;
pub mod import_paving_tile_desc_reducer;
pub mod import_pillar_shaping_desc_reducer;
pub mod import_player_action_desc_reducer;
pub mod import_player_action_state_reducer;
pub mod import_player_housing_desc_reducer;
pub mod import_player_prefs_state_reducer;
pub mod import_player_state_reducer;
pub mod import_portal_state_reducer;
pub mod import_private_parameters_desc_reducer;
pub mod import_progressive_action_state_reducer;
pub mod import_project_site_state_reducer;
pub mod import_rent_state_reducer;
pub mod import_resource_clump_desc_reducer;
pub mod import_resource_count_reducer;
pub mod import_resource_desc_reducer;
pub mod import_resource_growth_recipe_desc_reducer;
pub mod import_resource_placement_recipe_desc_reducer;
pub mod import_resource_state_reducer;
pub mod import_resources_log_reducer;
pub mod import_satiation_state_reducer;
pub mod import_secondary_knowledge_desc_reducer;
pub mod import_server_identity_reducer;
pub mod import_signed_in_player_state_reducer;
pub mod import_skill_desc_reducer;
pub mod import_stamina_state_reducer;
pub mod import_target_state_reducer;
pub mod import_targetable_state_reducer;
pub mod import_targeting_matrix_desc_reducer;
pub mod import_teleport_item_desc_reducer;
pub mod import_terraform_recipe_desc_reducer;
pub mod import_terrain_chunk_state_reducer;
pub mod import_tool_desc_reducer;
pub mod import_tool_type_desc_reducer;
pub mod import_trade_order_state_reducer;
pub mod import_trade_session_state_reducer;
pub mod import_traveler_task_desc_reducer;
pub mod import_traveler_trade_order_desc_reducer;
pub mod import_user_moderation_state_reducer;
pub mod import_user_state_reducer;
pub mod import_vault_state_reducer;
pub mod import_wall_desc_reducer;
pub mod import_weapon_desc_reducer;
pub mod import_weapon_type_desc_reducer;
pub mod import_world_region_name_state_reducer;
pub mod import_world_region_state_reducer;
pub mod input_item_stack_type;
pub mod insert_resources_log_reducer;
pub mod insert_terrain_chunk_reducer;
pub mod inter_module_message_counter_table;
pub mod inter_module_message_counter_type;
pub mod inter_module_message_table;
pub mod inter_module_message_type;
pub mod inter_module_response_message_counter_table;
pub mod inter_module_response_message_counter_type;
pub mod inter_module_table_updates_type;
pub mod interior_collapse_trigger_state_table;
pub mod interior_collapse_trigger_state_type;
pub mod interior_environment_desc_table;
pub mod interior_environment_desc_type;
pub mod interior_instance_desc_table;
pub mod interior_instance_desc_type;
pub mod interior_network_desc_table;
pub mod interior_network_desc_type;
pub mod interior_portal_connections_desc_table;
pub mod interior_portal_connections_desc_type;
pub mod interior_set_collapsed_reducer;
pub mod interior_set_collapsed_scheduled_reducer;
pub mod interior_set_collapsed_timer_table;
pub mod interior_set_collapsed_timer_type;
pub mod interior_shape_desc_table;
pub mod interior_shape_desc_type;
pub mod interior_spawn_desc_table;
pub mod interior_spawn_desc_type;
pub mod interior_spawn_type_type;
pub mod inventory_create_personal_reducer;
pub mod inventory_sort_reducer;
pub mod inventory_state_table;
pub mod inventory_state_type;
pub mod item_conversion_location_context_type;
pub mod item_conversion_recipe_desc_table;
pub mod item_conversion_recipe_desc_type;
pub mod item_convert_reducer;
pub mod item_convert_start_reducer;
pub mod item_desc_table;
pub mod item_desc_type;
pub mod item_drop_reducer;
pub mod item_list_desc_table;
pub mod item_list_desc_type;
pub mod item_list_possibility_type;
pub mod item_pick_up_reducer;
pub mod item_stack_move_all_reducer;
pub mod item_stack_move_reducer;
pub mod item_stack_split_reducer;
pub mod item_stack_type;
pub mod item_type_type;
pub mod item_use_reducer;
pub mod item_use_start_reducer;
pub mod knowledge_achievement_state_table;
pub mod knowledge_achievement_state_type;
pub mod knowledge_battle_action_state_table;
pub mod knowledge_battle_action_state_type;
pub mod knowledge_building_state_table;
pub mod knowledge_building_state_type;
pub mod knowledge_cargo_state_table;
pub mod knowledge_cargo_state_type;
pub mod knowledge_claim_state_table;
pub mod knowledge_claim_state_type;
pub mod knowledge_construction_state_table;
pub mod knowledge_construction_state_type;
pub mod knowledge_craft_state_table;
pub mod knowledge_craft_state_type;
pub mod knowledge_deployable_state_table;
pub mod knowledge_deployable_state_type;
pub mod knowledge_enemy_state_table;
pub mod knowledge_enemy_state_type;
pub mod knowledge_entity_entry_type;
pub mod knowledge_entry_type;
pub mod knowledge_extract_state_table;
pub mod knowledge_extract_state_type;
pub mod knowledge_item_state_table;
pub mod knowledge_item_state_type;
pub mod knowledge_location_entry_type;
pub mod knowledge_lore_state_table;
pub mod knowledge_lore_state_type;
pub mod knowledge_npc_state_table;
pub mod knowledge_npc_state_type;
pub mod knowledge_paving_state_table;
pub mod knowledge_paving_state_type;
pub mod knowledge_pillar_shaping_state_table;
pub mod knowledge_pillar_shaping_state_type;
pub mod knowledge_resource_placement_state_table;
pub mod knowledge_resource_placement_state_type;
pub mod knowledge_resource_state_table;
pub mod knowledge_resource_state_type;
pub mod knowledge_ruins_state_table;
pub mod knowledge_ruins_state_type;
pub mod knowledge_scroll_desc_table;
pub mod knowledge_scroll_desc_type;
pub mod knowledge_scroll_type_desc_table;
pub mod knowledge_scroll_type_desc_type;
pub mod knowledge_secondary_state_table;
pub mod knowledge_secondary_state_type;
pub mod knowledge_stat_modifier_desc_table;
pub mod knowledge_stat_modifier_desc_type;
pub mod knowledge_state_type;
pub mod knowledge_vault_state_table;
pub mod knowledge_vault_state_type;
pub mod large_hex_tile_message_type;
pub mod level_requirement_type;
pub mod light_source_state_table;
pub mod light_source_state_type;
pub mod load_config_reducer;
pub mod location_cache_table;
pub mod location_cache_type;
pub mod location_state_op_type;
pub mod location_state_table;
pub mod location_state_type;
pub mod log_claim_member_leaderboard_reducer;
pub mod log_claim_tier_leaderboard_reducer;
pub mod loot_chest_desc_table;
pub mod loot_chest_desc_type;
pub mod loot_chest_despawn_reducer;
pub mod loot_chest_despawn_timer_table;
pub mod loot_chest_despawn_timer_type;
pub mod loot_chest_spawn_reducer;
pub mod loot_chest_spawn_timer_table;
pub mod loot_chest_spawn_timer_type;
pub mod loot_chest_state_table;
pub mod loot_chest_state_type;
pub mod loot_rarity_desc_table;
pub mod loot_rarity_desc_type;
pub mod loot_table_desc_table;
pub mod loot_table_desc_type;
pub mod lost_items_state_table;
pub mod lost_items_state_type;
pub mod message_contents_type;
pub mod mobile_entity_state_table;
pub mod mobile_entity_state_type;
pub mod mounting_state_table;
pub mod mounting_state_type;
pub mod move_validation_params_desc_type;
pub mod move_validation_strike_counter_state_table;
pub mod move_validation_strike_counter_state_type;
pub mod movement_speed_type;
pub mod movement_type_type;
pub mod notification_severity_type;
pub mod npc_ai_agent_loop_reducer;
pub mod npc_ai_loop_timer_table;
pub mod npc_ai_loop_timer_type;
pub mod npc_desc_table;
pub mod npc_desc_type;
pub mod npc_state_table;
pub mod npc_state_type;
pub mod npc_type_type;
pub mod offset_coordinates_float_type;
pub mod offset_coordinates_large_message_type;
pub mod offset_coordinates_small_message_type;
pub mod on_claim_members_changed_msg_type;
pub mod on_durability_zero_reducer;
pub mod on_durability_zero_timer_table;
pub mod on_durability_zero_timer_type;
pub mod on_empire_building_deleted_msg_type;
pub mod on_inter_module_message_processed_reducer;
pub mod on_player_joined_empire_msg_type;
pub mod on_player_left_empire_msg_type;
pub mod on_player_name_set_msg_type;
pub mod on_region_player_created_msg_type;
pub mod onboarding_reward_desc_table;
pub mod onboarding_reward_desc_type;
pub mod onboarding_state_table;
pub mod onboarding_state_type;
pub mod online_timestamp_type;
pub mod order_cancel_reducer;
pub mod order_collect_reducer;
pub mod order_edit_buy_order_reducer;
pub mod order_edit_sell_order_reducer;
pub mod order_post_buy_order_reducer;
pub mod order_post_sell_order_reducer;
pub mod parameters_desc_table;
pub mod parameters_desc_type;
pub mod parameters_player_move_desc_table;
pub mod parameters_player_move_desc_type;
pub mod passive_craft_cancel_reducer;
pub mod passive_craft_collect_all_reducer;
pub mod passive_craft_collect_reducer;
pub mod passive_craft_process_reducer;
pub mod passive_craft_queue_reducer;
pub mod passive_craft_state_table;
pub mod passive_craft_state_type;
pub mod passive_craft_status_type;
pub mod passive_craft_timer_table;
pub mod passive_craft_timer_type;
pub mod pathfinding_desc_table;
pub mod pathfinding_desc_type;
pub mod pathfinding_traversal_option_type;
pub mod pause_play_timer_reducer;
pub mod paved_tile_state_table;
pub mod paved_tile_state_type;
pub mod paving_destroy_tile_reducer;
pub mod paving_destroy_tile_start_reducer;
pub mod paving_place_tile_reducer;
pub mod paving_place_tile_start_reducer;
pub mod paving_tile_desc_table;
pub mod paving_tile_desc_type;
pub mod permission_edit_reducer;
pub mod permission_group_type;
pub mod permission_state_table;
pub mod permission_state_type;
pub mod permission_type;
pub mod pillar_shaping_desc_table;
pub mod pillar_shaping_desc_type;
pub mod pillar_shaping_destroy_reducer;
pub mod pillar_shaping_destroy_start_reducer;
pub mod pillar_shaping_place_pillar_reducer;
pub mod pillar_shaping_place_pillar_start_reducer;
pub mod pillar_shaping_state_table;
pub mod pillar_shaping_state_type;
pub mod player_achievement_claim_request_type;
pub mod player_acquire_knowledge_from_entities_request_type;
pub mod player_action_cancel_reducer;
pub mod player_action_desc_table;
pub mod player_action_desc_type;
pub mod player_action_layer_type;
pub mod player_action_result_type;
pub mod player_action_state_table;
pub mod player_action_state_type;
pub mod player_action_type_type;
pub mod player_barter_stall_order_accept_type;
pub mod player_barter_stall_order_create_request_type;
pub mod player_barter_stall_order_delete_request_type;
pub mod player_building_deconstruct_request_type;
pub mod player_building_move_request_type;
pub mod player_building_repair_request_type;
pub mod player_building_set_nickname_request_type;
pub mod player_cancel_region_transfer_reducer;
pub mod player_chat_post_message_request_type;
pub mod player_claim_add_member_request_type;
pub mod player_claim_add_recruitment_request_type;
pub mod player_claim_add_tile_request_type;
pub mod player_claim_apply_for_recruitment_request_type;
pub mod player_claim_leave_request_type;
pub mod player_claim_remove_member_request_type;
pub mod player_claim_remove_recruitment_request_type;
pub mod player_claim_remove_tile_request_type;
pub mod player_claim_rename_request_type;
pub mod player_claim_set_member_permissions_request_type;
pub mod player_claim_take_ownership_request_type;
pub mod player_claim_tech_cancel_request_type;
pub mod player_claim_tech_learn_request_type;
pub mod player_claim_transfer_ownership_request_type;
pub mod player_claim_withdraw_from_treasury_request_type;
pub mod player_clear_action_state_reducer;
pub mod player_climb_reducer;
pub mod player_climb_request_type;
pub mod player_climb_start_reducer;
pub mod player_closed_listing_collect_request_type;
pub mod player_collectible_activate_request_type;
pub mod player_complete_task_reducer;
pub mod player_complete_task_request_type;
pub mod player_convert_collectible_to_deed_request_type;
pub mod player_convert_deed_to_collectible_request_type;
pub mod player_craft_cancel_request_type;
pub mod player_craft_collect_all_request_type;
pub mod player_craft_collect_request_type;
pub mod player_craft_continue_request_type;
pub mod player_craft_initiate_request_type;
pub mod player_create_msg_type;
pub mod player_death_start_reducer;
pub mod player_death_timer_table;
pub mod player_death_timer_type;
pub mod player_deployable_dismount_request_type;
pub mod player_deployable_mount_request_type;
pub mod player_deployable_move_request_type;
pub mod player_discover_entities_request_type;
pub mod player_dismiss_alert_reducer;
pub mod player_dismiss_alert_request_type;
pub mod player_dropped_inventory_pick_up_request_type;
pub mod player_duel_initiate_reducer;
pub mod player_eat_request_type;
pub mod player_edit_order_request_type;
pub mod player_elevator_arrive_reducer;
pub mod player_emote_request_type;
pub mod player_equipment_add_request_type;
pub mod player_equipment_remove_request_type;
pub mod player_extract_request_type;
pub mod player_housing_change_entrance_reducer;
pub mod player_housing_desc_table;
pub mod player_housing_desc_type;
pub mod player_housing_enter_reducer;
pub mod player_housing_enter_request_type;
pub mod player_housing_evict_player_complete_reducer;
pub mod player_housing_evict_player_reducer;
pub mod player_housing_evict_player_request_type;
pub mod player_housing_evict_player_timer_table;
pub mod player_housing_evict_player_timer_type;
pub mod player_housing_income_agent_loop_reducer;
pub mod player_housing_income_loop_timer_table;
pub mod player_housing_income_loop_timer_type;
pub mod player_housing_request_access_reducer;
pub mod player_housing_request_access_request_type;
pub mod player_housing_state_table;
pub mod player_housing_state_type;
pub mod player_housing_update_reducer;
pub mod player_item_convert_request_type;
pub mod player_item_drop_request_type;
pub mod player_item_stack_move_all_request_type;
pub mod player_item_stack_move_request_type;
pub mod player_item_stack_split_request_type;
pub mod player_item_use_request_type;
pub mod player_lowercase_username_state_table;
pub mod player_lowercase_username_state_type;
pub mod player_move_reducer;
pub mod player_move_request_type;
pub mod player_note_state_table;
pub mod player_note_state_type;
pub mod player_notification_event_reducer_reducer;
pub mod player_notification_event_table;
pub mod player_notification_event_type;
pub mod player_order_cancel_request_type;
pub mod player_order_collect_request_type;
pub mod player_passive_craft_queue_request_type;
pub mod player_pause_play_timer_request_type;
pub mod player_paving_destroy_tile_request_type;
pub mod player_paving_place_tile_request_type;
pub mod player_permission_edit_request_type;
pub mod player_pillar_shaping_destroy_request_type;
pub mod player_pillar_shaping_place_request_type;
pub mod player_pocket_swap_contents_request_type;
pub mod player_portal_enter_request_type;
pub mod player_post_order_request_type;
pub mod player_prefs_state_table;
pub mod player_prefs_state_type;
pub mod player_project_site_add_materials_request_type;
pub mod player_project_site_advance_project_request_type;
pub mod player_project_site_cancel_request_type;
pub mod player_project_site_place_request_type;
pub mod player_queue_join_reducer;
pub mod player_queue_leave_reducer;
pub mod player_queue_state_table;
pub mod player_queue_state_type;
pub mod player_regen_agent_loop_reducer;
pub mod player_regen_loop_timer_table;
pub mod player_regen_loop_timer_type;
pub mod player_region_crossover_reducer;
pub mod player_region_transfer_event_reducer_reducer;
pub mod player_region_transfer_event_table;
pub mod player_region_transfer_event_type;
pub mod player_report_state_op_type;
pub mod player_report_state_table;
pub mod player_report_state_type;
pub mod player_respawn_reducer;
pub mod player_retrieve_lost_item_request_type;
pub mod player_scroll_read_request_type;
pub mod player_set_default_deployable_reducer;
pub mod player_set_default_deployable_request_type;
pub mod player_set_home_request_type;
pub mod player_set_name_outcome_event_reducer_reducer;
pub mod player_set_name_outcome_event_table;
pub mod player_set_name_outcome_event_type;
pub mod player_sign_in_request_type;
pub mod player_skip_queue_msg_type;
pub mod player_sleep_request_type;
pub mod player_state_table;
pub mod player_state_type;
pub mod player_teleport_home_reducer;
pub mod player_teleport_home_request_type;
pub mod player_teleport_home_start_reducer;
pub mod player_teleport_waystone_reducer;
pub mod player_teleport_waystone_request_type;
pub mod player_teleport_waystone_start_reducer;
pub mod player_terraform_cancel_request_type;
pub mod player_terraform_request_type;
pub mod player_terraform_set_final_target_request_type;
pub mod player_timestamp_state_table;
pub mod player_timestamp_state_type;
pub mod player_trade_accept_request_type;
pub mod player_trade_accept_session_request_type;
pub mod player_trade_add_item_request_type;
pub mod player_trade_decline_request_type;
pub mod player_trade_decline_session_request_type;
pub mod player_trade_initiate_session_request_type;
pub mod player_trade_remove_item_request_type;
pub mod player_trade_swap_pockets_request_type;
pub mod player_use_elevator_reducer;
pub mod player_use_elevator_timer_table;
pub mod player_use_elevator_timer_type;
pub mod player_username_state_table;
pub mod player_username_state_type;
pub mod player_vote_answer_reducer;
pub mod player_vote_answer_request_type;
pub mod player_vote_answer_type;
pub mod player_vote_conclude_reducer;
pub mod player_vote_conclude_timer_table;
pub mod player_vote_conclude_timer_type;
pub mod player_vote_state_table;
pub mod player_vote_state_type;
pub mod player_vote_type_type;
pub mod pocket_key_type;
pub mod pocket_swap_contents_reducer;
pub mod pocket_type;
pub mod portal_enter_reducer;
pub mod portal_state_table;
pub mod portal_state_type;
pub mod private_parameters_desc_table;
pub mod private_parameters_desc_type;
pub mod probabilistic_item_stack_type;
pub mod process_inter_module_message_reducer;
pub mod progressive_action_state_table;
pub mod progressive_action_state_type;
pub mod progressive_action_status_type;
pub mod project_site_add_materials_reducer;
pub mod project_site_advance_project_reducer;
pub mod project_site_advance_project_start_reducer;
pub mod project_site_cancel_reducer;
pub mod project_site_place_reducer;
pub mod project_site_state_table;
pub mod project_site_state_type;
pub mod rarity_type;
pub mod region_connection_info_op_type;
pub mod region_connection_info_table;
pub mod region_connection_info_type;
pub mod region_destroy_siege_engine_msg_type;
pub mod region_population_info_op_type;
pub mod region_population_info_table;
pub mod region_population_info_type;
pub mod region_population_loop_timer_type;
pub mod region_popuplation_agent_loop_reducer;
pub mod region_popuplation_loop_timer_table;
pub mod region_sign_in_parameters_op_type;
pub mod region_sign_in_parameters_table;
pub mod region_sign_in_parameters_type;
pub mod rent_add_listing_reducer;
pub mod rent_add_listing_request_type;
pub mod rent_add_tenant_reducer;
pub mod rent_add_tenant_request_type;
pub mod rent_collect_eviction_fee_reducer;
pub mod rent_collector_agent_loop_reducer;
pub mod rent_collector_loop_timer_table;
pub mod rent_collector_loop_timer_type;
pub mod rent_deposit_coins_reducer;
pub mod rent_deposit_coins_request_type;
pub mod rent_evict_reducer;
pub mod rent_evict_request_type;
pub mod rent_evict_term_reducer;
pub mod rent_evict_timer_table;
pub mod rent_evict_timer_type;
pub mod rent_purchase_reducer;
pub mod rent_purchase_request_type;
pub mod rent_remove_tenant_reducer;
pub mod rent_remove_tenant_request_type;
pub mod rent_set_daily_rate_reducer;
pub mod rent_set_daily_rate_request_type;
pub mod rent_state_table;
pub mod rent_state_type;
pub mod rent_terminate_reducer;
pub mod rent_terminate_request_type;
pub mod rent_unlist_reducer;
pub mod rent_unlist_request_type;
pub mod report_chat_message_reducer;
pub mod report_player_chat_message_type;
pub mod report_player_message_type;
pub mod report_player_reducer;
pub mod reset_chunk_index_reducer;
pub mod reset_chunk_index_timer_table;
pub mod reset_chunk_index_timer_type;
pub mod reset_chunk_index_with_dimension_reducer;
pub mod reset_mobile_entity_position_reducer;
pub mod reset_mobile_entity_timer_table;
pub mod reset_mobile_entity_timer_type;
pub mod reset_onboarding_reducer;
pub mod resource_clump_desc_table;
pub mod resource_clump_desc_type;
pub mod resource_clump_info_type;
pub mod resource_count_table;
pub mod resource_count_type;
pub mod resource_desc_table;
pub mod resource_desc_type;
pub mod resource_growth_recipe_desc_table;
pub mod resource_growth_recipe_desc_type;
pub mod resource_health_state_table;
pub mod resource_health_state_type;
pub mod resource_info_type;
pub mod resource_placement_recipe_desc_table;
pub mod resource_placement_recipe_desc_type;
pub mod resource_spawn_scheduled_reducer;
pub mod resource_spawn_timer_table;
pub mod resource_spawn_timer_type;
pub mod resource_state_table;
pub mod resource_state_type;
pub mod resources_log_table;
pub mod resources_log_type;
pub mod resources_regen_loop_timer_table;
pub mod resources_regen_loop_timer_type;
pub mod resources_regen_reducer;
pub mod respawn_interior_npcs_reducer;
pub mod respawn_resource_in_chunk_reducer;
pub mod respawn_resource_in_chunk_timer_table;
pub mod respawn_resource_in_chunk_timer_type;
pub mod retrieve_lost_item_reducer;
pub mod rez_sick_long_term_state_table;
pub mod rez_sick_long_term_state_type;
pub mod role_type;
pub mod ruins_entity_value_pair_type;
pub mod satiation_state_table;
pub mod satiation_state_type;
pub mod scroll_read_reducer;
pub mod search_for_closest_building_reducer;
pub mod search_for_closest_building_type_reducer;
pub mod secondary_knowledge_desc_table;
pub mod secondary_knowledge_desc_type;
pub mod sell_order_state_table;
pub mod server_identity_table;
pub mod server_identity_type;
pub mod server_teleport_player_reducer;
pub mod server_teleport_reason_type;
pub mod set_home_reducer;
pub mod sign_in_reducer;
pub mod sign_out_reducer;
pub mod sign_player_out_msg_type;
pub mod signed_in_player_state_table;
pub mod signed_in_player_state_type;
pub mod single_resource_clump_info_table;
pub mod single_resource_clump_info_type;
pub mod single_resource_to_clump_desc_table;
pub mod single_resource_to_clump_desc_type;
pub mod skill_category_type;
pub mod skill_desc_table;
pub mod skill_desc_type;
pub mod skill_type_type;
pub mod sleep_reducer;
pub mod small_hex_tile_message_type;
pub mod spawn_info_type;
pub mod stage_achievement_desc_reducer;
pub mod stage_alert_desc_reducer;
pub mod stage_biome_desc_reducer;
pub mod stage_buff_desc_reducer;
pub mod stage_buff_type_desc_reducer;
pub mod stage_building_claim_desc_reducer;
pub mod stage_building_desc_reducer;
pub mod stage_building_portal_desc_reducer;
pub mod stage_building_repairs_desc_reducer;
pub mod stage_building_spawn_desc_reducer;
pub mod stage_building_type_desc_reducer;
pub mod stage_cargo_desc_reducer;
pub mod stage_character_stat_desc_reducer;
pub mod stage_chest_rarity_desc_reducer;
pub mod stage_claim_tech_desc_reducer;
pub mod stage_claim_tile_cost_reducer;
pub mod stage_climb_requirement_desc_reducer;
pub mod stage_clothing_desc_reducer;
pub mod stage_collectible_desc_reducer;
pub mod stage_combat_action_desc_reducer;
pub mod stage_construction_recipe_desc_reducer;
pub mod stage_crafting_recipe_desc_reducer;
pub mod stage_deconstruction_recipe_desc_reducer;
pub mod stage_deployable_desc_reducer;
pub mod stage_distant_visible_entity_desc_reducer;
pub mod stage_elevator_desc_reducer;
pub mod stage_emote_desc_reducer;
pub mod stage_empire_colors_desc_reducer;
pub mod stage_empire_icon_desc_reducer;
pub mod stage_empire_notification_desc_reducer;
pub mod stage_empire_rank_desc_reducer;
pub mod stage_empire_supplies_desc_reducer;
pub mod stage_empire_territory_desc_reducer;
pub mod stage_enemy_ai_params_desc_reducer;
pub mod stage_enemy_desc_reducer;
pub mod stage_environment_debuff_desc_reducer;
pub mod stage_equipment_desc_reducer;
pub mod stage_extraction_recipe_desc_reducer;
pub mod stage_food_desc_reducer;
pub mod stage_gate_desc_reducer;
pub mod stage_hexite_exchange_entry_desc_reducer;
pub mod stage_interior_environment_desc_reducer;
pub mod stage_interior_instance_desc_reducer;
pub mod stage_interior_network_desc_reducer;
pub mod stage_interior_portal_connections_desc_reducer;
pub mod stage_interior_shape_desc_reducer;
pub mod stage_interior_spawn_desc_reducer;
pub mod stage_item_conversion_recipe_desc_reducer;
pub mod stage_item_desc_reducer;
pub mod stage_item_list_desc_reducer;
pub mod stage_knowledge_scroll_desc_reducer;
pub mod stage_knowledge_scroll_type_desc_reducer;
pub mod stage_knowledge_stat_modifier_desc_reducer;
pub mod stage_loot_chest_desc_reducer;
pub mod stage_loot_rarity_desc_reducer;
pub mod stage_loot_table_desc_reducer;
pub mod stage_npc_desc_reducer;
pub mod stage_onboarding_reward_desc_reducer;
pub mod stage_parameters_desc_reducer;
pub mod stage_pathfinding_desc_reducer;
pub mod stage_paving_tile_desc_reducer;
pub mod stage_pillar_shaping_desc_reducer;
pub mod stage_player_action_desc_reducer;
pub mod stage_player_housing_desc_reducer;
pub mod stage_private_parameters_desc_reducer;
pub mod stage_resource_clump_desc_reducer;
pub mod stage_resource_desc_reducer;
pub mod stage_resource_growth_recipe_desc_reducer;
pub mod stage_resource_placement_recipe_desc_reducer;
pub mod stage_secondary_knowledge_desc_reducer;
pub mod stage_skill_desc_reducer;
pub mod stage_targeting_matrix_desc_reducer;
pub mod stage_teleport_item_desc_reducer;
pub mod stage_terraform_recipe_desc_reducer;
pub mod stage_tool_desc_reducer;
pub mod stage_tool_type_desc_reducer;
pub mod stage_traveler_task_desc_reducer;
pub mod stage_traveler_trade_order_desc_reducer;
pub mod stage_wall_desc_reducer;
pub mod stage_weapon_desc_reducer;
pub mod stage_weapon_type_desc_reducer;
pub mod staged_static_data_table;
pub mod staged_static_data_type;
pub mod stamina_state_table;
pub mod stamina_state_type;
pub mod start_agents_reducer;
pub mod start_generating_world_reducer;
pub mod start_onboarding_quest_reducer;
pub mod starving_agent_loop_reducer;
pub mod starving_loop_timer_table;
pub mod starving_loop_timer_type;
pub mod starving_player_state_table;
pub mod starving_player_state_type;
pub mod static_data_upload_type;
pub mod stop_agents_reducer;
pub mod surface_type_type;
pub mod synchronize_time_reducer;
pub mod target_state_table;
pub mod target_state_type;
pub mod target_update_reducer;
pub mod target_update_request_type;
pub mod targetable_state_table;
pub mod targetable_state_type;
pub mod targeting_matrix_desc_table;
pub mod targeting_matrix_desc_type;
pub mod teleport_item_desc_table;
pub mod teleport_item_desc_type;
pub mod teleport_location_type;
pub mod teleport_location_type_type;
pub mod teleport_player_timer_table;
pub mod teleport_player_timer_type;
pub mod teleportation_energy_regen_agent_loop_reducer;
pub mod teleportation_energy_regen_loop_timer_table;
pub mod teleportation_energy_regen_loop_timer_type;
pub mod teleportation_energy_state_table;
pub mod teleportation_energy_state_type;
pub mod terraform_cancel_reducer;
pub mod terraform_progress_state_table;
pub mod terraform_progress_state_type;
pub mod terraform_recipe_desc_table;
pub mod terraform_recipe_desc_type;
pub mod terraform_reducer;
pub mod terraform_set_final_target_reducer;
pub mod terraform_start_reducer;
pub mod terrain_cell_type;
pub mod terrain_chunk_state_table;
pub mod terrain_chunk_state_type;
pub mod the_great_place_holder_table_type;
pub mod the_great_placeholder_table_table;
pub mod threat_state_table;
pub mod threat_state_type;
pub mod tool_desc_table;
pub mod tool_desc_type;
pub mod tool_requirement_type;
pub mod tool_type_desc_table;
pub mod tool_type_desc_type;
pub mod toolbar_state_table;
pub mod toolbar_state_type;
pub mod trade_accept_reducer;
pub mod trade_accept_session_reducer;
pub mod trade_add_item_reducer;
pub mod trade_cancel_server_reducer;
pub mod trade_decline_reducer;
pub mod trade_decline_session_reducer;
pub mod trade_initiate_session_reducer;
pub mod trade_order_state_table;
pub mod trade_order_state_type;
pub mod trade_pocket_type;
pub mod trade_remove_item_reducer;
pub mod trade_session_loop_timer_table;
pub mod trade_session_loop_timer_type;
pub mod trade_session_state_table;
pub mod trade_session_state_type;
pub mod trade_session_status_type;
pub mod trade_sessions_agent_loop_reducer;
pub mod trade_swap_pockets_reducer;
pub mod transfer_player_delayed_reducer;
pub mod transfer_player_housing_msg_type;
pub mod transfer_player_msg_type;
pub mod transfer_player_timer_table;
pub mod transfer_player_timer_type;
pub mod traveler_task_agent_loop_reducer;
pub mod traveler_task_desc_table;
pub mod traveler_task_desc_type;
pub mod traveler_task_loop_timer_table;
pub mod traveler_task_loop_timer_type;
pub mod traveler_task_state_table;
pub mod traveler_task_state_type;
pub mod traveler_trade_order_desc_table;
pub mod traveler_trade_order_desc_type;
pub mod traversal_settings_type;
pub mod unclaimed_collectibles_state_table;
pub mod unclaimed_collectibles_state_type;
pub mod unclaimed_shards_state_table;
pub mod unclaimed_shards_state_type;
pub mod update_scheduled_timers_from_static_data_reducer;
pub mod user_authentication_state_op_type;
pub mod user_authentication_state_table;
pub mod user_authentication_state_type;
pub mod user_moderation_policy_type;
pub mod user_moderation_state_op_type;
pub mod user_moderation_state_table;
pub mod user_moderation_state_type;
pub mod user_previous_region_state_table;
pub mod user_previous_region_state_type;
pub mod user_state_op_type;
pub mod user_state_table;
pub mod user_state_type;
pub mod user_update_region_msg_type;
pub mod vault_collectible_type;
pub mod vault_state_table;
pub mod vault_state_type;
pub mod vfx_attachment_point_type;
pub mod wall_desc_table;
pub mod wall_desc_type;
pub mod weapon_desc_table;
pub mod weapon_desc_type;
pub mod weapon_type_desc_table;
pub mod weapon_type_desc_type;
pub mod world_gen_animation_curve_keyframe_type;
pub mod world_gen_animation_curve_type;
pub mod world_gen_biome_definition_type;
pub mod world_gen_biomes_map_definition_type;
pub mod world_gen_building_details_type;
pub mod world_gen_buildings_map_definition_type;
pub mod world_gen_generated_building_type;
pub mod world_gen_generated_resource_deposit_type;
pub mod world_gen_land_shape_definition_type;
pub mod world_gen_mountain_type;
pub mod world_gen_mountains_map_definition_type;
pub mod world_gen_noise_based_elevation_layer_blending_mode_type;
pub mod world_gen_noise_based_elevation_layer_type;
pub mod world_gen_noise_specs_type;
pub mod world_gen_rect_int_type;
pub mod world_gen_resource_biome_type;
pub mod world_gen_resource_definition_type;
pub mod world_gen_resource_details_type;
pub mod world_gen_resources_map_definition_type;
pub mod world_gen_river_generation_settings_type;
pub mod world_gen_river_pathfinding_costs_type;
pub mod world_gen_vector_2_int_type;
pub mod world_gen_vector_2_type;
pub mod world_gen_world_definition_type;
pub mod world_gen_world_map_definition_type;
pub mod world_region_name_state_table;
pub mod world_region_name_state_type;
pub mod world_region_state_table;
pub mod world_region_state_type;

pub use a_i_debug_state_table::*;
pub use achievement_claim_reducer::{
    AchievementClaimCallbackId, achievement_claim, set_flags_for_achievement_claim,
};
pub use achievement_desc_table::*;
pub use achievement_desc_type::AchievementDesc;
pub use acquire_knowledge_from_entities_reducer::{
    AcquireKnowledgeFromEntitiesCallbackId, acquire_knowledge_from_entities,
    set_flags_for_acquire_knowledge_from_entities,
};
pub use action_cooldown_type::ActionCooldown;
pub use action_state_table::*;
pub use action_state_type::ActionState;
pub use active_buff_state_table::*;
pub use active_buff_state_type::ActiveBuffState;
pub use active_buff_type::ActiveBuff;
pub use admin_alpha_3_complete_onboarding_reducer::{
    AdminAlpha3CompleteOnboardingCallbackId, admin_alpha_3_complete_onboarding,
    set_flags_for_admin_alpha_3_complete_onboarding,
};
pub use admin_alpha_3_reset_onboarding_to_fifth_temple_quest_reducer::{
    AdminAlpha3ResetOnboardingToFifthTempleQuestCallbackId,
    admin_alpha_3_reset_onboarding_to_fifth_temple_quest,
    set_flags_for_admin_alpha_3_reset_onboarding_to_fifth_temple_quest,
};
pub use admin_alpha_3_reset_onboarding_to_first_expand_quest_reducer::{
    AdminAlpha3ResetOnboardingToFirstExpandQuestCallbackId,
    admin_alpha_3_reset_onboarding_to_first_expand_quest,
    set_flags_for_admin_alpha_3_reset_onboarding_to_first_expand_quest,
};
pub use admin_alpha_3_reset_onboarding_to_first_temple_quest_reducer::{
    AdminAlpha3ResetOnboardingToFirstTempleQuestCallbackId,
    admin_alpha_3_reset_onboarding_to_first_temple_quest,
    set_flags_for_admin_alpha_3_reset_onboarding_to_first_temple_quest,
};
pub use admin_alpha_3_reset_onboarding_to_fourth_expand_quest_reducer::{
    AdminAlpha3ResetOnboardingToFourthExpandQuestCallbackId,
    admin_alpha_3_reset_onboarding_to_fourth_expand_quest,
    set_flags_for_admin_alpha_3_reset_onboarding_to_fourth_expand_quest,
};
pub use admin_alpha_3_reset_onboarding_to_fourth_temple_quest_reducer::{
    AdminAlpha3ResetOnboardingToFourthTempleQuestCallbackId,
    admin_alpha_3_reset_onboarding_to_fourth_temple_quest,
    set_flags_for_admin_alpha_3_reset_onboarding_to_fourth_temple_quest,
};
pub use admin_alpha_3_reset_onboarding_to_second_expand_quest_reducer::{
    AdminAlpha3ResetOnboardingToSecondExpandQuestCallbackId,
    admin_alpha_3_reset_onboarding_to_second_expand_quest,
    set_flags_for_admin_alpha_3_reset_onboarding_to_second_expand_quest,
};
pub use admin_alpha_3_reset_onboarding_to_second_temple_quest_reducer::{
    AdminAlpha3ResetOnboardingToSecondTempleQuestCallbackId,
    admin_alpha_3_reset_onboarding_to_second_temple_quest,
    set_flags_for_admin_alpha_3_reset_onboarding_to_second_temple_quest,
};
pub use admin_alpha_3_reset_onboarding_to_third_expand_quest_reducer::{
    AdminAlpha3ResetOnboardingToThirdExpandQuestCallbackId,
    admin_alpha_3_reset_onboarding_to_third_expand_quest,
    set_flags_for_admin_alpha_3_reset_onboarding_to_third_expand_quest,
};
pub use admin_alpha_3_reset_onboarding_to_third_temple_quest_reducer::{
    AdminAlpha3ResetOnboardingToThirdTempleQuestCallbackId,
    admin_alpha_3_reset_onboarding_to_third_temple_quest,
    set_flags_for_admin_alpha_3_reset_onboarding_to_third_temple_quest,
};
pub use admin_broadcast_message_msg_type::AdminBroadcastMessageMsg;
pub use admin_broadcast_msg_region_reducer::{
    AdminBroadcastMsgRegionCallbackId, admin_broadcast_msg_region,
    set_flags_for_admin_broadcast_msg_region,
};
pub use admin_broadcast_table::*;
pub use admin_broadcast_type::AdminBroadcast;
pub use admin_clear_all_resources_reducer::{
    AdminClearAllResourcesCallbackId, admin_clear_all_resources,
    set_flags_for_admin_clear_all_resources,
};
pub use admin_collapse_ruin_reducer::{
    AdminCollapseRuinCallbackId, admin_collapse_ruin, set_flags_for_admin_collapse_ruin,
};
pub use admin_collapse_ruins_reducer::{
    AdminCollapseRuinsCallbackId, admin_collapse_ruins, set_flags_for_admin_collapse_ruins,
};
pub use admin_complete_all_passive_crafts_reducer::{
    AdminCompleteAllPassiveCraftsCallbackId, admin_complete_all_passive_crafts,
    set_flags_for_admin_complete_all_passive_crafts,
};
pub use admin_count_inventory_items_reducer::{
    AdminCountInventoryItemsCallbackId, admin_count_inventory_items,
    set_flags_for_admin_count_inventory_items,
};
pub use admin_despawn_overworld_enemies_reducer::{
    AdminDespawnOverworldEnemiesCallbackId, admin_despawn_overworld_enemies,
    set_flags_for_admin_despawn_overworld_enemies,
};
pub use admin_grant_collectibles_reducer::{
    AdminGrantCollectiblesCallbackId, admin_grant_collectibles,
    set_flags_for_admin_grant_collectibles,
};
pub use admin_reset_all_herd_locations_reducer::{
    AdminResetAllHerdLocationsCallbackId, admin_reset_all_herd_locations,
    set_flags_for_admin_reset_all_herd_locations,
};
pub use admin_reset_herd_locations_reducer::{
    AdminResetHerdLocationsCallbackId, admin_reset_herd_locations,
    set_flags_for_admin_reset_herd_locations,
};
pub use admin_reset_onboarding_completely_reducer::{
    AdminResetOnboardingCompletelyCallbackId, admin_reset_onboarding_completely,
    set_flags_for_admin_reset_onboarding_completely,
};
pub use admin_restore_all_collapsed_ruins_reducer::{
    AdminRestoreAllCollapsedRuinsCallbackId, admin_restore_all_collapsed_ruins,
    set_flags_for_admin_restore_all_collapsed_ruins,
};
pub use admin_restore_player_state_reducer::{
    AdminRestorePlayerStateCallbackId, admin_restore_player_state,
    set_flags_for_admin_restore_player_state,
};
pub use admin_restore_player_state_scheduled_reducer::{
    AdminRestorePlayerStateScheduledCallbackId, admin_restore_player_state_scheduled,
    set_flags_for_admin_restore_player_state_scheduled,
};
pub use admin_restore_player_state_timer_table::*;
pub use admin_restore_player_state_timer_type::AdminRestorePlayerStateTimer;
pub use admin_sign_out_all_region_reducer::{
    AdminSignOutAllRegionCallbackId, admin_sign_out_all_region,
    set_flags_for_admin_sign_out_all_region,
};
pub use admin_sign_out_reducer::{
    AdminSignOutCallbackId, admin_sign_out, set_flags_for_admin_sign_out,
};
pub use admin_sign_out_string_reducer::{
    AdminSignOutStringCallbackId, admin_sign_out_string, set_flags_for_admin_sign_out_string,
};
pub use admin_update_light_source_states_reducer::{
    AdminUpdateLightSourceStatesCallbackId, admin_update_light_source_states,
    set_flags_for_admin_update_light_source_states,
};
pub use ai_debug_state_type::AiDebugState;
pub use alert_desc_table::*;
pub use alert_desc_type::AlertDesc;
pub use alert_state_table::*;
pub use alert_state_type::AlertState;
pub use alert_type_type::AlertType;
pub use attached_herds_state_table::*;
pub use attached_herds_state_type::AttachedHerdsState;
pub use attack_impact_reducer::{
    AttackImpactCallbackId, attack_impact, set_flags_for_attack_impact,
};
pub use attack_impact_timer_table::*;
pub use attack_impact_timer_type::AttackImpactTimer;
pub use attack_outcome_state_table::*;
pub use attack_outcome_state_type::AttackOutcomeState;
pub use attack_reducer::{AttackCallbackId, attack, set_flags_for_attack};
pub use attack_scheduled_reducer::{
    AttackScheduledCallbackId, attack_scheduled, set_flags_for_attack_scheduled,
};
pub use attack_start_reducer::{AttackStartCallbackId, attack_start, set_flags_for_attack_start};
pub use attack_timer_table::*;
pub use attack_timer_type::AttackTimer;
pub use auction_listing_state_type::AuctionListingState;
pub use auto_claim_state_table::*;
pub use auto_claim_state_type::AutoClaimState;
pub use auto_logout_loop_reducer::{
    AutoLogoutLoopCallbackId, auto_logout_loop, set_flags_for_auto_logout_loop,
};
pub use auto_logout_loop_timer_table::*;
pub use auto_logout_loop_timer_type::AutoLogoutLoopTimer;
pub use barter_stall_order_accept_reducer::{
    BarterStallOrderAcceptCallbackId, barter_stall_order_accept,
    set_flags_for_barter_stall_order_accept,
};
pub use barter_stall_order_create_reducer::{
    BarterStallOrderCreateCallbackId, barter_stall_order_create,
    set_flags_for_barter_stall_order_create,
};
pub use barter_stall_order_delete_reducer::{
    BarterStallOrderDeleteCallbackId, barter_stall_order_delete,
    set_flags_for_barter_stall_order_delete,
};
pub use barter_stall_set_market_mode_enabled_reducer::{
    BarterStallSetMarketModeEnabledCallbackId, barter_stall_set_market_mode_enabled,
    set_flags_for_barter_stall_set_market_mode_enabled,
};
pub use barter_stall_set_market_mode_enabled_request_type::BarterStallSetMarketModeEnabledRequest;
pub use barter_stall_state_table::*;
pub use barter_stall_state_type::BarterStallState;
pub use biome_desc_table::*;
pub use biome_desc_type::BiomeDesc;
pub use biome_type::Biome;
pub use blueprint_place_reducer::{
    BlueprintPlaceCallbackId, blueprint_place, set_flags_for_blueprint_place,
};
pub use buff_category_type::BuffCategory;
pub use buff_desc_table::*;
pub use buff_desc_type::BuffDesc;
pub use buff_effect_type::BuffEffect;
pub use buff_type_desc_table::*;
pub use buff_type_desc_type::BuffTypeDesc;
pub use building_category_type::BuildingCategory;
pub use building_claim_desc_table::*;
pub use building_claim_desc_type::BuildingClaimDesc;
pub use building_decay_agent_loop_reducer::{
    BuildingDecayAgentLoopCallbackId, building_decay_agent_loop,
    set_flags_for_building_decay_agent_loop,
};
pub use building_decay_loop_timer_table::*;
pub use building_decay_loop_timer_type::BuildingDecayLoopTimer;
pub use building_deconstruct_reducer::{
    BuildingDeconstructCallbackId, building_deconstruct, set_flags_for_building_deconstruct,
};
pub use building_deconstruct_start_reducer::{
    BuildingDeconstructStartCallbackId, building_deconstruct_start,
    set_flags_for_building_deconstruct_start,
};
pub use building_desc_table::*;
pub use building_desc_type::BuildingDesc;
pub use building_despawn_reducer::{
    BuildingDespawnCallbackId, building_despawn, set_flags_for_building_despawn,
};
pub use building_despawn_timer_table::*;
pub use building_despawn_timer_type::BuildingDespawnTimer;
pub use building_function_type::BuildingFunction;
pub use building_function_type_mapping_desc_table::*;
pub use building_function_type_mapping_desc_type::BuildingFunctionTypeMappingDesc;
pub use building_interaction_level_type::BuildingInteractionLevel;
pub use building_move_reducer::{
    BuildingMoveCallbackId, building_move, set_flags_for_building_move,
};
pub use building_nickname_state_op_type::BuildingNicknameStateOp;
pub use building_nickname_state_table::*;
pub use building_nickname_state_type::BuildingNicknameState;
pub use building_portal_desc_table::*;
pub use building_portal_desc_type::BuildingPortalDesc;
pub use building_repair_reducer::{
    BuildingRepairCallbackId, building_repair, set_flags_for_building_repair,
};
pub use building_repair_start_reducer::{
    BuildingRepairStartCallbackId, building_repair_start, set_flags_for_building_repair_start,
};
pub use building_repairs_desc_table::*;
pub use building_repairs_desc_type::BuildingRepairsDesc;
pub use building_requirement_type::BuildingRequirement;
pub use building_set_nickname_reducer::{
    BuildingSetNicknameCallbackId, building_set_nickname, set_flags_for_building_set_nickname,
};
pub use building_set_sign_text_reducer::{
    BuildingSetSignTextCallbackId, building_set_sign_text, set_flags_for_building_set_sign_text,
};
pub use building_set_sign_text_request_type::BuildingSetSignTextRequest;
pub use building_spawn_desc_table::*;
pub use building_spawn_desc_type::BuildingSpawnDesc;
pub use building_spawn_type_type::BuildingSpawnType;
pub use building_state_op_type::BuildingStateOp;
pub use building_state_table::*;
pub use building_state_type::BuildingState;
pub use building_type_desc_table::*;
pub use building_type_desc_type::BuildingTypeDesc;
pub use buy_order_state_table::*;
pub use capped_level_requirement_type::CappedLevelRequirement;
pub use cargo_desc_table::*;
pub use cargo_desc_type::CargoDesc;
pub use character_stat_desc_table::*;
pub use character_stat_desc_type::CharacterStatDesc;
pub use character_stat_type_type::CharacterStatType;
pub use character_stats_state_table::*;
pub use character_stats_state_type::CharacterStatsState;
pub use chat_channel_type::ChatChannel;
pub use chat_message_state_table::*;
pub use chat_message_state_type::ChatMessageState;
pub use chat_post_message_reducer::{
    ChatPostMessageCallbackId, chat_post_message, set_flags_for_chat_post_message,
};
pub use cheat_building_move_reducer::{
    CheatBuildingMoveCallbackId, cheat_building_move, set_flags_for_cheat_building_move,
};
pub use cheat_building_place_reducer::{
    CheatBuildingPlaceCallbackId, cheat_building_place, set_flags_for_cheat_building_place,
};
pub use cheat_cargo_grant_reducer::{
    CheatCargoGrantCallbackId, cheat_cargo_grant, set_flags_for_cheat_cargo_grant,
};
pub use cheat_cargo_grant_request_type::CheatCargoGrantRequest;
pub use cheat_claim_take_ownership_reducer::{
    CheatClaimTakeOwnershipCallbackId, cheat_claim_take_ownership,
    set_flags_for_cheat_claim_take_ownership,
};
pub use cheat_claim_totem_add_supplies_reducer::{
    CheatClaimTotemAddSuppliesCallbackId, cheat_claim_totem_add_supplies,
    set_flags_for_cheat_claim_totem_add_supplies,
};
pub use cheat_claim_totem_complete_current_research_reducer::{
    CheatClaimTotemCompleteCurrentResearchCallbackId, cheat_claim_totem_complete_current_research,
    set_flags_for_cheat_claim_totem_complete_current_research,
};
pub use cheat_claim_totem_research_all_reducer::{
    CheatClaimTotemResearchAllCallbackId, cheat_claim_totem_research_all,
    set_flags_for_cheat_claim_totem_research_all,
};
pub use cheat_clear_buffs_and_debuffs_reducer::{
    CheatClearBuffsAndDebuffsCallbackId, cheat_clear_buffs_and_debuffs,
    set_flags_for_cheat_clear_buffs_and_debuffs,
};
pub use cheat_compendium_enemy_place_request_type::CheatCompendiumEnemyPlaceRequest;
pub use cheat_compendium_item_place_request_type::CheatCompendiumItemPlaceRequest;
pub use cheat_compendium_place_enemy_reducer::{
    CheatCompendiumPlaceEnemyCallbackId, cheat_compendium_place_enemy,
    set_flags_for_cheat_compendium_place_enemy,
};
pub use cheat_compendium_place_resource_reducer::{
    CheatCompendiumPlaceResourceCallbackId, cheat_compendium_place_resource,
    set_flags_for_cheat_compendium_place_resource,
};
pub use cheat_delete_item_reducer::{
    CheatDeleteItemCallbackId, cheat_delete_item, set_flags_for_cheat_delete_item,
};
pub use cheat_deployable_store_reducer::{
    CheatDeployableStoreCallbackId, cheat_deployable_store, set_flags_for_cheat_deployable_store,
};
pub use cheat_discover_map_reducer::{
    CheatDiscoverMapCallbackId, cheat_discover_map, set_flags_for_cheat_discover_map,
};
pub use cheat_discover_map_request_type::CheatDiscoverMapRequest;
pub use cheat_experience_grant_reducer::{
    CheatExperienceGrantCallbackId, cheat_experience_grant, set_flags_for_cheat_experience_grant,
};
pub use cheat_experience_grant_request_type::CheatExperienceGrantRequest;
pub use cheat_grant_knowledge_reducer::{
    CheatGrantKnowledgeCallbackId, cheat_grant_knowledge, set_flags_for_cheat_grant_knowledge,
};
pub use cheat_grant_knowledge_request_type::CheatGrantKnowledgeRequest;
pub use cheat_grant_teleport_energy_reducer::{
    CheatGrantTeleportEnergyCallbackId, cheat_grant_teleport_energy,
    set_flags_for_cheat_grant_teleport_energy,
};
pub use cheat_item_stack_grant_and_equip_reducer::{
    CheatItemStackGrantAndEquipCallbackId, cheat_item_stack_grant_and_equip,
    set_flags_for_cheat_item_stack_grant_and_equip,
};
pub use cheat_item_stack_grant_reducer::{
    CheatItemStackGrantCallbackId, cheat_item_stack_grant, set_flags_for_cheat_item_stack_grant,
};
pub use cheat_item_stack_grant_request_type::CheatItemStackGrantRequest;
pub use cheat_kill_reducer::{CheatKillCallbackId, cheat_kill, set_flags_for_cheat_kill};
pub use cheat_paving_add_tile_reducer::{
    CheatPavingAddTileCallbackId, cheat_paving_add_tile, set_flags_for_cheat_paving_add_tile,
};
pub use cheat_paving_destroy_reducer::{
    CheatPavingDestroyCallbackId, cheat_paving_destroy, set_flags_for_cheat_paving_destroy,
};
pub use cheat_pillar_shaping_add_pillar_reducer::{
    CheatPillarShapingAddPillarCallbackId, cheat_pillar_shaping_add_pillar,
    set_flags_for_cheat_pillar_shaping_add_pillar,
};
pub use cheat_pillar_shaping_destroy_reducer::{
    CheatPillarShapingDestroyCallbackId, cheat_pillar_shaping_destroy,
    set_flags_for_cheat_pillar_shaping_destroy,
};
pub use cheat_project_site_add_all_materials_reducer::{
    CheatProjectSiteAddAllMaterialsCallbackId, cheat_project_site_add_all_materials,
    set_flags_for_cheat_project_site_add_all_materials,
};
pub use cheat_remove_entity_building_reducer::{
    CheatRemoveEntityBuildingCallbackId, cheat_remove_entity_building,
    set_flags_for_cheat_remove_entity_building,
};
pub use cheat_remove_entity_enemy_reducer::{
    CheatRemoveEntityEnemyCallbackId, cheat_remove_entity_enemy,
    set_flags_for_cheat_remove_entity_enemy,
};
pub use cheat_remove_entity_request_type::CheatRemoveEntityRequest;
pub use cheat_remove_entity_resource_reducer::{
    CheatRemoveEntityResourceCallbackId, cheat_remove_entity_resource,
    set_flags_for_cheat_remove_entity_resource,
};
pub use cheat_set_ai_debug_state_reducer::{
    CheatSetAiDebugStateCallbackId, cheat_set_ai_debug_state,
    set_flags_for_cheat_set_ai_debug_state,
};
pub use cheat_set_debug_ai_state_request_type::CheatSetDebugAiStateRequest;
pub use cheat_spawn_loot_chest_reducer::{
    CheatSpawnLootChestCallbackId, cheat_spawn_loot_chest, set_flags_for_cheat_spawn_loot_chest,
};
pub use cheat_spawn_loot_chest_request_type::CheatSpawnLootChestRequest;
pub use cheat_teleport_float_reducer::{
    CheatTeleportFloatCallbackId, cheat_teleport_float, set_flags_for_cheat_teleport_float,
};
pub use cheat_teleport_float_request_type::CheatTeleportFloatRequest;
pub use cheat_terraform_reducer::{
    CheatTerraformCallbackId, cheat_terraform, set_flags_for_cheat_terraform,
};
pub use cheat_terraform_request_type::CheatTerraformRequest;
pub use cheat_toggle_active_collectible_reducer::{
    CheatToggleActiveCollectibleCallbackId, cheat_toggle_active_collectible,
    set_flags_for_cheat_toggle_active_collectible,
};
pub use cheat_toggle_active_collectible_request_type::CheatToggleActiveCollectibleRequest;
pub use cheat_warp_reducer::{CheatWarpCallbackId, cheat_warp, set_flags_for_cheat_warp};
pub use cheat_warp_request_type::CheatWarpRequest;
pub use chest_loot_rarity_type::ChestLootRarity;
pub use chest_rarity_desc_table::*;
pub use chest_rarity_desc_type::ChestRarityDesc;
pub use chunk_coordinates_message_type::ChunkCoordinatesMessage;
pub use claim_add_member_reducer::{
    ClaimAddMemberCallbackId, claim_add_member, set_flags_for_claim_add_member,
};
pub use claim_add_recruitment_reducer::{
    ClaimAddRecruitmentCallbackId, claim_add_recruitment, set_flags_for_claim_add_recruitment,
};
pub use claim_add_tile_reducer::{
    ClaimAddTileCallbackId, claim_add_tile, set_flags_for_claim_add_tile,
};
pub use claim_apply_for_recruitment_reducer::{
    ClaimApplyForRecruitmentCallbackId, claim_apply_for_recruitment,
    set_flags_for_claim_apply_for_recruitment,
};
pub use claim_create_empire_settlement_msg_type::ClaimCreateEmpireSettlementMsg;
pub use claim_leave_reducer::{ClaimLeaveCallbackId, claim_leave, set_flags_for_claim_leave};
pub use claim_local_state_table::*;
pub use claim_local_state_type::ClaimLocalState;
pub use claim_member_state_op_type::ClaimMemberStateOp;
pub use claim_member_state_table::*;
pub use claim_member_state_type::ClaimMemberState;
pub use claim_permission_type::ClaimPermission;
pub use claim_purchase_supplies_from_player_reducer::{
    ClaimPurchaseSuppliesFromPlayerCallbackId, claim_purchase_supplies_from_player,
    set_flags_for_claim_purchase_supplies_from_player,
};
pub use claim_purchase_supplies_from_player_request_type::ClaimPurchaseSuppliesFromPlayerRequest;
pub use claim_recruitment_state_table::*;
pub use claim_recruitment_state_type::ClaimRecruitmentState;
pub use claim_remove_member_reducer::{
    ClaimRemoveMemberCallbackId, claim_remove_member, set_flags_for_claim_remove_member,
};
pub use claim_remove_recruitment_reducer::{
    ClaimRemoveRecruitmentCallbackId, claim_remove_recruitment,
    set_flags_for_claim_remove_recruitment,
};
pub use claim_remove_tile_reducer::{
    ClaimRemoveTileCallbackId, claim_remove_tile, set_flags_for_claim_remove_tile,
};
pub use claim_rename_reducer::{ClaimRenameCallbackId, claim_rename, set_flags_for_claim_rename};
pub use claim_resupply_reducer::{
    ClaimResupplyCallbackId, claim_resupply, set_flags_for_claim_resupply,
};
pub use claim_resupply_request_type::ClaimResupplyRequest;
pub use claim_resupply_start_reducer::{
    ClaimResupplyStartCallbackId, claim_resupply_start, set_flags_for_claim_resupply_start,
};
pub use claim_set_member_permissions_reducer::{
    ClaimSetMemberPermissionsCallbackId, claim_set_member_permissions,
    set_flags_for_claim_set_member_permissions,
};
pub use claim_set_purchase_supply_price_reducer::{
    ClaimSetPurchaseSupplyPriceCallbackId, claim_set_purchase_supply_price,
    set_flags_for_claim_set_purchase_supply_price,
};
pub use claim_set_purchase_supply_price_request_type::ClaimSetPurchaseSupplyPriceRequest;
pub use claim_set_purchase_supply_threshold_reducer::{
    ClaimSetPurchaseSupplyThresholdCallbackId, claim_set_purchase_supply_threshold,
    set_flags_for_claim_set_purchase_supply_threshold,
};
pub use claim_set_purchase_supply_threshold_request_type::ClaimSetPurchaseSupplyThresholdRequest;
pub use claim_state_op_type::ClaimStateOp;
pub use claim_state_table::*;
pub use claim_state_type::ClaimState;
pub use claim_take_ownership_reducer::{
    ClaimTakeOwnershipCallbackId, claim_take_ownership, set_flags_for_claim_take_ownership,
};
pub use claim_tech_cancel_reducer::{
    ClaimTechCancelCallbackId, claim_tech_cancel, set_flags_for_claim_tech_cancel,
};
pub use claim_tech_desc_table::*;
pub use claim_tech_desc_type::ClaimTechDesc;
pub use claim_tech_learn_reducer::{
    ClaimTechLearnCallbackId, claim_tech_learn, set_flags_for_claim_tech_learn,
};
pub use claim_tech_state_table::*;
pub use claim_tech_state_type::ClaimTechState;
pub use claim_tech_unlock_tech_reducer::{
    ClaimTechUnlockTechCallbackId, claim_tech_unlock_tech, set_flags_for_claim_tech_unlock_tech,
};
pub use claim_tech_unlock_timer_table::*;
pub use claim_tech_unlock_timer_type::ClaimTechUnlockTimer;
pub use claim_tile_cost_table::*;
pub use claim_tile_cost_type::ClaimTileCost;
pub use claim_tile_state_table::*;
pub use claim_tile_state_type::ClaimTileState;
pub use claim_transfer_ownership_reducer::{
    ClaimTransferOwnershipCallbackId, claim_transfer_ownership,
    set_flags_for_claim_transfer_ownership,
};
pub use claim_type_type::ClaimType;
pub use claim_withdraw_from_treasury_reducer::{
    ClaimWithdrawFromTreasuryCallbackId, claim_withdraw_from_treasury,
    set_flags_for_claim_withdraw_from_treasury,
};
pub use clear_staged_static_data_reducer::{
    ClearStagedStaticDataCallbackId, clear_staged_static_data,
    set_flags_for_clear_staged_static_data,
};
pub use climb_requirement_desc_table::*;
pub use climb_requirement_desc_type::ClimbRequirementDesc;
pub use closed_listing_collect_reducer::{
    ClosedListingCollectCallbackId, closed_listing_collect, set_flags_for_closed_listing_collect,
};
pub use closed_listing_state_table::*;
pub use closed_listing_state_type::ClosedListingState;
pub use clothing_desc_table::*;
pub use clothing_desc_type::ClothingDesc;
pub use clothing_mask_type::ClothingMask;
pub use clothing_visual_type::ClothingVisual;
pub use collect_stats_reducer_reducer::{
    CollectStatsReducerCallbackId, collect_stats_reducer, set_flags_for_collect_stats_reducer,
};
pub use collect_stats_timer_table::*;
pub use collect_stats_timer_type::CollectStatsTimer;
pub use collectible_activate_reducer::{
    CollectibleActivateCallbackId, collectible_activate, set_flags_for_collectible_activate,
};
pub use collectible_desc_table::*;
pub use collectible_desc_type::CollectibleDesc;
pub use collectible_type_type::CollectibleType;
pub use combat_action_desc_table::*;
pub use combat_action_desc_type::CombatActionDesc;
pub use combat_state_table::*;
pub use combat_state_type::CombatState;
pub use commit_staged_static_data_reducer::{
    CommitStagedStaticDataCallbackId, commit_staged_static_data,
    set_flags_for_commit_staged_static_data,
};
pub use common_rng_type::CommonRng;
pub use complete_onboarding_quest_reducer::{
    CompleteOnboardingQuestCallbackId, complete_onboarding_quest,
    set_flags_for_complete_onboarding_quest,
};
pub use complete_onboarding_state_reducer::{
    CompleteOnboardingStateCallbackId, complete_onboarding_state,
    set_flags_for_complete_onboarding_state,
};
pub use config_table::*;
pub use config_type::Config;
pub use construction_recipe_desc_table::*;
pub use construction_recipe_desc_type::ConstructionRecipeDesc;
pub use convert_collectible_to_deed_reducer::{
    ConvertCollectibleToDeedCallbackId, convert_collectible_to_deed,
    set_flags_for_convert_collectible_to_deed,
};
pub use convert_deed_to_collectible_reducer::{
    ConvertDeedToCollectibleCallbackId, convert_deed_to_collectible,
    set_flags_for_convert_deed_to_collectible,
};
pub use craft_cancel_reducer::{CraftCancelCallbackId, craft_cancel, set_flags_for_craft_cancel};
pub use craft_collect_all_reducer::{
    CraftCollectAllCallbackId, craft_collect_all, set_flags_for_craft_collect_all,
};
pub use craft_collect_reducer::{
    CraftCollectCallbackId, craft_collect, set_flags_for_craft_collect,
};
pub use craft_continue_reducer::{
    CraftContinueCallbackId, craft_continue, set_flags_for_craft_continue,
};
pub use craft_continue_start_reducer::{
    CraftContinueStartCallbackId, craft_continue_start, set_flags_for_craft_continue_start,
};
pub use craft_initiate_reducer::{
    CraftInitiateCallbackId, craft_initiate, set_flags_for_craft_initiate,
};
pub use craft_initiate_start_reducer::{
    CraftInitiateStartCallbackId, craft_initiate_start, set_flags_for_craft_initiate_start,
};
pub use crafting_recipe_desc_table::*;
pub use crafting_recipe_desc_type::CraftingRecipeDesc;
pub use csv_stat_entry_type::CsvStatEntry;
pub use current_version_reducer::{
    CurrentVersionCallbackId, current_version, set_flags_for_current_version,
};
pub use day_night_agent_loop_reducer::{
    DayNightAgentLoopCallbackId, day_night_agent_loop, set_flags_for_day_night_agent_loop,
};
pub use day_night_loop_timer_table::*;
pub use day_night_loop_timer_type::DayNightLoopTimer;
pub use deconstruction_recipe_desc_table::*;
pub use deconstruction_recipe_desc_type::DeconstructionRecipeDesc;
pub use delete_all_npcs_reducer::{
    DeleteAllNpcsCallbackId, delete_all_npcs, set_flags_for_delete_all_npcs,
};
pub use delete_empire_msg_type::DeleteEmpireMsg;
pub use deployable_collectible_state_table::*;
pub use deployable_collectible_state_type::DeployableCollectibleState;
pub use deployable_deploy_reducer::{
    DeployableDeployCallbackId, deployable_deploy, set_flags_for_deployable_deploy,
};
pub use deployable_deploy_request_type::DeployableDeployRequest;
pub use deployable_deploy_start_reducer::{
    DeployableDeployStartCallbackId, deployable_deploy_start, set_flags_for_deployable_deploy_start,
};
pub use deployable_desc_table::*;
pub use deployable_desc_type::DeployableDesc;
pub use deployable_dismount_reducer::{
    DeployableDismountCallbackId, deployable_dismount, set_flags_for_deployable_dismount,
};
pub use deployable_dismount_scheduled_reducer::{
    DeployableDismountScheduledCallbackId, deployable_dismount_scheduled,
    set_flags_for_deployable_dismount_scheduled,
};
pub use deployable_dismount_timer_table::*;
pub use deployable_dismount_timer_type::DeployableDismountTimer;
pub use deployable_mount_reducer::{
    DeployableMountCallbackId, deployable_mount, set_flags_for_deployable_mount,
};
pub use deployable_move_off_claim_reducer::{
    DeployableMoveOffClaimCallbackId, deployable_move_off_claim,
    set_flags_for_deployable_move_off_claim,
};
pub use deployable_move_reducer::{
    DeployableMoveCallbackId, deployable_move, set_flags_for_deployable_move,
};
pub use deployable_state_table::*;
pub use deployable_state_type::DeployableState;
pub use deployable_store_reducer::{
    DeployableStoreCallbackId, deployable_store, set_flags_for_deployable_store,
};
pub use deployable_store_request_type::DeployableStoreRequest;
pub use deployable_store_start_reducer::{
    DeployableStoreStartCallbackId, deployable_store_start, set_flags_for_deployable_store_start,
};
pub use deployable_type_type::DeployableType;
pub use destroy_dimension_network_reducer::{
    DestroyDimensionNetworkCallbackId, destroy_dimension_network,
    set_flags_for_destroy_dimension_network,
};
pub use destroy_dimension_network_timer_table::*;
pub use destroy_dimension_network_timer_type::DestroyDimensionNetworkTimer;
pub use dev_delete_world_reducer::{
    DevDeleteWorldCallbackId, dev_delete_world, set_flags_for_dev_delete_world,
};
pub use dimension_description_state_table::*;
pub use dimension_description_state_type::DimensionDescriptionState;
pub use dimension_network_state_table::*;
pub use dimension_network_state_type::DimensionNetworkState;
pub use dimension_type_type::DimensionType;
pub use discover_entities_reducer::{
    DiscoverEntitiesCallbackId, discover_entities, set_flags_for_discover_entities,
};
pub use distant_visible_entity_desc_table::*;
pub use distant_visible_entity_desc_type::DistantVisibleEntityDesc;
pub use distant_visible_entity_table::*;
pub use distant_visible_entity_type::DistantVisibleEntity;
pub use dropped_inventory_despawn_reducer::{
    DroppedInventoryDespawnCallbackId, dropped_inventory_despawn,
    set_flags_for_dropped_inventory_despawn,
};
pub use dropped_inventory_despawn_timer_table::*;
pub use dropped_inventory_despawn_timer_type::DroppedInventoryDespawnTimer;
pub use dropped_inventory_lose_ownership_reducer::{
    DroppedInventoryLoseOwnershipCallbackId, dropped_inventory_lose_ownership,
    set_flags_for_dropped_inventory_lose_ownership,
};
pub use dropped_inventory_ownership_timer_table::*;
pub use dropped_inventory_ownership_timer_type::DroppedInventoryOwnershipTimer;
pub use dropped_inventory_state_table::*;
pub use dropped_inventory_state_type::DroppedInventoryState;
pub use duel_agent_timer_loop_reducer::{
    DuelAgentTimerLoopCallbackId, duel_agent_timer_loop, set_flags_for_duel_agent_timer_loop,
};
pub use duel_agent_timer_table::*;
pub use duel_agent_timer_type::DuelAgentTimer;
pub use duel_despawn_reducer::{DuelDespawnCallbackId, duel_despawn, set_flags_for_duel_despawn};
pub use duel_despawn_timer_table::*;
pub use duel_despawn_timer_type::DuelDespawnTimer;
pub use duel_state_table::*;
pub use duel_state_type::DuelState;
pub use eat_reducer::{EatCallbackId, eat, set_flags_for_eat};
pub use elevator_desc_table::*;
pub use elevator_desc_type::ElevatorDesc;
pub use emote_desc_table::*;
pub use emote_desc_type::EmoteDesc;
pub use emote_reducer::{EmoteCallbackId, emote, set_flags_for_emote};
pub use emote_start_reducer::{EmoteStartCallbackId, emote_start, set_flags_for_emote_start};
pub use empire_add_siege_supplies_reducer::{
    EmpireAddSiegeSuppliesCallbackId, empire_add_siege_supplies,
    set_flags_for_empire_add_siege_supplies,
};
pub use empire_add_siege_supplies_request_type::EmpireAddSiegeSuppliesRequest;
pub use empire_chunk_state_op_type::EmpireChunkStateOp;
pub use empire_chunk_state_table::*;
pub use empire_chunk_state_type::EmpireChunkState;
pub use empire_claim_join_msg_type::EmpireClaimJoinMsg;
pub use empire_claim_join_reducer::{
    EmpireClaimJoinCallbackId, empire_claim_join, set_flags_for_empire_claim_join,
};
pub use empire_collect_hexite_capsule_msg_type::EmpireCollectHexiteCapsuleMsg;
pub use empire_collect_hexite_capsule_reducer::{
    EmpireCollectHexiteCapsuleCallbackId, empire_collect_hexite_capsule,
    set_flags_for_empire_collect_hexite_capsule,
};
pub use empire_collect_hexite_capsule_request_type::EmpireCollectHexiteCapsuleRequest;
pub use empire_color_desc_table::*;
pub use empire_color_desc_type::EmpireColorDesc;
pub use empire_create_building_msg_type::EmpireCreateBuildingMsg;
pub use empire_deploy_siege_engine_reducer::{
    EmpireDeploySiegeEngineCallbackId, empire_deploy_siege_engine,
    set_flags_for_empire_deploy_siege_engine,
};
pub use empire_deploy_siege_engine_start_reducer::{
    EmpireDeploySiegeEngineStartCallbackId, empire_deploy_siege_engine_start,
    set_flags_for_empire_deploy_siege_engine_start,
};
pub use empire_expansion_state_op_type::EmpireExpansionStateOp;
pub use empire_expansion_state_table::*;
pub use empire_expansion_state_type::EmpireExpansionState;
pub use empire_icon_desc_table::*;
pub use empire_icon_desc_type::EmpireIconDesc;
pub use empire_node_siege_state_op_type::EmpireNodeSiegeStateOp;
pub use empire_node_siege_state_table::*;
pub use empire_node_siege_state_type::EmpireNodeSiegeState;
pub use empire_node_state_op_type::EmpireNodeStateOp;
pub use empire_node_state_table::*;
pub use empire_node_state_type::EmpireNodeState;
pub use empire_notification_desc_table::*;
pub use empire_notification_desc_type::EmpireNotificationDesc;
pub use empire_notification_type_type::EmpireNotificationType;
pub use empire_player_data_state_op_type::EmpirePlayerDataStateOp;
pub use empire_player_data_state_table::*;
pub use empire_player_data_state_type::EmpirePlayerDataState;
pub use empire_queue_supplies_msg_type::EmpireQueueSuppliesMsg;
pub use empire_queue_supplies_reducer::{
    EmpireQueueSuppliesCallbackId, empire_queue_supplies, set_flags_for_empire_queue_supplies,
};
pub use empire_queue_supplies_request_type::EmpireQueueSuppliesRequest;
pub use empire_rank_desc_table::*;
pub use empire_rank_desc_type::EmpireRankDesc;
pub use empire_rank_state_op_type::EmpireRankStateOp;
pub use empire_rank_state_table::*;
pub use empire_rank_state_type::EmpireRankState;
pub use empire_remove_crown_msg_type::EmpireRemoveCrownMsg;
pub use empire_resupply_node_msg_type::EmpireResupplyNodeMsg;
pub use empire_resupply_node_reducer::{
    EmpireResupplyNodeCallbackId, empire_resupply_node, set_flags_for_empire_resupply_node,
};
pub use empire_resupply_node_request_type::EmpireResupplyNodeRequest;
pub use empire_resupply_node_start_reducer::{
    EmpireResupplyNodeStartCallbackId, empire_resupply_node_start,
    set_flags_for_empire_resupply_node_start,
};
pub use empire_settlement_state_op_type::EmpireSettlementStateOp;
pub use empire_settlement_state_table::*;
pub use empire_settlement_state_type::EmpireSettlementState;
pub use empire_siege_add_supplies_msg_type::EmpireSiegeAddSuppliesMsg;
pub use empire_siege_depleted_watchtower_reducer::{
    EmpireSiegeDepletedWatchtowerCallbackId, empire_siege_depleted_watchtower,
    set_flags_for_empire_siege_depleted_watchtower,
};
pub use empire_start_siege_msg_type::EmpireStartSiegeMsg;
pub use empire_start_siege_request_type::EmpireStartSiegeRequest;
pub use empire_state_op_type::EmpireStateOp;
pub use empire_state_table::*;
pub use empire_state_type::EmpireState;
pub use empire_supplies_desc_table::*;
pub use empire_supplies_desc_type::EmpireSuppliesDesc;
pub use empire_territory_desc_table::*;
pub use empire_territory_desc_type::EmpireTerritoryDesc;
pub use empire_update_emperor_crown_msg_type::EmpireUpdateEmperorCrownMsg;
pub use end_grace_period_reducer::{
    EndGracePeriodCallbackId, end_grace_period, set_flags_for_end_grace_period,
};
pub use end_grace_period_timer_table::*;
pub use end_grace_period_timer_type::EndGracePeriodTimer;
pub use enemy_ai_params_desc_table::*;
pub use enemy_ai_params_desc_type::EnemyAiParamsDesc;
pub use enemy_clear_aggro_reducer::{
    EnemyClearAggroCallbackId, enemy_clear_aggro, set_flags_for_enemy_clear_aggro,
};
pub use enemy_clear_aggro_request_type::EnemyClearAggroRequest;
pub use enemy_desc_table::*;
pub use enemy_desc_type::EnemyDesc;
pub use enemy_despawn_from_mob_monitor_batch_reducer::{
    EnemyDespawnFromMobMonitorBatchCallbackId, enemy_despawn_from_mob_monitor_batch,
    set_flags_for_enemy_despawn_from_mob_monitor_batch,
};
pub use enemy_despawn_from_mob_monitor_reducer::{
    EnemyDespawnFromMobMonitorCallbackId, enemy_despawn_from_mob_monitor,
    set_flags_for_enemy_despawn_from_mob_monitor,
};
pub use enemy_despawn_reducer::{
    EnemyDespawnCallbackId, enemy_despawn, set_flags_for_enemy_despawn,
};
pub use enemy_despawn_timer_table::*;
pub use enemy_despawn_timer_type::EnemyDespawnTimer;
pub use enemy_mob_monitor_state_table::*;
pub use enemy_mob_monitor_state_type::EnemyMobMonitorState;
pub use enemy_move_batch_reducer::{
    EnemyMoveBatchCallbackId, enemy_move_batch, set_flags_for_enemy_move_batch,
};
pub use enemy_move_reducer::{EnemyMoveCallbackId, enemy_move, set_flags_for_enemy_move};
pub use enemy_move_request_type::EnemyMoveRequest;
pub use enemy_regen_agent_loop_reducer::{
    EnemyRegenAgentLoopCallbackId, enemy_regen_agent_loop, set_flags_for_enemy_regen_agent_loop,
};
pub use enemy_regen_loop_timer_table::*;
pub use enemy_regen_loop_timer_type::EnemyRegenLoopTimer;
pub use enemy_set_health_batch_reducer::{
    EnemySetHealthBatchCallbackId, enemy_set_health_batch, set_flags_for_enemy_set_health_batch,
};
pub use enemy_set_health_reducer::{
    EnemySetHealthCallbackId, enemy_set_health, set_flags_for_enemy_set_health,
};
pub use enemy_set_health_request_type::EnemySetHealthRequest;
pub use enemy_spawn_batch_reducer::{
    EnemySpawnBatchCallbackId, enemy_spawn_batch, set_flags_for_enemy_spawn_batch,
};
pub use enemy_spawn_loot_reducer::{
    EnemySpawnLootCallbackId, enemy_spawn_loot, set_flags_for_enemy_spawn_loot,
};
pub use enemy_spawn_loot_request_type::EnemySpawnLootRequest;
pub use enemy_spawn_reducer::{EnemySpawnCallbackId, enemy_spawn, set_flags_for_enemy_spawn};
pub use enemy_spawn_request_type::EnemySpawnRequest;
pub use enemy_state_table::*;
pub use enemy_state_type::EnemyState;
pub use enemy_status_type::EnemyStatus;
pub use enemy_type_type::EnemyType;
pub use entity_attack_request_type::EntityAttackRequest;
pub use entity_type_type::EntityType;
pub use environment_debuff_agent_loop_reducer::{
    EnvironmentDebuffAgentLoopCallbackId, environment_debuff_agent_loop,
    set_flags_for_environment_debuff_agent_loop,
};
pub use environment_debuff_desc_table::*;
pub use environment_debuff_desc_type::EnvironmentDebuffDesc;
pub use environment_debuff_loop_timer_table::*;
pub use environment_debuff_loop_timer_type::EnvironmentDebuffLoopTimer;
pub use environment_resistance_type_type::EnvironmentResistanceType;
pub use equipment_add_reducer::{
    EquipmentAddCallbackId, equipment_add, set_flags_for_equipment_add,
};
pub use equipment_desc_table::*;
pub use equipment_desc_type::EquipmentDesc;
pub use equipment_remove_reducer::{
    EquipmentRemoveCallbackId, equipment_remove, set_flags_for_equipment_remove,
};
pub use equipment_slot_type::EquipmentSlot;
pub use equipment_slot_type_type::EquipmentSlotType;
pub use equipment_state_table::*;
pub use equipment_state_type::EquipmentState;
pub use equipment_visual_type_type::EquipmentVisualType;
pub use experience_stack_f_32_type::ExperienceStackF32;
pub use experience_stack_type::ExperienceStack;
pub use experience_state_table::*;
pub use experience_state_type::ExperienceState;
pub use exploration_chunks_state_table::*;
pub use exploration_chunks_state_type::ExplorationChunksState;
pub use extract_outcome_state_table::*;
pub use extract_outcome_state_type::ExtractOutcomeState;
pub use extract_reducer::{ExtractCallbackId, extract, set_flags_for_extract};
pub use extract_start_reducer::{
    ExtractStartCallbackId, extract_start, set_flags_for_extract_start,
};
pub use extraction_recipe_desc_table::*;
pub use extraction_recipe_desc_type::ExtractionRecipeDesc;
pub use float_hex_tile_message_type::FloatHexTileMessage;
pub use food_desc_table::*;
pub use food_desc_type::FoodDesc;
pub use footprint_tile_state_table::*;
pub use footprint_tile_state_type::FootprintTileState;
pub use footprint_tile_type::FootprintTile;
pub use footprint_type_type::FootprintType;
pub use force_generate_types_table::*;
pub use force_generate_types_type::ForceGenerateTypes;
pub use force_start_agents_reducer::{
    ForceStartAgentsCallbackId, force_start_agents, set_flags_for_force_start_agents,
};
pub use gate_desc_table::*;
pub use gate_desc_type::GateDesc;
pub use generate_dev_island_reducer::{
    GenerateDevIslandCallbackId, generate_dev_island, set_flags_for_generate_dev_island,
};
pub use generate_flat_world_reducer::{
    GenerateFlatWorldCallbackId, generate_flat_world, set_flags_for_generate_flat_world,
};
pub use generate_world_reducer::{
    GenerateWorldCallbackId, generate_world, set_flags_for_generate_world,
};
pub use global_delete_empire_building_msg_type::GlobalDeleteEmpireBuildingMsg;
pub use global_search_state_table::*;
pub use global_search_state_type::GlobalSearchState;
pub use globals_table::*;
pub use globals_type::Globals;
pub use grace_period_type_type::GracePeriodType;
pub use grant_hub_item_msg_type::GrantHubItemMsg;
pub use growth_agent_loop_reducer::{
    GrowthAgentLoopCallbackId, growth_agent_loop, set_flags_for_growth_agent_loop,
};
pub use growth_loop_timer_table::*;
pub use growth_loop_timer_type::GrowthLoopTimer;
pub use growth_state_table::*;
pub use growth_state_type::GrowthState;
pub use hand_equipment_visual_type::HandEquipmentVisual;
pub use health_state_table::*;
pub use health_state_type::HealthState;
pub use herd_state_table::*;
pub use herd_state_type::HerdState;
pub use hex_direction_type::HexDirection;
pub use hexite_exchange_entry_desc_table::*;
pub use hexite_exchange_entry_desc_type::HexiteExchangeEntryDesc;
pub use hide_deployable_reducer::{
    HideDeployableCallbackId, hide_deployable, set_flags_for_hide_deployable,
};
pub use hide_deployable_timer_table::*;
pub use hide_deployable_timer_type::HideDeployableTimer;
pub use hub_item_type_type::HubItemType;
pub use identity_connected_reducer::{
    IdentityConnectedCallbackId, identity_connected, set_flags_for_identity_connected,
};
pub use identity_disconnected_reducer::{
    IdentityDisconnectedCallbackId, identity_disconnected, set_flags_for_identity_disconnected,
};
pub use identity_role_op_type::IdentityRoleOp;
pub use identity_role_table::*;
pub use identity_role_type::IdentityRole;
pub use import_achievement_desc_reducer::{
    ImportAchievementDescCallbackId, import_achievement_desc, set_flags_for_import_achievement_desc,
};
pub use import_active_buff_state_reducer::{
    ImportActiveBuffStateCallbackId, import_active_buff_state,
    set_flags_for_import_active_buff_state,
};
pub use import_admin_broadcast_reducer::{
    ImportAdminBroadcastCallbackId, import_admin_broadcast, set_flags_for_import_admin_broadcast,
};
pub use import_alert_desc_reducer::{
    ImportAlertDescCallbackId, import_alert_desc, set_flags_for_import_alert_desc,
};
pub use import_alert_state_reducer::{
    ImportAlertStateCallbackId, import_alert_state, set_flags_for_import_alert_state,
};
pub use import_attack_outcome_state_reducer::{
    ImportAttackOutcomeStateCallbackId, import_attack_outcome_state,
    set_flags_for_import_attack_outcome_state,
};
pub use import_biome_desc_reducer::{
    ImportBiomeDescCallbackId, import_biome_desc, set_flags_for_import_biome_desc,
};
pub use import_buff_desc_reducer::{
    ImportBuffDescCallbackId, import_buff_desc, set_flags_for_import_buff_desc,
};
pub use import_buff_type_desc_reducer::{
    ImportBuffTypeDescCallbackId, import_buff_type_desc, set_flags_for_import_buff_type_desc,
};
pub use import_building_claim_desc_reducer::{
    ImportBuildingClaimDescCallbackId, import_building_claim_desc,
    set_flags_for_import_building_claim_desc,
};
pub use import_building_desc_reducer::{
    ImportBuildingDescCallbackId, import_building_desc, set_flags_for_import_building_desc,
};
pub use import_building_portal_desc_reducer::{
    ImportBuildingPortalDescCallbackId, import_building_portal_desc,
    set_flags_for_import_building_portal_desc,
};
pub use import_building_repairs_desc_reducer::{
    ImportBuildingRepairsDescCallbackId, import_building_repairs_desc,
    set_flags_for_import_building_repairs_desc,
};
pub use import_building_spawn_desc_reducer::{
    ImportBuildingSpawnDescCallbackId, import_building_spawn_desc,
    set_flags_for_import_building_spawn_desc,
};
pub use import_building_state_reducer::{
    ImportBuildingStateCallbackId, import_building_state, set_flags_for_import_building_state,
};
pub use import_building_type_desc_reducer::{
    ImportBuildingTypeDescCallbackId, import_building_type_desc,
    set_flags_for_import_building_type_desc,
};
pub use import_cargo_desc_reducer::{
    ImportCargoDescCallbackId, import_cargo_desc, set_flags_for_import_cargo_desc,
};
pub use import_character_stat_desc_reducer::{
    ImportCharacterStatDescCallbackId, import_character_stat_desc,
    set_flags_for_import_character_stat_desc,
};
pub use import_character_stats_state_reducer::{
    ImportCharacterStatsStateCallbackId, import_character_stats_state,
    set_flags_for_import_character_stats_state,
};
pub use import_chat_message_state_reducer::{
    ImportChatMessageStateCallbackId, import_chat_message_state,
    set_flags_for_import_chat_message_state,
};
pub use import_chest_rarity_desc_reducer::{
    ImportChestRarityDescCallbackId, import_chest_rarity_desc,
    set_flags_for_import_chest_rarity_desc,
};
pub use import_claim_local_state_reducer::{
    ImportClaimLocalStateCallbackId, import_claim_local_state,
    set_flags_for_import_claim_local_state,
};
pub use import_claim_recruitment_state_reducer::{
    ImportClaimRecruitmentStateCallbackId, import_claim_recruitment_state,
    set_flags_for_import_claim_recruitment_state,
};
pub use import_claim_state_reducer::{
    ImportClaimStateCallbackId, import_claim_state, set_flags_for_import_claim_state,
};
pub use import_claim_tech_desc_reducer::{
    ImportClaimTechDescCallbackId, import_claim_tech_desc, set_flags_for_import_claim_tech_desc,
};
pub use import_claim_tech_state_reducer::{
    ImportClaimTechStateCallbackId, import_claim_tech_state, set_flags_for_import_claim_tech_state,
};
pub use import_claim_tile_cost_reducer::{
    ImportClaimTileCostCallbackId, import_claim_tile_cost, set_flags_for_import_claim_tile_cost,
};
pub use import_claim_tile_state_reducer::{
    ImportClaimTileStateCallbackId, import_claim_tile_state, set_flags_for_import_claim_tile_state,
};
pub use import_climb_requirement_desc_reducer::{
    ImportClimbRequirementDescCallbackId, import_climb_requirement_desc,
    set_flags_for_import_climb_requirement_desc,
};
pub use import_clothing_desc_reducer::{
    ImportClothingDescCallbackId, import_clothing_desc, set_flags_for_import_clothing_desc,
};
pub use import_collectible_desc_reducer::{
    ImportCollectibleDescCallbackId, import_collectible_desc, set_flags_for_import_collectible_desc,
};
pub use import_combat_action_desc_reducer::{
    ImportCombatActionDescCallbackId, import_combat_action_desc,
    set_flags_for_import_combat_action_desc,
};
pub use import_combat_state_reducer::{
    ImportCombatStateCallbackId, import_combat_state, set_flags_for_import_combat_state,
};
pub use import_config_reducer::{
    ImportConfigCallbackId, import_config, set_flags_for_import_config,
};
pub use import_construction_recipe_desc_reducer::{
    ImportConstructionRecipeDescCallbackId, import_construction_recipe_desc,
    set_flags_for_import_construction_recipe_desc,
};
pub use import_crafting_recipe_desc_reducer::{
    ImportCraftingRecipeDescCallbackId, import_crafting_recipe_desc,
    set_flags_for_import_crafting_recipe_desc,
};
pub use import_deconstruction_recipe_desc_reducer::{
    ImportDeconstructionRecipeDescCallbackId, import_deconstruction_recipe_desc,
    set_flags_for_import_deconstruction_recipe_desc,
};
pub use import_deployable_desc_reducer::{
    ImportDeployableDescCallbackId, import_deployable_desc, set_flags_for_import_deployable_desc,
};
pub use import_deployable_state_reducer::{
    ImportDeployableStateCallbackId, import_deployable_state, set_flags_for_import_deployable_state,
};
pub use import_dimension_description_state_reducer::{
    ImportDimensionDescriptionStateCallbackId, import_dimension_description_state,
    set_flags_for_import_dimension_description_state,
};
pub use import_dimension_network_description_state_reducer::{
    ImportDimensionNetworkDescriptionStateCallbackId, import_dimension_network_description_state,
    set_flags_for_import_dimension_network_description_state,
};
pub use import_distant_visible_entity_desc_reducer::{
    ImportDistantVisibleEntityDescCallbackId, import_distant_visible_entity_desc,
    set_flags_for_import_distant_visible_entity_desc,
};
pub use import_dropped_inventory_state_reducer::{
    ImportDroppedInventoryStateCallbackId, import_dropped_inventory_state,
    set_flags_for_import_dropped_inventory_state,
};
pub use import_elevator_desc_reducer::{
    ImportElevatorDescCallbackId, import_elevator_desc, set_flags_for_import_elevator_desc,
};
pub use import_emote_desc_reducer::{
    ImportEmoteDescCallbackId, import_emote_desc, set_flags_for_import_emote_desc,
};
pub use import_empire_colors_desc_reducer::{
    ImportEmpireColorsDescCallbackId, import_empire_colors_desc,
    set_flags_for_import_empire_colors_desc,
};
pub use import_empire_icon_desc_reducer::{
    ImportEmpireIconDescCallbackId, import_empire_icon_desc, set_flags_for_import_empire_icon_desc,
};
pub use import_empire_notification_desc_reducer::{
    ImportEmpireNotificationDescCallbackId, import_empire_notification_desc,
    set_flags_for_import_empire_notification_desc,
};
pub use import_empire_rank_desc_reducer::{
    ImportEmpireRankDescCallbackId, import_empire_rank_desc, set_flags_for_import_empire_rank_desc,
};
pub use import_empire_supplies_desc_reducer::{
    ImportEmpireSuppliesDescCallbackId, import_empire_supplies_desc,
    set_flags_for_import_empire_supplies_desc,
};
pub use import_empire_territory_desc_reducer::{
    ImportEmpireTerritoryDescCallbackId, import_empire_territory_desc,
    set_flags_for_import_empire_territory_desc,
};
pub use import_enemy_ai_params_desc_reducer::{
    ImportEnemyAiParamsDescCallbackId, import_enemy_ai_params_desc,
    set_flags_for_import_enemy_ai_params_desc,
};
pub use import_enemy_desc_reducer::{
    ImportEnemyDescCallbackId, import_enemy_desc, set_flags_for_import_enemy_desc,
};
pub use import_enemy_state_reducer::{
    ImportEnemyStateCallbackId, import_enemy_state, set_flags_for_import_enemy_state,
};
pub use import_environment_debuff_desc_reducer::{
    ImportEnvironmentDebuffDescCallbackId, import_environment_debuff_desc,
    set_flags_for_import_environment_debuff_desc,
};
pub use import_equipment_desc_reducer::{
    ImportEquipmentDescCallbackId, import_equipment_desc, set_flags_for_import_equipment_desc,
};
pub use import_equipment_state_reducer::{
    ImportEquipmentStateCallbackId, import_equipment_state, set_flags_for_import_equipment_state,
};
pub use import_experience_state_reducer::{
    ImportExperienceStateCallbackId, import_experience_state, set_flags_for_import_experience_state,
};
pub use import_exploration_chunks_state_reducer::{
    ImportExplorationChunksStateCallbackId, import_exploration_chunks_state,
    set_flags_for_import_exploration_chunks_state,
};
pub use import_extraction_recipe_desc_reducer::{
    ImportExtractionRecipeDescCallbackId, import_extraction_recipe_desc,
    set_flags_for_import_extraction_recipe_desc,
};
pub use import_food_desc_reducer::{
    ImportFoodDescCallbackId, import_food_desc, set_flags_for_import_food_desc,
};
pub use import_footprint_tile_state_reducer::{
    ImportFootprintTileStateCallbackId, import_footprint_tile_state,
    set_flags_for_import_footprint_tile_state,
};
pub use import_gate_desc_reducer::{
    ImportGateDescCallbackId, import_gate_desc, set_flags_for_import_gate_desc,
};
pub use import_globals_reducer::{
    ImportGlobalsCallbackId, import_globals, set_flags_for_import_globals,
};
pub use import_growth_state_reducer::{
    ImportGrowthStateCallbackId, import_growth_state, set_flags_for_import_growth_state,
};
pub use import_health_state_reducer::{
    ImportHealthStateCallbackId, import_health_state, set_flags_for_import_health_state,
};
pub use import_herd_cache_reducer::{
    ImportHerdCacheCallbackId, import_herd_cache, set_flags_for_import_herd_cache,
};
pub use import_hexite_exchange_entry_desc_reducer::{
    ImportHexiteExchangeEntryDescCallbackId, import_hexite_exchange_entry_desc,
    set_flags_for_import_hexite_exchange_entry_desc,
};
pub use import_identity_role_reducer::{
    ImportIdentityRoleCallbackId, import_identity_role, set_flags_for_import_identity_role,
};
pub use import_interior_collapse_trigger_state_reducer::{
    ImportInteriorCollapseTriggerStateCallbackId, import_interior_collapse_trigger_state,
    set_flags_for_import_interior_collapse_trigger_state,
};
pub use import_interior_environment_desc_reducer::{
    ImportInteriorEnvironmentDescCallbackId, import_interior_environment_desc,
    set_flags_for_import_interior_environment_desc,
};
pub use import_interior_instance_desc_reducer::{
    ImportInteriorInstanceDescCallbackId, import_interior_instance_desc,
    set_flags_for_import_interior_instance_desc,
};
pub use import_interior_network_desc_reducer::{
    ImportInteriorNetworkDescCallbackId, import_interior_network_desc,
    set_flags_for_import_interior_network_desc,
};
pub use import_interior_portal_connections_desc_reducer::{
    ImportInteriorPortalConnectionsDescCallbackId, import_interior_portal_connections_desc,
    set_flags_for_import_interior_portal_connections_desc,
};
pub use import_interior_shape_desc_reducer::{
    ImportInteriorShapeDescCallbackId, import_interior_shape_desc,
    set_flags_for_import_interior_shape_desc,
};
pub use import_interior_spawn_desc_reducer::{
    ImportInteriorSpawnDescCallbackId, import_interior_spawn_desc,
    set_flags_for_import_interior_spawn_desc,
};
pub use import_inventory_state_reducer::{
    ImportInventoryStateCallbackId, import_inventory_state, set_flags_for_import_inventory_state,
};
pub use import_item_conversion_recipe_desc_reducer::{
    ImportItemConversionRecipeDescCallbackId, import_item_conversion_recipe_desc,
    set_flags_for_import_item_conversion_recipe_desc,
};
pub use import_item_desc_reducer::{
    ImportItemDescCallbackId, import_item_desc, set_flags_for_import_item_desc,
};
pub use import_item_list_desc_reducer::{
    ImportItemListDescCallbackId, import_item_list_desc, set_flags_for_import_item_list_desc,
};
pub use import_knowledge_achievement_state_reducer::{
    ImportKnowledgeAchievementStateCallbackId, import_knowledge_achievement_state,
    set_flags_for_import_knowledge_achievement_state,
};
pub use import_knowledge_battle_action_state_reducer::{
    ImportKnowledgeBattleActionStateCallbackId, import_knowledge_battle_action_state,
    set_flags_for_import_knowledge_battle_action_state,
};
pub use import_knowledge_building_state_reducer::{
    ImportKnowledgeBuildingStateCallbackId, import_knowledge_building_state,
    set_flags_for_import_knowledge_building_state,
};
pub use import_knowledge_cargo_state_reducer::{
    ImportKnowledgeCargoStateCallbackId, import_knowledge_cargo_state,
    set_flags_for_import_knowledge_cargo_state,
};
pub use import_knowledge_construction_state_reducer::{
    ImportKnowledgeConstructionStateCallbackId, import_knowledge_construction_state,
    set_flags_for_import_knowledge_construction_state,
};
pub use import_knowledge_craft_state_reducer::{
    ImportKnowledgeCraftStateCallbackId, import_knowledge_craft_state,
    set_flags_for_import_knowledge_craft_state,
};
pub use import_knowledge_deployable_state_reducer::{
    ImportKnowledgeDeployableStateCallbackId, import_knowledge_deployable_state,
    set_flags_for_import_knowledge_deployable_state,
};
pub use import_knowledge_enemy_state_reducer::{
    ImportKnowledgeEnemyStateCallbackId, import_knowledge_enemy_state,
    set_flags_for_import_knowledge_enemy_state,
};
pub use import_knowledge_extract_state_reducer::{
    ImportKnowledgeExtractStateCallbackId, import_knowledge_extract_state,
    set_flags_for_import_knowledge_extract_state,
};
pub use import_knowledge_item_state_reducer::{
    ImportKnowledgeItemStateCallbackId, import_knowledge_item_state,
    set_flags_for_import_knowledge_item_state,
};
pub use import_knowledge_lore_state_reducer::{
    ImportKnowledgeLoreStateCallbackId, import_knowledge_lore_state,
    set_flags_for_import_knowledge_lore_state,
};
pub use import_knowledge_npc_state_reducer::{
    ImportKnowledgeNpcStateCallbackId, import_knowledge_npc_state,
    set_flags_for_import_knowledge_npc_state,
};
pub use import_knowledge_paving_state_reducer::{
    ImportKnowledgePavingStateCallbackId, import_knowledge_paving_state,
    set_flags_for_import_knowledge_paving_state,
};
pub use import_knowledge_pillar_shaping_state_reducer::{
    ImportKnowledgePillarShapingStateCallbackId, import_knowledge_pillar_shaping_state,
    set_flags_for_import_knowledge_pillar_shaping_state,
};
pub use import_knowledge_resource_placement_state_reducer::{
    ImportKnowledgeResourcePlacementStateCallbackId, import_knowledge_resource_placement_state,
    set_flags_for_import_knowledge_resource_placement_state,
};
pub use import_knowledge_resource_state_reducer::{
    ImportKnowledgeResourceStateCallbackId, import_knowledge_resource_state,
    set_flags_for_import_knowledge_resource_state,
};
pub use import_knowledge_ruins_state_reducer::{
    ImportKnowledgeRuinsStateCallbackId, import_knowledge_ruins_state,
    set_flags_for_import_knowledge_ruins_state,
};
pub use import_knowledge_scroll_desc_reducer::{
    ImportKnowledgeScrollDescCallbackId, import_knowledge_scroll_desc,
    set_flags_for_import_knowledge_scroll_desc,
};
pub use import_knowledge_scroll_type_desc_reducer::{
    ImportKnowledgeScrollTypeDescCallbackId, import_knowledge_scroll_type_desc,
    set_flags_for_import_knowledge_scroll_type_desc,
};
pub use import_knowledge_secondary_state_reducer::{
    ImportKnowledgeSecondaryStateCallbackId, import_knowledge_secondary_state,
    set_flags_for_import_knowledge_secondary_state,
};
pub use import_knowledge_stat_modifier_desc_reducer::{
    ImportKnowledgeStatModifierDescCallbackId, import_knowledge_stat_modifier_desc,
    set_flags_for_import_knowledge_stat_modifier_desc,
};
pub use import_knowledge_vault_state_reducer::{
    ImportKnowledgeVaultStateCallbackId, import_knowledge_vault_state,
    set_flags_for_import_knowledge_vault_state,
};
pub use import_location_cache_reducer::{
    ImportLocationCacheCallbackId, import_location_cache, set_flags_for_import_location_cache,
};
pub use import_location_state_reducer::{
    ImportLocationStateCallbackId, import_location_state, set_flags_for_import_location_state,
};
pub use import_loot_chest_desc_reducer::{
    ImportLootChestDescCallbackId, import_loot_chest_desc, set_flags_for_import_loot_chest_desc,
};
pub use import_loot_chest_state_reducer::{
    ImportLootChestStateCallbackId, import_loot_chest_state, set_flags_for_import_loot_chest_state,
};
pub use import_loot_rarity_desc_reducer::{
    ImportLootRarityDescCallbackId, import_loot_rarity_desc, set_flags_for_import_loot_rarity_desc,
};
pub use import_loot_table_desc_reducer::{
    ImportLootTableDescCallbackId, import_loot_table_desc, set_flags_for_import_loot_table_desc,
};
pub use import_mobile_entity_state_reducer::{
    ImportMobileEntityStateCallbackId, import_mobile_entity_state,
    set_flags_for_import_mobile_entity_state,
};
pub use import_mounting_state_reducer::{
    ImportMountingStateCallbackId, import_mounting_state, set_flags_for_import_mounting_state,
};
pub use import_npc_desc_reducer::{
    ImportNpcDescCallbackId, import_npc_desc, set_flags_for_import_npc_desc,
};
pub use import_npc_state_reducer::{
    ImportNpcStateCallbackId, import_npc_state, set_flags_for_import_npc_state,
};
pub use import_onboarding_reward_desc_reducer::{
    ImportOnboardingRewardDescCallbackId, import_onboarding_reward_desc,
    set_flags_for_import_onboarding_reward_desc,
};
pub use import_onboarding_state_reducer::{
    ImportOnboardingStateCallbackId, import_onboarding_state, set_flags_for_import_onboarding_state,
};
pub use import_parameters_desc_reducer::{
    ImportParametersDescCallbackId, import_parameters_desc, set_flags_for_import_parameters_desc,
};
pub use import_pathfinding_desc_reducer::{
    ImportPathfindingDescCallbackId, import_pathfinding_desc, set_flags_for_import_pathfinding_desc,
};
pub use import_paved_tile_state_reducer::{
    ImportPavedTileStateCallbackId, import_paved_tile_state, set_flags_for_import_paved_tile_state,
};
pub use import_paving_tile_desc_reducer::{
    ImportPavingTileDescCallbackId, import_paving_tile_desc, set_flags_for_import_paving_tile_desc,
};
pub use import_pillar_shaping_desc_reducer::{
    ImportPillarShapingDescCallbackId, import_pillar_shaping_desc,
    set_flags_for_import_pillar_shaping_desc,
};
pub use import_player_action_desc_reducer::{
    ImportPlayerActionDescCallbackId, import_player_action_desc,
    set_flags_for_import_player_action_desc,
};
pub use import_player_action_state_reducer::{
    ImportPlayerActionStateCallbackId, import_player_action_state,
    set_flags_for_import_player_action_state,
};
pub use import_player_housing_desc_reducer::{
    ImportPlayerHousingDescCallbackId, import_player_housing_desc,
    set_flags_for_import_player_housing_desc,
};
pub use import_player_prefs_state_reducer::{
    ImportPlayerPrefsStateCallbackId, import_player_prefs_state,
    set_flags_for_import_player_prefs_state,
};
pub use import_player_state_reducer::{
    ImportPlayerStateCallbackId, import_player_state, set_flags_for_import_player_state,
};
pub use import_portal_state_reducer::{
    ImportPortalStateCallbackId, import_portal_state, set_flags_for_import_portal_state,
};
pub use import_private_parameters_desc_reducer::{
    ImportPrivateParametersDescCallbackId, import_private_parameters_desc,
    set_flags_for_import_private_parameters_desc,
};
pub use import_progressive_action_state_reducer::{
    ImportProgressiveActionStateCallbackId, import_progressive_action_state,
    set_flags_for_import_progressive_action_state,
};
pub use import_project_site_state_reducer::{
    ImportProjectSiteStateCallbackId, import_project_site_state,
    set_flags_for_import_project_site_state,
};
pub use import_rent_state_reducer::{
    ImportRentStateCallbackId, import_rent_state, set_flags_for_import_rent_state,
};
pub use import_resource_clump_desc_reducer::{
    ImportResourceClumpDescCallbackId, import_resource_clump_desc,
    set_flags_for_import_resource_clump_desc,
};
pub use import_resource_count_reducer::{
    ImportResourceCountCallbackId, import_resource_count, set_flags_for_import_resource_count,
};
pub use import_resource_desc_reducer::{
    ImportResourceDescCallbackId, import_resource_desc, set_flags_for_import_resource_desc,
};
pub use import_resource_growth_recipe_desc_reducer::{
    ImportResourceGrowthRecipeDescCallbackId, import_resource_growth_recipe_desc,
    set_flags_for_import_resource_growth_recipe_desc,
};
pub use import_resource_placement_recipe_desc_reducer::{
    ImportResourcePlacementRecipeDescCallbackId, import_resource_placement_recipe_desc,
    set_flags_for_import_resource_placement_recipe_desc,
};
pub use import_resource_state_reducer::{
    ImportResourceStateCallbackId, import_resource_state, set_flags_for_import_resource_state,
};
pub use import_resources_log_reducer::{
    ImportResourcesLogCallbackId, import_resources_log, set_flags_for_import_resources_log,
};
pub use import_satiation_state_reducer::{
    ImportSatiationStateCallbackId, import_satiation_state, set_flags_for_import_satiation_state,
};
pub use import_secondary_knowledge_desc_reducer::{
    ImportSecondaryKnowledgeDescCallbackId, import_secondary_knowledge_desc,
    set_flags_for_import_secondary_knowledge_desc,
};
pub use import_server_identity_reducer::{
    ImportServerIdentityCallbackId, import_server_identity, set_flags_for_import_server_identity,
};
pub use import_signed_in_player_state_reducer::{
    ImportSignedInPlayerStateCallbackId, import_signed_in_player_state,
    set_flags_for_import_signed_in_player_state,
};
pub use import_skill_desc_reducer::{
    ImportSkillDescCallbackId, import_skill_desc, set_flags_for_import_skill_desc,
};
pub use import_stamina_state_reducer::{
    ImportStaminaStateCallbackId, import_stamina_state, set_flags_for_import_stamina_state,
};
pub use import_target_state_reducer::{
    ImportTargetStateCallbackId, import_target_state, set_flags_for_import_target_state,
};
pub use import_targetable_state_reducer::{
    ImportTargetableStateCallbackId, import_targetable_state, set_flags_for_import_targetable_state,
};
pub use import_targeting_matrix_desc_reducer::{
    ImportTargetingMatrixDescCallbackId, import_targeting_matrix_desc,
    set_flags_for_import_targeting_matrix_desc,
};
pub use import_teleport_item_desc_reducer::{
    ImportTeleportItemDescCallbackId, import_teleport_item_desc,
    set_flags_for_import_teleport_item_desc,
};
pub use import_terraform_recipe_desc_reducer::{
    ImportTerraformRecipeDescCallbackId, import_terraform_recipe_desc,
    set_flags_for_import_terraform_recipe_desc,
};
pub use import_terrain_chunk_state_reducer::{
    ImportTerrainChunkStateCallbackId, import_terrain_chunk_state,
    set_flags_for_import_terrain_chunk_state,
};
pub use import_tool_desc_reducer::{
    ImportToolDescCallbackId, import_tool_desc, set_flags_for_import_tool_desc,
};
pub use import_tool_type_desc_reducer::{
    ImportToolTypeDescCallbackId, import_tool_type_desc, set_flags_for_import_tool_type_desc,
};
pub use import_trade_order_state_reducer::{
    ImportTradeOrderStateCallbackId, import_trade_order_state,
    set_flags_for_import_trade_order_state,
};
pub use import_trade_session_state_reducer::{
    ImportTradeSessionStateCallbackId, import_trade_session_state,
    set_flags_for_import_trade_session_state,
};
pub use import_traveler_task_desc_reducer::{
    ImportTravelerTaskDescCallbackId, import_traveler_task_desc,
    set_flags_for_import_traveler_task_desc,
};
pub use import_traveler_trade_order_desc_reducer::{
    ImportTravelerTradeOrderDescCallbackId, import_traveler_trade_order_desc,
    set_flags_for_import_traveler_trade_order_desc,
};
pub use import_user_moderation_state_reducer::{
    ImportUserModerationStateCallbackId, import_user_moderation_state,
    set_flags_for_import_user_moderation_state,
};
pub use import_user_state_reducer::{
    ImportUserStateCallbackId, import_user_state, set_flags_for_import_user_state,
};
pub use import_vault_state_reducer::{
    ImportVaultStateCallbackId, import_vault_state, set_flags_for_import_vault_state,
};
pub use import_wall_desc_reducer::{
    ImportWallDescCallbackId, import_wall_desc, set_flags_for_import_wall_desc,
};
pub use import_weapon_desc_reducer::{
    ImportWeaponDescCallbackId, import_weapon_desc, set_flags_for_import_weapon_desc,
};
pub use import_weapon_type_desc_reducer::{
    ImportWeaponTypeDescCallbackId, import_weapon_type_desc, set_flags_for_import_weapon_type_desc,
};
pub use import_world_region_name_state_reducer::{
    ImportWorldRegionNameStateCallbackId, import_world_region_name_state,
    set_flags_for_import_world_region_name_state,
};
pub use import_world_region_state_reducer::{
    ImportWorldRegionStateCallbackId, import_world_region_state,
    set_flags_for_import_world_region_state,
};
pub use input_item_stack_type::InputItemStack;
pub use insert_resources_log_reducer::{
    InsertResourcesLogCallbackId, insert_resources_log, set_flags_for_insert_resources_log,
};
pub use insert_terrain_chunk_reducer::{
    InsertTerrainChunkCallbackId, insert_terrain_chunk, set_flags_for_insert_terrain_chunk,
};
pub use inter_module_message_counter_table::*;
pub use inter_module_message_counter_type::InterModuleMessageCounter;
pub use inter_module_message_table::*;
pub use inter_module_message_type::InterModuleMessage;
pub use inter_module_response_message_counter_table::*;
pub use inter_module_response_message_counter_type::InterModuleResponseMessageCounter;
pub use inter_module_table_updates_type::InterModuleTableUpdates;
pub use interior_collapse_trigger_state_table::*;
pub use interior_collapse_trigger_state_type::InteriorCollapseTriggerState;
pub use interior_environment_desc_table::*;
pub use interior_environment_desc_type::InteriorEnvironmentDesc;
pub use interior_instance_desc_table::*;
pub use interior_instance_desc_type::InteriorInstanceDesc;
pub use interior_network_desc_table::*;
pub use interior_network_desc_type::InteriorNetworkDesc;
pub use interior_portal_connections_desc_table::*;
pub use interior_portal_connections_desc_type::InteriorPortalConnectionsDesc;
pub use interior_set_collapsed_reducer::{
    InteriorSetCollapsedCallbackId, interior_set_collapsed, set_flags_for_interior_set_collapsed,
};
pub use interior_set_collapsed_scheduled_reducer::{
    InteriorSetCollapsedScheduledCallbackId, interior_set_collapsed_scheduled,
    set_flags_for_interior_set_collapsed_scheduled,
};
pub use interior_set_collapsed_timer_table::*;
pub use interior_set_collapsed_timer_type::InteriorSetCollapsedTimer;
pub use interior_shape_desc_table::*;
pub use interior_shape_desc_type::InteriorShapeDesc;
pub use interior_spawn_desc_table::*;
pub use interior_spawn_desc_type::InteriorSpawnDesc;
pub use interior_spawn_type_type::InteriorSpawnType;
pub use inventory_create_personal_reducer::{
    InventoryCreatePersonalCallbackId, inventory_create_personal,
    set_flags_for_inventory_create_personal,
};
pub use inventory_sort_reducer::{
    InventorySortCallbackId, inventory_sort, set_flags_for_inventory_sort,
};
pub use inventory_state_table::*;
pub use inventory_state_type::InventoryState;
pub use item_conversion_location_context_type::ItemConversionLocationContext;
pub use item_conversion_recipe_desc_table::*;
pub use item_conversion_recipe_desc_type::ItemConversionRecipeDesc;
pub use item_convert_reducer::{ItemConvertCallbackId, item_convert, set_flags_for_item_convert};
pub use item_convert_start_reducer::{
    ItemConvertStartCallbackId, item_convert_start, set_flags_for_item_convert_start,
};
pub use item_desc_table::*;
pub use item_desc_type::ItemDesc;
pub use item_drop_reducer::{ItemDropCallbackId, item_drop, set_flags_for_item_drop};
pub use item_list_desc_table::*;
pub use item_list_desc_type::ItemListDesc;
pub use item_list_possibility_type::ItemListPossibility;
pub use item_pick_up_reducer::{ItemPickUpCallbackId, item_pick_up, set_flags_for_item_pick_up};
pub use item_stack_move_all_reducer::{
    ItemStackMoveAllCallbackId, item_stack_move_all, set_flags_for_item_stack_move_all,
};
pub use item_stack_move_reducer::{
    ItemStackMoveCallbackId, item_stack_move, set_flags_for_item_stack_move,
};
pub use item_stack_split_reducer::{
    ItemStackSplitCallbackId, item_stack_split, set_flags_for_item_stack_split,
};
pub use item_stack_type::ItemStack;
pub use item_type_type::ItemType;
pub use item_use_reducer::{ItemUseCallbackId, item_use, set_flags_for_item_use};
pub use item_use_start_reducer::{
    ItemUseStartCallbackId, item_use_start, set_flags_for_item_use_start,
};
pub use knowledge_achievement_state_table::*;
pub use knowledge_achievement_state_type::KnowledgeAchievementState;
pub use knowledge_battle_action_state_table::*;
pub use knowledge_battle_action_state_type::KnowledgeBattleActionState;
pub use knowledge_building_state_table::*;
pub use knowledge_building_state_type::KnowledgeBuildingState;
pub use knowledge_cargo_state_table::*;
pub use knowledge_cargo_state_type::KnowledgeCargoState;
pub use knowledge_claim_state_table::*;
pub use knowledge_claim_state_type::KnowledgeClaimState;
pub use knowledge_construction_state_table::*;
pub use knowledge_construction_state_type::KnowledgeConstructionState;
pub use knowledge_craft_state_table::*;
pub use knowledge_craft_state_type::KnowledgeCraftState;
pub use knowledge_deployable_state_table::*;
pub use knowledge_deployable_state_type::KnowledgeDeployableState;
pub use knowledge_enemy_state_table::*;
pub use knowledge_enemy_state_type::KnowledgeEnemyState;
pub use knowledge_entity_entry_type::KnowledgeEntityEntry;
pub use knowledge_entry_type::KnowledgeEntry;
pub use knowledge_extract_state_table::*;
pub use knowledge_extract_state_type::KnowledgeExtractState;
pub use knowledge_item_state_table::*;
pub use knowledge_item_state_type::KnowledgeItemState;
pub use knowledge_location_entry_type::KnowledgeLocationEntry;
pub use knowledge_lore_state_table::*;
pub use knowledge_lore_state_type::KnowledgeLoreState;
pub use knowledge_npc_state_table::*;
pub use knowledge_npc_state_type::KnowledgeNpcState;
pub use knowledge_paving_state_table::*;
pub use knowledge_paving_state_type::KnowledgePavingState;
pub use knowledge_pillar_shaping_state_table::*;
pub use knowledge_pillar_shaping_state_type::KnowledgePillarShapingState;
pub use knowledge_resource_placement_state_table::*;
pub use knowledge_resource_placement_state_type::KnowledgeResourcePlacementState;
pub use knowledge_resource_state_table::*;
pub use knowledge_resource_state_type::KnowledgeResourceState;
pub use knowledge_ruins_state_table::*;
pub use knowledge_ruins_state_type::KnowledgeRuinsState;
pub use knowledge_scroll_desc_table::*;
pub use knowledge_scroll_desc_type::KnowledgeScrollDesc;
pub use knowledge_scroll_type_desc_table::*;
pub use knowledge_scroll_type_desc_type::KnowledgeScrollTypeDesc;
pub use knowledge_secondary_state_table::*;
pub use knowledge_secondary_state_type::KnowledgeSecondaryState;
pub use knowledge_stat_modifier_desc_table::*;
pub use knowledge_stat_modifier_desc_type::KnowledgeStatModifierDesc;
pub use knowledge_state_type::KnowledgeState;
pub use knowledge_vault_state_table::*;
pub use knowledge_vault_state_type::KnowledgeVaultState;
pub use large_hex_tile_message_type::LargeHexTileMessage;
pub use level_requirement_type::LevelRequirement;
pub use light_source_state_table::*;
pub use light_source_state_type::LightSourceState;
pub use load_config_reducer::{LoadConfigCallbackId, load_config, set_flags_for_load_config};
pub use location_cache_table::*;
pub use location_cache_type::LocationCache;
pub use location_state_op_type::LocationStateOp;
pub use location_state_table::*;
pub use location_state_type::LocationState;
pub use log_claim_member_leaderboard_reducer::{
    LogClaimMemberLeaderboardCallbackId, log_claim_member_leaderboard,
    set_flags_for_log_claim_member_leaderboard,
};
pub use log_claim_tier_leaderboard_reducer::{
    LogClaimTierLeaderboardCallbackId, log_claim_tier_leaderboard,
    set_flags_for_log_claim_tier_leaderboard,
};
pub use loot_chest_desc_table::*;
pub use loot_chest_desc_type::LootChestDesc;
pub use loot_chest_despawn_reducer::{
    LootChestDespawnCallbackId, loot_chest_despawn, set_flags_for_loot_chest_despawn,
};
pub use loot_chest_despawn_timer_table::*;
pub use loot_chest_despawn_timer_type::LootChestDespawnTimer;
pub use loot_chest_spawn_reducer::{
    LootChestSpawnCallbackId, loot_chest_spawn, set_flags_for_loot_chest_spawn,
};
pub use loot_chest_spawn_timer_table::*;
pub use loot_chest_spawn_timer_type::LootChestSpawnTimer;
pub use loot_chest_state_table::*;
pub use loot_chest_state_type::LootChestState;
pub use loot_rarity_desc_table::*;
pub use loot_rarity_desc_type::LootRarityDesc;
pub use loot_table_desc_table::*;
pub use loot_table_desc_type::LootTableDesc;
pub use lost_items_state_table::*;
pub use lost_items_state_type::LostItemsState;
pub use message_contents_type::MessageContents;
pub use mobile_entity_state_table::*;
pub use mobile_entity_state_type::MobileEntityState;
pub use mounting_state_table::*;
pub use mounting_state_type::MountingState;
pub use move_validation_params_desc_type::MoveValidationParamsDesc;
pub use move_validation_strike_counter_state_table::*;
pub use move_validation_strike_counter_state_type::MoveValidationStrikeCounterState;
pub use movement_speed_type::MovementSpeed;
pub use movement_type_type::MovementType;
pub use notification_severity_type::NotificationSeverity;
pub use npc_ai_agent_loop_reducer::{
    NpcAiAgentLoopCallbackId, npc_ai_agent_loop, set_flags_for_npc_ai_agent_loop,
};
pub use npc_ai_loop_timer_table::*;
pub use npc_ai_loop_timer_type::NpcAiLoopTimer;
pub use npc_desc_table::*;
pub use npc_desc_type::NpcDesc;
pub use npc_state_table::*;
pub use npc_state_type::NpcState;
pub use npc_type_type::NpcType;
pub use offset_coordinates_float_type::OffsetCoordinatesFloat;
pub use offset_coordinates_large_message_type::OffsetCoordinatesLargeMessage;
pub use offset_coordinates_small_message_type::OffsetCoordinatesSmallMessage;
pub use on_claim_members_changed_msg_type::OnClaimMembersChangedMsg;
pub use on_durability_zero_reducer::{
    OnDurabilityZeroCallbackId, on_durability_zero, set_flags_for_on_durability_zero,
};
pub use on_durability_zero_timer_table::*;
pub use on_durability_zero_timer_type::OnDurabilityZeroTimer;
pub use on_empire_building_deleted_msg_type::OnEmpireBuildingDeletedMsg;
pub use on_inter_module_message_processed_reducer::{
    OnInterModuleMessageProcessedCallbackId, on_inter_module_message_processed,
    set_flags_for_on_inter_module_message_processed,
};
pub use on_player_joined_empire_msg_type::OnPlayerJoinedEmpireMsg;
pub use on_player_left_empire_msg_type::OnPlayerLeftEmpireMsg;
pub use on_player_name_set_msg_type::OnPlayerNameSetMsg;
pub use on_region_player_created_msg_type::OnRegionPlayerCreatedMsg;
pub use onboarding_reward_desc_table::*;
pub use onboarding_reward_desc_type::OnboardingRewardDesc;
pub use onboarding_state_table::*;
pub use onboarding_state_type::OnboardingState;
pub use online_timestamp_type::OnlineTimestamp;
pub use order_cancel_reducer::{OrderCancelCallbackId, order_cancel, set_flags_for_order_cancel};
pub use order_collect_reducer::{
    OrderCollectCallbackId, order_collect, set_flags_for_order_collect,
};
pub use order_edit_buy_order_reducer::{
    OrderEditBuyOrderCallbackId, order_edit_buy_order, set_flags_for_order_edit_buy_order,
};
pub use order_edit_sell_order_reducer::{
    OrderEditSellOrderCallbackId, order_edit_sell_order, set_flags_for_order_edit_sell_order,
};
pub use order_post_buy_order_reducer::{
    OrderPostBuyOrderCallbackId, order_post_buy_order, set_flags_for_order_post_buy_order,
};
pub use order_post_sell_order_reducer::{
    OrderPostSellOrderCallbackId, order_post_sell_order, set_flags_for_order_post_sell_order,
};
pub use parameters_desc_table::*;
pub use parameters_desc_type::ParametersDesc;
pub use parameters_player_move_desc_table::*;
pub use parameters_player_move_desc_type::ParametersPlayerMoveDesc;
pub use passive_craft_cancel_reducer::{
    PassiveCraftCancelCallbackId, passive_craft_cancel, set_flags_for_passive_craft_cancel,
};
pub use passive_craft_collect_all_reducer::{
    PassiveCraftCollectAllCallbackId, passive_craft_collect_all,
    set_flags_for_passive_craft_collect_all,
};
pub use passive_craft_collect_reducer::{
    PassiveCraftCollectCallbackId, passive_craft_collect, set_flags_for_passive_craft_collect,
};
pub use passive_craft_process_reducer::{
    PassiveCraftProcessCallbackId, passive_craft_process, set_flags_for_passive_craft_process,
};
pub use passive_craft_queue_reducer::{
    PassiveCraftQueueCallbackId, passive_craft_queue, set_flags_for_passive_craft_queue,
};
pub use passive_craft_state_table::*;
pub use passive_craft_state_type::PassiveCraftState;
pub use passive_craft_status_type::PassiveCraftStatus;
pub use passive_craft_timer_table::*;
pub use passive_craft_timer_type::PassiveCraftTimer;
pub use pathfinding_desc_table::*;
pub use pathfinding_desc_type::PathfindingDesc;
pub use pathfinding_traversal_option_type::PathfindingTraversalOption;
pub use pause_play_timer_reducer::{
    PausePlayTimerCallbackId, pause_play_timer, set_flags_for_pause_play_timer,
};
pub use paved_tile_state_table::*;
pub use paved_tile_state_type::PavedTileState;
pub use paving_destroy_tile_reducer::{
    PavingDestroyTileCallbackId, paving_destroy_tile, set_flags_for_paving_destroy_tile,
};
pub use paving_destroy_tile_start_reducer::{
    PavingDestroyTileStartCallbackId, paving_destroy_tile_start,
    set_flags_for_paving_destroy_tile_start,
};
pub use paving_place_tile_reducer::{
    PavingPlaceTileCallbackId, paving_place_tile, set_flags_for_paving_place_tile,
};
pub use paving_place_tile_start_reducer::{
    PavingPlaceTileStartCallbackId, paving_place_tile_start, set_flags_for_paving_place_tile_start,
};
pub use paving_tile_desc_table::*;
pub use paving_tile_desc_type::PavingTileDesc;
pub use permission_edit_reducer::{
    PermissionEditCallbackId, permission_edit, set_flags_for_permission_edit,
};
pub use permission_group_type::PermissionGroup;
pub use permission_state_table::*;
pub use permission_state_type::PermissionState;
pub use permission_type::Permission;
pub use pillar_shaping_desc_table::*;
pub use pillar_shaping_desc_type::PillarShapingDesc;
pub use pillar_shaping_destroy_reducer::{
    PillarShapingDestroyCallbackId, pillar_shaping_destroy, set_flags_for_pillar_shaping_destroy,
};
pub use pillar_shaping_destroy_start_reducer::{
    PillarShapingDestroyStartCallbackId, pillar_shaping_destroy_start,
    set_flags_for_pillar_shaping_destroy_start,
};
pub use pillar_shaping_place_pillar_reducer::{
    PillarShapingPlacePillarCallbackId, pillar_shaping_place_pillar,
    set_flags_for_pillar_shaping_place_pillar,
};
pub use pillar_shaping_place_pillar_start_reducer::{
    PillarShapingPlacePillarStartCallbackId, pillar_shaping_place_pillar_start,
    set_flags_for_pillar_shaping_place_pillar_start,
};
pub use pillar_shaping_state_table::*;
pub use pillar_shaping_state_type::PillarShapingState;
pub use player_achievement_claim_request_type::PlayerAchievementClaimRequest;
pub use player_acquire_knowledge_from_entities_request_type::PlayerAcquireKnowledgeFromEntitiesRequest;
pub use player_action_cancel_reducer::{
    PlayerActionCancelCallbackId, player_action_cancel, set_flags_for_player_action_cancel,
};
pub use player_action_desc_table::*;
pub use player_action_desc_type::PlayerActionDesc;
pub use player_action_layer_type::PlayerActionLayer;
pub use player_action_result_type::PlayerActionResult;
pub use player_action_state_table::*;
pub use player_action_state_type::PlayerActionState;
pub use player_action_type_type::PlayerActionType;
pub use player_barter_stall_order_accept_type::PlayerBarterStallOrderAccept;
pub use player_barter_stall_order_create_request_type::PlayerBarterStallOrderCreateRequest;
pub use player_barter_stall_order_delete_request_type::PlayerBarterStallOrderDeleteRequest;
pub use player_building_deconstruct_request_type::PlayerBuildingDeconstructRequest;
pub use player_building_move_request_type::PlayerBuildingMoveRequest;
pub use player_building_repair_request_type::PlayerBuildingRepairRequest;
pub use player_building_set_nickname_request_type::PlayerBuildingSetNicknameRequest;
pub use player_cancel_region_transfer_reducer::{
    PlayerCancelRegionTransferCallbackId, player_cancel_region_transfer,
    set_flags_for_player_cancel_region_transfer,
};
pub use player_chat_post_message_request_type::PlayerChatPostMessageRequest;
pub use player_claim_add_member_request_type::PlayerClaimAddMemberRequest;
pub use player_claim_add_recruitment_request_type::PlayerClaimAddRecruitmentRequest;
pub use player_claim_add_tile_request_type::PlayerClaimAddTileRequest;
pub use player_claim_apply_for_recruitment_request_type::PlayerClaimApplyForRecruitmentRequest;
pub use player_claim_leave_request_type::PlayerClaimLeaveRequest;
pub use player_claim_remove_member_request_type::PlayerClaimRemoveMemberRequest;
pub use player_claim_remove_recruitment_request_type::PlayerClaimRemoveRecruitmentRequest;
pub use player_claim_remove_tile_request_type::PlayerClaimRemoveTileRequest;
pub use player_claim_rename_request_type::PlayerClaimRenameRequest;
pub use player_claim_set_member_permissions_request_type::PlayerClaimSetMemberPermissionsRequest;
pub use player_claim_take_ownership_request_type::PlayerClaimTakeOwnershipRequest;
pub use player_claim_tech_cancel_request_type::PlayerClaimTechCancelRequest;
pub use player_claim_tech_learn_request_type::PlayerClaimTechLearnRequest;
pub use player_claim_transfer_ownership_request_type::PlayerClaimTransferOwnershipRequest;
pub use player_claim_withdraw_from_treasury_request_type::PlayerClaimWithdrawFromTreasuryRequest;
pub use player_clear_action_state_reducer::{
    PlayerClearActionStateCallbackId, player_clear_action_state,
    set_flags_for_player_clear_action_state,
};
pub use player_climb_reducer::{PlayerClimbCallbackId, player_climb, set_flags_for_player_climb};
pub use player_climb_request_type::PlayerClimbRequest;
pub use player_climb_start_reducer::{
    PlayerClimbStartCallbackId, player_climb_start, set_flags_for_player_climb_start,
};
pub use player_closed_listing_collect_request_type::PlayerClosedListingCollectRequest;
pub use player_collectible_activate_request_type::PlayerCollectibleActivateRequest;
pub use player_complete_task_reducer::{
    PlayerCompleteTaskCallbackId, player_complete_task, set_flags_for_player_complete_task,
};
pub use player_complete_task_request_type::PlayerCompleteTaskRequest;
pub use player_convert_collectible_to_deed_request_type::PlayerConvertCollectibleToDeedRequest;
pub use player_convert_deed_to_collectible_request_type::PlayerConvertDeedToCollectibleRequest;
pub use player_craft_cancel_request_type::PlayerCraftCancelRequest;
pub use player_craft_collect_all_request_type::PlayerCraftCollectAllRequest;
pub use player_craft_collect_request_type::PlayerCraftCollectRequest;
pub use player_craft_continue_request_type::PlayerCraftContinueRequest;
pub use player_craft_initiate_request_type::PlayerCraftInitiateRequest;
pub use player_create_msg_type::PlayerCreateMsg;
pub use player_death_start_reducer::{
    PlayerDeathStartCallbackId, player_death_start, set_flags_for_player_death_start,
};
pub use player_death_timer_table::*;
pub use player_death_timer_type::PlayerDeathTimer;
pub use player_deployable_dismount_request_type::PlayerDeployableDismountRequest;
pub use player_deployable_mount_request_type::PlayerDeployableMountRequest;
pub use player_deployable_move_request_type::PlayerDeployableMoveRequest;
pub use player_discover_entities_request_type::PlayerDiscoverEntitiesRequest;
pub use player_dismiss_alert_reducer::{
    PlayerDismissAlertCallbackId, player_dismiss_alert, set_flags_for_player_dismiss_alert,
};
pub use player_dismiss_alert_request_type::PlayerDismissAlertRequest;
pub use player_dropped_inventory_pick_up_request_type::PlayerDroppedInventoryPickUpRequest;
pub use player_duel_initiate_reducer::{
    PlayerDuelInitiateCallbackId, player_duel_initiate, set_flags_for_player_duel_initiate,
};
pub use player_eat_request_type::PlayerEatRequest;
pub use player_edit_order_request_type::PlayerEditOrderRequest;
pub use player_elevator_arrive_reducer::{
    PlayerElevatorArriveCallbackId, player_elevator_arrive, set_flags_for_player_elevator_arrive,
};
pub use player_emote_request_type::PlayerEmoteRequest;
pub use player_equipment_add_request_type::PlayerEquipmentAddRequest;
pub use player_equipment_remove_request_type::PlayerEquipmentRemoveRequest;
pub use player_extract_request_type::PlayerExtractRequest;
pub use player_housing_change_entrance_reducer::{
    PlayerHousingChangeEntranceCallbackId, player_housing_change_entrance,
    set_flags_for_player_housing_change_entrance,
};
pub use player_housing_desc_table::*;
pub use player_housing_desc_type::PlayerHousingDesc;
pub use player_housing_enter_reducer::{
    PlayerHousingEnterCallbackId, player_housing_enter, set_flags_for_player_housing_enter,
};
pub use player_housing_enter_request_type::PlayerHousingEnterRequest;
pub use player_housing_evict_player_complete_reducer::{
    PlayerHousingEvictPlayerCompleteCallbackId, player_housing_evict_player_complete,
    set_flags_for_player_housing_evict_player_complete,
};
pub use player_housing_evict_player_reducer::{
    PlayerHousingEvictPlayerCallbackId, player_housing_evict_player,
    set_flags_for_player_housing_evict_player,
};
pub use player_housing_evict_player_request_type::PlayerHousingEvictPlayerRequest;
pub use player_housing_evict_player_timer_table::*;
pub use player_housing_evict_player_timer_type::PlayerHousingEvictPlayerTimer;
pub use player_housing_income_agent_loop_reducer::{
    PlayerHousingIncomeAgentLoopCallbackId, player_housing_income_agent_loop,
    set_flags_for_player_housing_income_agent_loop,
};
pub use player_housing_income_loop_timer_table::*;
pub use player_housing_income_loop_timer_type::PlayerHousingIncomeLoopTimer;
pub use player_housing_request_access_reducer::{
    PlayerHousingRequestAccessCallbackId, player_housing_request_access,
    set_flags_for_player_housing_request_access,
};
pub use player_housing_request_access_request_type::PlayerHousingRequestAccessRequest;
pub use player_housing_state_table::*;
pub use player_housing_state_type::PlayerHousingState;
pub use player_housing_update_reducer::{
    PlayerHousingUpdateCallbackId, player_housing_update, set_flags_for_player_housing_update,
};
pub use player_item_convert_request_type::PlayerItemConvertRequest;
pub use player_item_drop_request_type::PlayerItemDropRequest;
pub use player_item_stack_move_all_request_type::PlayerItemStackMoveAllRequest;
pub use player_item_stack_move_request_type::PlayerItemStackMoveRequest;
pub use player_item_stack_split_request_type::PlayerItemStackSplitRequest;
pub use player_item_use_request_type::PlayerItemUseRequest;
pub use player_lowercase_username_state_table::*;
pub use player_lowercase_username_state_type::PlayerLowercaseUsernameState;
pub use player_move_reducer::{PlayerMoveCallbackId, player_move, set_flags_for_player_move};
pub use player_move_request_type::PlayerMoveRequest;
pub use player_note_state_table::*;
pub use player_note_state_type::PlayerNoteState;
pub use player_notification_event_reducer_reducer::{
    PlayerNotificationEventReducerCallbackId, player_notification_event_reducer,
    set_flags_for_player_notification_event_reducer,
};
pub use player_notification_event_table::*;
pub use player_notification_event_type::PlayerNotificationEvent;
pub use player_order_cancel_request_type::PlayerOrderCancelRequest;
pub use player_order_collect_request_type::PlayerOrderCollectRequest;
pub use player_passive_craft_queue_request_type::PlayerPassiveCraftQueueRequest;
pub use player_pause_play_timer_request_type::PlayerPausePlayTimerRequest;
pub use player_paving_destroy_tile_request_type::PlayerPavingDestroyTileRequest;
pub use player_paving_place_tile_request_type::PlayerPavingPlaceTileRequest;
pub use player_permission_edit_request_type::PlayerPermissionEditRequest;
pub use player_pillar_shaping_destroy_request_type::PlayerPillarShapingDestroyRequest;
pub use player_pillar_shaping_place_request_type::PlayerPillarShapingPlaceRequest;
pub use player_pocket_swap_contents_request_type::PlayerPocketSwapContentsRequest;
pub use player_portal_enter_request_type::PlayerPortalEnterRequest;
pub use player_post_order_request_type::PlayerPostOrderRequest;
pub use player_prefs_state_table::*;
pub use player_prefs_state_type::PlayerPrefsState;
pub use player_project_site_add_materials_request_type::PlayerProjectSiteAddMaterialsRequest;
pub use player_project_site_advance_project_request_type::PlayerProjectSiteAdvanceProjectRequest;
pub use player_project_site_cancel_request_type::PlayerProjectSiteCancelRequest;
pub use player_project_site_place_request_type::PlayerProjectSitePlaceRequest;
pub use player_queue_join_reducer::{
    PlayerQueueJoinCallbackId, player_queue_join, set_flags_for_player_queue_join,
};
pub use player_queue_leave_reducer::{
    PlayerQueueLeaveCallbackId, player_queue_leave, set_flags_for_player_queue_leave,
};
pub use player_queue_state_table::*;
pub use player_queue_state_type::PlayerQueueState;
pub use player_regen_agent_loop_reducer::{
    PlayerRegenAgentLoopCallbackId, player_regen_agent_loop, set_flags_for_player_regen_agent_loop,
};
pub use player_regen_loop_timer_table::*;
pub use player_regen_loop_timer_type::PlayerRegenLoopTimer;
pub use player_region_crossover_reducer::{
    PlayerRegionCrossoverCallbackId, player_region_crossover, set_flags_for_player_region_crossover,
};
pub use player_region_transfer_event_reducer_reducer::{
    PlayerRegionTransferEventReducerCallbackId, player_region_transfer_event_reducer,
    set_flags_for_player_region_transfer_event_reducer,
};
pub use player_region_transfer_event_table::*;
pub use player_region_transfer_event_type::PlayerRegionTransferEvent;
pub use player_report_state_op_type::PlayerReportStateOp;
pub use player_report_state_table::*;
pub use player_report_state_type::PlayerReportState;
pub use player_respawn_reducer::{
    PlayerRespawnCallbackId, player_respawn, set_flags_for_player_respawn,
};
pub use player_retrieve_lost_item_request_type::PlayerRetrieveLostItemRequest;
pub use player_scroll_read_request_type::PlayerScrollReadRequest;
pub use player_set_default_deployable_reducer::{
    PlayerSetDefaultDeployableCallbackId, player_set_default_deployable,
    set_flags_for_player_set_default_deployable,
};
pub use player_set_default_deployable_request_type::PlayerSetDefaultDeployableRequest;
pub use player_set_home_request_type::PlayerSetHomeRequest;
pub use player_set_name_outcome_event_reducer_reducer::{
    PlayerSetNameOutcomeEventReducerCallbackId, player_set_name_outcome_event_reducer,
    set_flags_for_player_set_name_outcome_event_reducer,
};
pub use player_set_name_outcome_event_table::*;
pub use player_set_name_outcome_event_type::PlayerSetNameOutcomeEvent;
pub use player_sign_in_request_type::PlayerSignInRequest;
pub use player_skip_queue_msg_type::PlayerSkipQueueMsg;
pub use player_sleep_request_type::PlayerSleepRequest;
pub use player_state_table::*;
pub use player_state_type::PlayerState;
pub use player_teleport_home_reducer::{
    PlayerTeleportHomeCallbackId, player_teleport_home, set_flags_for_player_teleport_home,
};
pub use player_teleport_home_request_type::PlayerTeleportHomeRequest;
pub use player_teleport_home_start_reducer::{
    PlayerTeleportHomeStartCallbackId, player_teleport_home_start,
    set_flags_for_player_teleport_home_start,
};
pub use player_teleport_waystone_reducer::{
    PlayerTeleportWaystoneCallbackId, player_teleport_waystone,
    set_flags_for_player_teleport_waystone,
};
pub use player_teleport_waystone_request_type::PlayerTeleportWaystoneRequest;
pub use player_teleport_waystone_start_reducer::{
    PlayerTeleportWaystoneStartCallbackId, player_teleport_waystone_start,
    set_flags_for_player_teleport_waystone_start,
};
pub use player_terraform_cancel_request_type::PlayerTerraformCancelRequest;
pub use player_terraform_request_type::PlayerTerraformRequest;
pub use player_terraform_set_final_target_request_type::PlayerTerraformSetFinalTargetRequest;
pub use player_timestamp_state_table::*;
pub use player_timestamp_state_type::PlayerTimestampState;
pub use player_trade_accept_request_type::PlayerTradeAcceptRequest;
pub use player_trade_accept_session_request_type::PlayerTradeAcceptSessionRequest;
pub use player_trade_add_item_request_type::PlayerTradeAddItemRequest;
pub use player_trade_decline_request_type::PlayerTradeDeclineRequest;
pub use player_trade_decline_session_request_type::PlayerTradeDeclineSessionRequest;
pub use player_trade_initiate_session_request_type::PlayerTradeInitiateSessionRequest;
pub use player_trade_remove_item_request_type::PlayerTradeRemoveItemRequest;
pub use player_trade_swap_pockets_request_type::PlayerTradeSwapPocketsRequest;
pub use player_use_elevator_reducer::{
    PlayerUseElevatorCallbackId, player_use_elevator, set_flags_for_player_use_elevator,
};
pub use player_use_elevator_timer_table::*;
pub use player_use_elevator_timer_type::PlayerUseElevatorTimer;
pub use player_username_state_table::*;
pub use player_username_state_type::PlayerUsernameState;
pub use player_vote_answer_reducer::{
    PlayerVoteAnswerCallbackId, player_vote_answer, set_flags_for_player_vote_answer,
};
pub use player_vote_answer_request_type::PlayerVoteAnswerRequest;
pub use player_vote_answer_type::PlayerVoteAnswer;
pub use player_vote_conclude_reducer::{
    PlayerVoteConcludeCallbackId, player_vote_conclude, set_flags_for_player_vote_conclude,
};
pub use player_vote_conclude_timer_table::*;
pub use player_vote_conclude_timer_type::PlayerVoteConcludeTimer;
pub use player_vote_state_table::*;
pub use player_vote_state_type::PlayerVoteState;
pub use player_vote_type_type::PlayerVoteType;
pub use pocket_key_type::PocketKey;
pub use pocket_swap_contents_reducer::{
    PocketSwapContentsCallbackId, pocket_swap_contents, set_flags_for_pocket_swap_contents,
};
pub use pocket_type::Pocket;
pub use portal_enter_reducer::{PortalEnterCallbackId, portal_enter, set_flags_for_portal_enter};
pub use portal_state_table::*;
pub use portal_state_type::PortalState;
pub use private_parameters_desc_table::*;
pub use private_parameters_desc_type::PrivateParametersDesc;
pub use probabilistic_item_stack_type::ProbabilisticItemStack;
pub use process_inter_module_message_reducer::{
    ProcessInterModuleMessageCallbackId, process_inter_module_message,
    set_flags_for_process_inter_module_message,
};
pub use progressive_action_state_table::*;
pub use progressive_action_state_type::ProgressiveActionState;
pub use progressive_action_status_type::ProgressiveActionStatus;
pub use project_site_add_materials_reducer::{
    ProjectSiteAddMaterialsCallbackId, project_site_add_materials,
    set_flags_for_project_site_add_materials,
};
pub use project_site_advance_project_reducer::{
    ProjectSiteAdvanceProjectCallbackId, project_site_advance_project,
    set_flags_for_project_site_advance_project,
};
pub use project_site_advance_project_start_reducer::{
    ProjectSiteAdvanceProjectStartCallbackId, project_site_advance_project_start,
    set_flags_for_project_site_advance_project_start,
};
pub use project_site_cancel_reducer::{
    ProjectSiteCancelCallbackId, project_site_cancel, set_flags_for_project_site_cancel,
};
pub use project_site_place_reducer::{
    ProjectSitePlaceCallbackId, project_site_place, set_flags_for_project_site_place,
};
pub use project_site_state_table::*;
pub use project_site_state_type::ProjectSiteState;
pub use rarity_type::Rarity;
pub use region_connection_info_op_type::RegionConnectionInfoOp;
pub use region_connection_info_table::*;
pub use region_connection_info_type::RegionConnectionInfo;
pub use region_destroy_siege_engine_msg_type::RegionDestroySiegeEngineMsg;
pub use region_population_info_op_type::RegionPopulationInfoOp;
pub use region_population_info_table::*;
pub use region_population_info_type::RegionPopulationInfo;
pub use region_population_loop_timer_type::RegionPopulationLoopTimer;
pub use region_popuplation_agent_loop_reducer::{
    RegionPopuplationAgentLoopCallbackId, region_popuplation_agent_loop,
    set_flags_for_region_popuplation_agent_loop,
};
pub use region_popuplation_loop_timer_table::*;
pub use region_sign_in_parameters_op_type::RegionSignInParametersOp;
pub use region_sign_in_parameters_table::*;
pub use region_sign_in_parameters_type::RegionSignInParameters;
pub use rent_add_listing_reducer::{
    RentAddListingCallbackId, rent_add_listing, set_flags_for_rent_add_listing,
};
pub use rent_add_listing_request_type::RentAddListingRequest;
pub use rent_add_tenant_reducer::{
    RentAddTenantCallbackId, rent_add_tenant, set_flags_for_rent_add_tenant,
};
pub use rent_add_tenant_request_type::RentAddTenantRequest;
pub use rent_collect_eviction_fee_reducer::{
    RentCollectEvictionFeeCallbackId, rent_collect_eviction_fee,
    set_flags_for_rent_collect_eviction_fee,
};
pub use rent_collector_agent_loop_reducer::{
    RentCollectorAgentLoopCallbackId, rent_collector_agent_loop,
    set_flags_for_rent_collector_agent_loop,
};
pub use rent_collector_loop_timer_table::*;
pub use rent_collector_loop_timer_type::RentCollectorLoopTimer;
pub use rent_deposit_coins_reducer::{
    RentDepositCoinsCallbackId, rent_deposit_coins, set_flags_for_rent_deposit_coins,
};
pub use rent_deposit_coins_request_type::RentDepositCoinsRequest;
pub use rent_evict_reducer::{RentEvictCallbackId, rent_evict, set_flags_for_rent_evict};
pub use rent_evict_request_type::RentEvictRequest;
pub use rent_evict_term_reducer::{
    RentEvictTermCallbackId, rent_evict_term, set_flags_for_rent_evict_term,
};
pub use rent_evict_timer_table::*;
pub use rent_evict_timer_type::RentEvictTimer;
pub use rent_purchase_reducer::{
    RentPurchaseCallbackId, rent_purchase, set_flags_for_rent_purchase,
};
pub use rent_purchase_request_type::RentPurchaseRequest;
pub use rent_remove_tenant_reducer::{
    RentRemoveTenantCallbackId, rent_remove_tenant, set_flags_for_rent_remove_tenant,
};
pub use rent_remove_tenant_request_type::RentRemoveTenantRequest;
pub use rent_set_daily_rate_reducer::{
    RentSetDailyRateCallbackId, rent_set_daily_rate, set_flags_for_rent_set_daily_rate,
};
pub use rent_set_daily_rate_request_type::RentSetDailyRateRequest;
pub use rent_state_table::*;
pub use rent_state_type::RentState;
pub use rent_terminate_reducer::{
    RentTerminateCallbackId, rent_terminate, set_flags_for_rent_terminate,
};
pub use rent_terminate_request_type::RentTerminateRequest;
pub use rent_unlist_reducer::{RentUnlistCallbackId, rent_unlist, set_flags_for_rent_unlist};
pub use rent_unlist_request_type::RentUnlistRequest;
pub use report_chat_message_reducer::{
    ReportChatMessageCallbackId, report_chat_message, set_flags_for_report_chat_message,
};
pub use report_player_chat_message_type::ReportPlayerChatMessage;
pub use report_player_message_type::ReportPlayerMessage;
pub use report_player_reducer::{
    ReportPlayerCallbackId, report_player, set_flags_for_report_player,
};
pub use reset_chunk_index_reducer::{
    ResetChunkIndexCallbackId, reset_chunk_index, set_flags_for_reset_chunk_index,
};
pub use reset_chunk_index_timer_table::*;
pub use reset_chunk_index_timer_type::ResetChunkIndexTimer;
pub use reset_chunk_index_with_dimension_reducer::{
    ResetChunkIndexWithDimensionCallbackId, reset_chunk_index_with_dimension,
    set_flags_for_reset_chunk_index_with_dimension,
};
pub use reset_mobile_entity_position_reducer::{
    ResetMobileEntityPositionCallbackId, reset_mobile_entity_position,
    set_flags_for_reset_mobile_entity_position,
};
pub use reset_mobile_entity_timer_table::*;
pub use reset_mobile_entity_timer_type::ResetMobileEntityTimer;
pub use reset_onboarding_reducer::{
    ResetOnboardingCallbackId, reset_onboarding, set_flags_for_reset_onboarding,
};
pub use resource_clump_desc_table::*;
pub use resource_clump_desc_type::ResourceClumpDesc;
pub use resource_clump_info_type::ResourceClumpInfo;
pub use resource_count_table::*;
pub use resource_count_type::ResourceCount;
pub use resource_desc_table::*;
pub use resource_desc_type::ResourceDesc;
pub use resource_growth_recipe_desc_table::*;
pub use resource_growth_recipe_desc_type::ResourceGrowthRecipeDesc;
pub use resource_health_state_table::*;
pub use resource_health_state_type::ResourceHealthState;
pub use resource_info_type::ResourceInfo;
pub use resource_placement_recipe_desc_table::*;
pub use resource_placement_recipe_desc_type::ResourcePlacementRecipeDesc;
pub use resource_spawn_scheduled_reducer::{
    ResourceSpawnScheduledCallbackId, resource_spawn_scheduled,
    set_flags_for_resource_spawn_scheduled,
};
pub use resource_spawn_timer_table::*;
pub use resource_spawn_timer_type::ResourceSpawnTimer;
pub use resource_state_table::*;
pub use resource_state_type::ResourceState;
pub use resources_log_table::*;
pub use resources_log_type::ResourcesLog;
pub use resources_regen_loop_timer_table::*;
pub use resources_regen_loop_timer_type::ResourcesRegenLoopTimer;
pub use resources_regen_reducer::{
    ResourcesRegenCallbackId, resources_regen, set_flags_for_resources_regen,
};
pub use respawn_interior_npcs_reducer::{
    RespawnInteriorNpcsCallbackId, respawn_interior_npcs, set_flags_for_respawn_interior_npcs,
};
pub use respawn_resource_in_chunk_reducer::{
    RespawnResourceInChunkCallbackId, respawn_resource_in_chunk,
    set_flags_for_respawn_resource_in_chunk,
};
pub use respawn_resource_in_chunk_timer_table::*;
pub use respawn_resource_in_chunk_timer_type::RespawnResourceInChunkTimer;
pub use retrieve_lost_item_reducer::{
    RetrieveLostItemCallbackId, retrieve_lost_item, set_flags_for_retrieve_lost_item,
};
pub use rez_sick_long_term_state_table::*;
pub use rez_sick_long_term_state_type::RezSickLongTermState;
pub use role_type::Role;
pub use ruins_entity_value_pair_type::RuinsEntityValuePair;
pub use satiation_state_table::*;
pub use satiation_state_type::SatiationState;
pub use scroll_read_reducer::{ScrollReadCallbackId, scroll_read, set_flags_for_scroll_read};
pub use search_for_closest_building_reducer::{
    SearchForClosestBuildingCallbackId, search_for_closest_building,
    set_flags_for_search_for_closest_building,
};
pub use search_for_closest_building_type_reducer::{
    SearchForClosestBuildingTypeCallbackId, search_for_closest_building_type,
    set_flags_for_search_for_closest_building_type,
};
pub use secondary_knowledge_desc_table::*;
pub use secondary_knowledge_desc_type::SecondaryKnowledgeDesc;
pub use sell_order_state_table::*;
pub use server_identity_table::*;
pub use server_identity_type::ServerIdentity;
pub use server_teleport_player_reducer::{
    ServerTeleportPlayerCallbackId, server_teleport_player, set_flags_for_server_teleport_player,
};
pub use server_teleport_reason_type::ServerTeleportReason;
pub use set_home_reducer::{SetHomeCallbackId, set_flags_for_set_home, set_home};
pub use sign_in_reducer::{SignInCallbackId, set_flags_for_sign_in, sign_in};
pub use sign_out_reducer::{SignOutCallbackId, set_flags_for_sign_out, sign_out};
pub use sign_player_out_msg_type::SignPlayerOutMsg;
pub use signed_in_player_state_table::*;
pub use signed_in_player_state_type::SignedInPlayerState;
pub use single_resource_clump_info_table::*;
pub use single_resource_clump_info_type::SingleResourceClumpInfo;
pub use single_resource_to_clump_desc_table::*;
pub use single_resource_to_clump_desc_type::SingleResourceToClumpDesc;
pub use skill_category_type::SkillCategory;
pub use skill_desc_table::*;
pub use skill_desc_type::SkillDesc;
pub use skill_type_type::SkillType;
pub use sleep_reducer::{SleepCallbackId, set_flags_for_sleep, sleep};
pub use small_hex_tile_message_type::SmallHexTileMessage;
pub use spawn_info_type::SpawnInfo;
pub use stage_achievement_desc_reducer::{
    StageAchievementDescCallbackId, set_flags_for_stage_achievement_desc, stage_achievement_desc,
};
pub use stage_alert_desc_reducer::{
    StageAlertDescCallbackId, set_flags_for_stage_alert_desc, stage_alert_desc,
};
pub use stage_biome_desc_reducer::{
    StageBiomeDescCallbackId, set_flags_for_stage_biome_desc, stage_biome_desc,
};
pub use stage_buff_desc_reducer::{
    StageBuffDescCallbackId, set_flags_for_stage_buff_desc, stage_buff_desc,
};
pub use stage_buff_type_desc_reducer::{
    StageBuffTypeDescCallbackId, set_flags_for_stage_buff_type_desc, stage_buff_type_desc,
};
pub use stage_building_claim_desc_reducer::{
    StageBuildingClaimDescCallbackId, set_flags_for_stage_building_claim_desc,
    stage_building_claim_desc,
};
pub use stage_building_desc_reducer::{
    StageBuildingDescCallbackId, set_flags_for_stage_building_desc, stage_building_desc,
};
pub use stage_building_portal_desc_reducer::{
    StageBuildingPortalDescCallbackId, set_flags_for_stage_building_portal_desc,
    stage_building_portal_desc,
};
pub use stage_building_repairs_desc_reducer::{
    StageBuildingRepairsDescCallbackId, set_flags_for_stage_building_repairs_desc,
    stage_building_repairs_desc,
};
pub use stage_building_spawn_desc_reducer::{
    StageBuildingSpawnDescCallbackId, set_flags_for_stage_building_spawn_desc,
    stage_building_spawn_desc,
};
pub use stage_building_type_desc_reducer::{
    StageBuildingTypeDescCallbackId, set_flags_for_stage_building_type_desc,
    stage_building_type_desc,
};
pub use stage_cargo_desc_reducer::{
    StageCargoDescCallbackId, set_flags_for_stage_cargo_desc, stage_cargo_desc,
};
pub use stage_character_stat_desc_reducer::{
    StageCharacterStatDescCallbackId, set_flags_for_stage_character_stat_desc,
    stage_character_stat_desc,
};
pub use stage_chest_rarity_desc_reducer::{
    StageChestRarityDescCallbackId, set_flags_for_stage_chest_rarity_desc, stage_chest_rarity_desc,
};
pub use stage_claim_tech_desc_reducer::{
    StageClaimTechDescCallbackId, set_flags_for_stage_claim_tech_desc, stage_claim_tech_desc,
};
pub use stage_claim_tile_cost_reducer::{
    StageClaimTileCostCallbackId, set_flags_for_stage_claim_tile_cost, stage_claim_tile_cost,
};
pub use stage_climb_requirement_desc_reducer::{
    StageClimbRequirementDescCallbackId, set_flags_for_stage_climb_requirement_desc,
    stage_climb_requirement_desc,
};
pub use stage_clothing_desc_reducer::{
    StageClothingDescCallbackId, set_flags_for_stage_clothing_desc, stage_clothing_desc,
};
pub use stage_collectible_desc_reducer::{
    StageCollectibleDescCallbackId, set_flags_for_stage_collectible_desc, stage_collectible_desc,
};
pub use stage_combat_action_desc_reducer::{
    StageCombatActionDescCallbackId, set_flags_for_stage_combat_action_desc,
    stage_combat_action_desc,
};
pub use stage_construction_recipe_desc_reducer::{
    StageConstructionRecipeDescCallbackId, set_flags_for_stage_construction_recipe_desc,
    stage_construction_recipe_desc,
};
pub use stage_crafting_recipe_desc_reducer::{
    StageCraftingRecipeDescCallbackId, set_flags_for_stage_crafting_recipe_desc,
    stage_crafting_recipe_desc,
};
pub use stage_deconstruction_recipe_desc_reducer::{
    StageDeconstructionRecipeDescCallbackId, set_flags_for_stage_deconstruction_recipe_desc,
    stage_deconstruction_recipe_desc,
};
pub use stage_deployable_desc_reducer::{
    StageDeployableDescCallbackId, set_flags_for_stage_deployable_desc, stage_deployable_desc,
};
pub use stage_distant_visible_entity_desc_reducer::{
    StageDistantVisibleEntityDescCallbackId, set_flags_for_stage_distant_visible_entity_desc,
    stage_distant_visible_entity_desc,
};
pub use stage_elevator_desc_reducer::{
    StageElevatorDescCallbackId, set_flags_for_stage_elevator_desc, stage_elevator_desc,
};
pub use stage_emote_desc_reducer::{
    StageEmoteDescCallbackId, set_flags_for_stage_emote_desc, stage_emote_desc,
};
pub use stage_empire_colors_desc_reducer::{
    StageEmpireColorsDescCallbackId, set_flags_for_stage_empire_colors_desc,
    stage_empire_colors_desc,
};
pub use stage_empire_icon_desc_reducer::{
    StageEmpireIconDescCallbackId, set_flags_for_stage_empire_icon_desc, stage_empire_icon_desc,
};
pub use stage_empire_notification_desc_reducer::{
    StageEmpireNotificationDescCallbackId, set_flags_for_stage_empire_notification_desc,
    stage_empire_notification_desc,
};
pub use stage_empire_rank_desc_reducer::{
    StageEmpireRankDescCallbackId, set_flags_for_stage_empire_rank_desc, stage_empire_rank_desc,
};
pub use stage_empire_supplies_desc_reducer::{
    StageEmpireSuppliesDescCallbackId, set_flags_for_stage_empire_supplies_desc,
    stage_empire_supplies_desc,
};
pub use stage_empire_territory_desc_reducer::{
    StageEmpireTerritoryDescCallbackId, set_flags_for_stage_empire_territory_desc,
    stage_empire_territory_desc,
};
pub use stage_enemy_ai_params_desc_reducer::{
    StageEnemyAiParamsDescCallbackId, set_flags_for_stage_enemy_ai_params_desc,
    stage_enemy_ai_params_desc,
};
pub use stage_enemy_desc_reducer::{
    StageEnemyDescCallbackId, set_flags_for_stage_enemy_desc, stage_enemy_desc,
};
pub use stage_environment_debuff_desc_reducer::{
    StageEnvironmentDebuffDescCallbackId, set_flags_for_stage_environment_debuff_desc,
    stage_environment_debuff_desc,
};
pub use stage_equipment_desc_reducer::{
    StageEquipmentDescCallbackId, set_flags_for_stage_equipment_desc, stage_equipment_desc,
};
pub use stage_extraction_recipe_desc_reducer::{
    StageExtractionRecipeDescCallbackId, set_flags_for_stage_extraction_recipe_desc,
    stage_extraction_recipe_desc,
};
pub use stage_food_desc_reducer::{
    StageFoodDescCallbackId, set_flags_for_stage_food_desc, stage_food_desc,
};
pub use stage_gate_desc_reducer::{
    StageGateDescCallbackId, set_flags_for_stage_gate_desc, stage_gate_desc,
};
pub use stage_hexite_exchange_entry_desc_reducer::{
    StageHexiteExchangeEntryDescCallbackId, set_flags_for_stage_hexite_exchange_entry_desc,
    stage_hexite_exchange_entry_desc,
};
pub use stage_interior_environment_desc_reducer::{
    StageInteriorEnvironmentDescCallbackId, set_flags_for_stage_interior_environment_desc,
    stage_interior_environment_desc,
};
pub use stage_interior_instance_desc_reducer::{
    StageInteriorInstanceDescCallbackId, set_flags_for_stage_interior_instance_desc,
    stage_interior_instance_desc,
};
pub use stage_interior_network_desc_reducer::{
    StageInteriorNetworkDescCallbackId, set_flags_for_stage_interior_network_desc,
    stage_interior_network_desc,
};
pub use stage_interior_portal_connections_desc_reducer::{
    StageInteriorPortalConnectionsDescCallbackId,
    set_flags_for_stage_interior_portal_connections_desc, stage_interior_portal_connections_desc,
};
pub use stage_interior_shape_desc_reducer::{
    StageInteriorShapeDescCallbackId, set_flags_for_stage_interior_shape_desc,
    stage_interior_shape_desc,
};
pub use stage_interior_spawn_desc_reducer::{
    StageInteriorSpawnDescCallbackId, set_flags_for_stage_interior_spawn_desc,
    stage_interior_spawn_desc,
};
pub use stage_item_conversion_recipe_desc_reducer::{
    StageItemConversionRecipeDescCallbackId, set_flags_for_stage_item_conversion_recipe_desc,
    stage_item_conversion_recipe_desc,
};
pub use stage_item_desc_reducer::{
    StageItemDescCallbackId, set_flags_for_stage_item_desc, stage_item_desc,
};
pub use stage_item_list_desc_reducer::{
    StageItemListDescCallbackId, set_flags_for_stage_item_list_desc, stage_item_list_desc,
};
pub use stage_knowledge_scroll_desc_reducer::{
    StageKnowledgeScrollDescCallbackId, set_flags_for_stage_knowledge_scroll_desc,
    stage_knowledge_scroll_desc,
};
pub use stage_knowledge_scroll_type_desc_reducer::{
    StageKnowledgeScrollTypeDescCallbackId, set_flags_for_stage_knowledge_scroll_type_desc,
    stage_knowledge_scroll_type_desc,
};
pub use stage_knowledge_stat_modifier_desc_reducer::{
    StageKnowledgeStatModifierDescCallbackId, set_flags_for_stage_knowledge_stat_modifier_desc,
    stage_knowledge_stat_modifier_desc,
};
pub use stage_loot_chest_desc_reducer::{
    StageLootChestDescCallbackId, set_flags_for_stage_loot_chest_desc, stage_loot_chest_desc,
};
pub use stage_loot_rarity_desc_reducer::{
    StageLootRarityDescCallbackId, set_flags_for_stage_loot_rarity_desc, stage_loot_rarity_desc,
};
pub use stage_loot_table_desc_reducer::{
    StageLootTableDescCallbackId, set_flags_for_stage_loot_table_desc, stage_loot_table_desc,
};
pub use stage_npc_desc_reducer::{
    StageNpcDescCallbackId, set_flags_for_stage_npc_desc, stage_npc_desc,
};
pub use stage_onboarding_reward_desc_reducer::{
    StageOnboardingRewardDescCallbackId, set_flags_for_stage_onboarding_reward_desc,
    stage_onboarding_reward_desc,
};
pub use stage_parameters_desc_reducer::{
    StageParametersDescCallbackId, set_flags_for_stage_parameters_desc, stage_parameters_desc,
};
pub use stage_pathfinding_desc_reducer::{
    StagePathfindingDescCallbackId, set_flags_for_stage_pathfinding_desc, stage_pathfinding_desc,
};
pub use stage_paving_tile_desc_reducer::{
    StagePavingTileDescCallbackId, set_flags_for_stage_paving_tile_desc, stage_paving_tile_desc,
};
pub use stage_pillar_shaping_desc_reducer::{
    StagePillarShapingDescCallbackId, set_flags_for_stage_pillar_shaping_desc,
    stage_pillar_shaping_desc,
};
pub use stage_player_action_desc_reducer::{
    StagePlayerActionDescCallbackId, set_flags_for_stage_player_action_desc,
    stage_player_action_desc,
};
pub use stage_player_housing_desc_reducer::{
    StagePlayerHousingDescCallbackId, set_flags_for_stage_player_housing_desc,
    stage_player_housing_desc,
};
pub use stage_private_parameters_desc_reducer::{
    StagePrivateParametersDescCallbackId, set_flags_for_stage_private_parameters_desc,
    stage_private_parameters_desc,
};
pub use stage_resource_clump_desc_reducer::{
    StageResourceClumpDescCallbackId, set_flags_for_stage_resource_clump_desc,
    stage_resource_clump_desc,
};
pub use stage_resource_desc_reducer::{
    StageResourceDescCallbackId, set_flags_for_stage_resource_desc, stage_resource_desc,
};
pub use stage_resource_growth_recipe_desc_reducer::{
    StageResourceGrowthRecipeDescCallbackId, set_flags_for_stage_resource_growth_recipe_desc,
    stage_resource_growth_recipe_desc,
};
pub use stage_resource_placement_recipe_desc_reducer::{
    StageResourcePlacementRecipeDescCallbackId, set_flags_for_stage_resource_placement_recipe_desc,
    stage_resource_placement_recipe_desc,
};
pub use stage_secondary_knowledge_desc_reducer::{
    StageSecondaryKnowledgeDescCallbackId, set_flags_for_stage_secondary_knowledge_desc,
    stage_secondary_knowledge_desc,
};
pub use stage_skill_desc_reducer::{
    StageSkillDescCallbackId, set_flags_for_stage_skill_desc, stage_skill_desc,
};
pub use stage_targeting_matrix_desc_reducer::{
    StageTargetingMatrixDescCallbackId, set_flags_for_stage_targeting_matrix_desc,
    stage_targeting_matrix_desc,
};
pub use stage_teleport_item_desc_reducer::{
    StageTeleportItemDescCallbackId, set_flags_for_stage_teleport_item_desc,
    stage_teleport_item_desc,
};
pub use stage_terraform_recipe_desc_reducer::{
    StageTerraformRecipeDescCallbackId, set_flags_for_stage_terraform_recipe_desc,
    stage_terraform_recipe_desc,
};
pub use stage_tool_desc_reducer::{
    StageToolDescCallbackId, set_flags_for_stage_tool_desc, stage_tool_desc,
};
pub use stage_tool_type_desc_reducer::{
    StageToolTypeDescCallbackId, set_flags_for_stage_tool_type_desc, stage_tool_type_desc,
};
pub use stage_traveler_task_desc_reducer::{
    StageTravelerTaskDescCallbackId, set_flags_for_stage_traveler_task_desc,
    stage_traveler_task_desc,
};
pub use stage_traveler_trade_order_desc_reducer::{
    StageTravelerTradeOrderDescCallbackId, set_flags_for_stage_traveler_trade_order_desc,
    stage_traveler_trade_order_desc,
};
pub use stage_wall_desc_reducer::{
    StageWallDescCallbackId, set_flags_for_stage_wall_desc, stage_wall_desc,
};
pub use stage_weapon_desc_reducer::{
    StageWeaponDescCallbackId, set_flags_for_stage_weapon_desc, stage_weapon_desc,
};
pub use stage_weapon_type_desc_reducer::{
    StageWeaponTypeDescCallbackId, set_flags_for_stage_weapon_type_desc, stage_weapon_type_desc,
};
pub use staged_static_data_table::*;
pub use staged_static_data_type::StagedStaticData;
pub use stamina_state_table::*;
pub use stamina_state_type::StaminaState;
pub use start_agents_reducer::{StartAgentsCallbackId, set_flags_for_start_agents, start_agents};
pub use start_generating_world_reducer::{
    StartGeneratingWorldCallbackId, set_flags_for_start_generating_world, start_generating_world,
};
pub use start_onboarding_quest_reducer::{
    StartOnboardingQuestCallbackId, set_flags_for_start_onboarding_quest, start_onboarding_quest,
};
pub use starving_agent_loop_reducer::{
    StarvingAgentLoopCallbackId, set_flags_for_starving_agent_loop, starving_agent_loop,
};
pub use starving_loop_timer_table::*;
pub use starving_loop_timer_type::StarvingLoopTimer;
pub use starving_player_state_table::*;
pub use starving_player_state_type::StarvingPlayerState;
pub use static_data_upload_type::StaticDataUpload;
pub use stop_agents_reducer::{StopAgentsCallbackId, set_flags_for_stop_agents, stop_agents};
pub use surface_type_type::SurfaceType;
pub use synchronize_time_reducer::{
    SynchronizeTimeCallbackId, set_flags_for_synchronize_time, synchronize_time,
};
pub use target_state_table::*;
pub use target_state_type::TargetState;
pub use target_update_reducer::{
    TargetUpdateCallbackId, set_flags_for_target_update, target_update,
};
pub use target_update_request_type::TargetUpdateRequest;
pub use targetable_state_table::*;
pub use targetable_state_type::TargetableState;
pub use targeting_matrix_desc_table::*;
pub use targeting_matrix_desc_type::TargetingMatrixDesc;
pub use teleport_item_desc_table::*;
pub use teleport_item_desc_type::TeleportItemDesc;
pub use teleport_location_type::TeleportLocation;
pub use teleport_location_type_type::TeleportLocationType;
pub use teleport_player_timer_table::*;
pub use teleport_player_timer_type::TeleportPlayerTimer;
pub use teleportation_energy_regen_agent_loop_reducer::{
    TeleportationEnergyRegenAgentLoopCallbackId,
    set_flags_for_teleportation_energy_regen_agent_loop, teleportation_energy_regen_agent_loop,
};
pub use teleportation_energy_regen_loop_timer_table::*;
pub use teleportation_energy_regen_loop_timer_type::TeleportationEnergyRegenLoopTimer;
pub use teleportation_energy_state_table::*;
pub use teleportation_energy_state_type::TeleportationEnergyState;
pub use terraform_cancel_reducer::{
    TerraformCancelCallbackId, set_flags_for_terraform_cancel, terraform_cancel,
};
pub use terraform_progress_state_table::*;
pub use terraform_progress_state_type::TerraformProgressState;
pub use terraform_recipe_desc_table::*;
pub use terraform_recipe_desc_type::TerraformRecipeDesc;
pub use terraform_reducer::{TerraformCallbackId, set_flags_for_terraform, terraform};
pub use terraform_set_final_target_reducer::{
    TerraformSetFinalTargetCallbackId, set_flags_for_terraform_set_final_target,
    terraform_set_final_target,
};
pub use terraform_start_reducer::{
    TerraformStartCallbackId, set_flags_for_terraform_start, terraform_start,
};
pub use terrain_cell_type::TerrainCell;
pub use terrain_chunk_state_table::*;
pub use terrain_chunk_state_type::TerrainChunkState;
pub use the_great_place_holder_table_type::TheGreatPlaceHolderTable;
pub use the_great_placeholder_table_table::*;
pub use threat_state_table::*;
pub use threat_state_type::ThreatState;
pub use tool_desc_table::*;
pub use tool_desc_type::ToolDesc;
pub use tool_requirement_type::ToolRequirement;
pub use tool_type_desc_table::*;
pub use tool_type_desc_type::ToolTypeDesc;
pub use toolbar_state_table::*;
pub use toolbar_state_type::ToolbarState;
pub use trade_accept_reducer::{TradeAcceptCallbackId, set_flags_for_trade_accept, trade_accept};
pub use trade_accept_session_reducer::{
    TradeAcceptSessionCallbackId, set_flags_for_trade_accept_session, trade_accept_session,
};
pub use trade_add_item_reducer::{
    TradeAddItemCallbackId, set_flags_for_trade_add_item, trade_add_item,
};
pub use trade_cancel_server_reducer::{
    TradeCancelServerCallbackId, set_flags_for_trade_cancel_server, trade_cancel_server,
};
pub use trade_decline_reducer::{
    TradeDeclineCallbackId, set_flags_for_trade_decline, trade_decline,
};
pub use trade_decline_session_reducer::{
    TradeDeclineSessionCallbackId, set_flags_for_trade_decline_session, trade_decline_session,
};
pub use trade_initiate_session_reducer::{
    TradeInitiateSessionCallbackId, set_flags_for_trade_initiate_session, trade_initiate_session,
};
pub use trade_order_state_table::*;
pub use trade_order_state_type::TradeOrderState;
pub use trade_pocket_type::TradePocket;
pub use trade_remove_item_reducer::{
    TradeRemoveItemCallbackId, set_flags_for_trade_remove_item, trade_remove_item,
};
pub use trade_session_loop_timer_table::*;
pub use trade_session_loop_timer_type::TradeSessionLoopTimer;
pub use trade_session_state_table::*;
pub use trade_session_state_type::TradeSessionState;
pub use trade_session_status_type::TradeSessionStatus;
pub use trade_sessions_agent_loop_reducer::{
    TradeSessionsAgentLoopCallbackId, set_flags_for_trade_sessions_agent_loop,
    trade_sessions_agent_loop,
};
pub use trade_swap_pockets_reducer::{
    TradeSwapPocketsCallbackId, set_flags_for_trade_swap_pockets, trade_swap_pockets,
};
pub use transfer_player_delayed_reducer::{
    TransferPlayerDelayedCallbackId, set_flags_for_transfer_player_delayed, transfer_player_delayed,
};
pub use transfer_player_housing_msg_type::TransferPlayerHousingMsg;
pub use transfer_player_msg_type::TransferPlayerMsg;
pub use transfer_player_timer_table::*;
pub use transfer_player_timer_type::TransferPlayerTimer;
pub use traveler_task_agent_loop_reducer::{
    TravelerTaskAgentLoopCallbackId, set_flags_for_traveler_task_agent_loop,
    traveler_task_agent_loop,
};
pub use traveler_task_desc_table::*;
pub use traveler_task_desc_type::TravelerTaskDesc;
pub use traveler_task_loop_timer_table::*;
pub use traveler_task_loop_timer_type::TravelerTaskLoopTimer;
pub use traveler_task_state_table::*;
pub use traveler_task_state_type::TravelerTaskState;
pub use traveler_trade_order_desc_table::*;
pub use traveler_trade_order_desc_type::TravelerTradeOrderDesc;
pub use traversal_settings_type::TraversalSettings;
pub use unclaimed_collectibles_state_table::*;
pub use unclaimed_collectibles_state_type::UnclaimedCollectiblesState;
pub use unclaimed_shards_state_table::*;
pub use unclaimed_shards_state_type::UnclaimedShardsState;
pub use update_scheduled_timers_from_static_data_reducer::{
    UpdateScheduledTimersFromStaticDataCallbackId,
    set_flags_for_update_scheduled_timers_from_static_data,
    update_scheduled_timers_from_static_data,
};
pub use user_authentication_state_op_type::UserAuthenticationStateOp;
pub use user_authentication_state_table::*;
pub use user_authentication_state_type::UserAuthenticationState;
pub use user_moderation_policy_type::UserModerationPolicy;
pub use user_moderation_state_op_type::UserModerationStateOp;
pub use user_moderation_state_table::*;
pub use user_moderation_state_type::UserModerationState;
pub use user_previous_region_state_table::*;
pub use user_previous_region_state_type::UserPreviousRegionState;
pub use user_state_op_type::UserStateOp;
pub use user_state_table::*;
pub use user_state_type::UserState;
pub use user_update_region_msg_type::UserUpdateRegionMsg;
pub use vault_collectible_type::VaultCollectible;
pub use vault_state_table::*;
pub use vault_state_type::VaultState;
pub use vfx_attachment_point_type::VfxAttachmentPoint;
pub use wall_desc_table::*;
pub use wall_desc_type::WallDesc;
pub use weapon_desc_table::*;
pub use weapon_desc_type::WeaponDesc;
pub use weapon_type_desc_table::*;
pub use weapon_type_desc_type::WeaponTypeDesc;
pub use world_gen_animation_curve_keyframe_type::WorldGenAnimationCurveKeyframe;
pub use world_gen_animation_curve_type::WorldGenAnimationCurve;
pub use world_gen_biome_definition_type::WorldGenBiomeDefinition;
pub use world_gen_biomes_map_definition_type::WorldGenBiomesMapDefinition;
pub use world_gen_building_details_type::WorldGenBuildingDetails;
pub use world_gen_buildings_map_definition_type::WorldGenBuildingsMapDefinition;
pub use world_gen_generated_building_type::WorldGenGeneratedBuilding;
pub use world_gen_generated_resource_deposit_type::WorldGenGeneratedResourceDeposit;
pub use world_gen_land_shape_definition_type::WorldGenLandShapeDefinition;
pub use world_gen_mountain_type::WorldGenMountain;
pub use world_gen_mountains_map_definition_type::WorldGenMountainsMapDefinition;
pub use world_gen_noise_based_elevation_layer_blending_mode_type::WorldGenNoiseBasedElevationLayerBlendingMode;
pub use world_gen_noise_based_elevation_layer_type::WorldGenNoiseBasedElevationLayer;
pub use world_gen_noise_specs_type::WorldGenNoiseSpecs;
pub use world_gen_rect_int_type::WorldGenRectInt;
pub use world_gen_resource_biome_type::WorldGenResourceBiome;
pub use world_gen_resource_definition_type::WorldGenResourceDefinition;
pub use world_gen_resource_details_type::WorldGenResourceDetails;
pub use world_gen_resources_map_definition_type::WorldGenResourcesMapDefinition;
pub use world_gen_river_generation_settings_type::WorldGenRiverGenerationSettings;
pub use world_gen_river_pathfinding_costs_type::WorldGenRiverPathfindingCosts;
pub use world_gen_vector_2_int_type::WorldGenVector2Int;
pub use world_gen_vector_2_type::WorldGenVector2;
pub use world_gen_world_definition_type::WorldGenWorldDefinition;
pub use world_gen_world_map_definition_type::WorldGenWorldMapDefinition;
pub use world_region_name_state_table::*;
pub use world_region_name_state_type::WorldRegionNameState;
pub use world_region_state_table::*;
pub use world_region_state_type::WorldRegionState;

#[derive(Clone, PartialEq, Debug)]

/// One of the reducers defined by this module.
///
/// Contained within a [`__sdk::ReducerEvent`] in [`EventContext`]s for reducer events
/// to indicate which reducer caused the event.

pub enum Reducer {
    AchievementClaim {
        request: PlayerAchievementClaimRequest,
    },
    AcquireKnowledgeFromEntities {
        request: PlayerAcquireKnowledgeFromEntitiesRequest,
    },
    AdminAlpha3CompleteOnboarding {
        entity_id: u64,
    },
    AdminAlpha3ResetOnboardingToFifthTempleQuest {
        entity_id: u64,
    },
    AdminAlpha3ResetOnboardingToFirstExpandQuest {
        entity_id: u64,
    },
    AdminAlpha3ResetOnboardingToFirstTempleQuest {
        entity_id: u64,
    },
    AdminAlpha3ResetOnboardingToFourthExpandQuest {
        entity_id: u64,
    },
    AdminAlpha3ResetOnboardingToFourthTempleQuest {
        entity_id: u64,
    },
    AdminAlpha3ResetOnboardingToSecondExpandQuest {
        entity_id: u64,
    },
    AdminAlpha3ResetOnboardingToSecondTempleQuest {
        entity_id: u64,
    },
    AdminAlpha3ResetOnboardingToThirdExpandQuest {
        entity_id: u64,
    },
    AdminAlpha3ResetOnboardingToThirdTempleQuest {
        entity_id: u64,
    },
    AdminBroadcastMsgRegion {
        title: String,
        message: String,
    },
    AdminClearAllResources,
    AdminCollapseRuin {
        ruin_building_entity_id: u64,
    },
    AdminCollapseRuins,
    AdminCompleteAllPassiveCrafts,
    AdminCountInventoryItems {
        item_id: i32,
        limit: u32,
    },
    AdminDespawnOverworldEnemies,
    AdminGrantCollectibles {
        identity: String,
        collectibles: Vec<i32>,
    },
    AdminResetAllHerdLocations,
    AdminResetHerdLocations {
        enemy_ai_params_desc_id: i32,
    },
    AdminResetOnboardingCompletely {
        entity_id: u64,
    },
    AdminRestoreAllCollapsedRuins,
    AdminRestorePlayerState {
        username: String,
        restore_position: bool,
        force_signout: bool,
        restore_all_deployables_positions: bool,
        store_deployables: bool,
        clear_cargo: bool,
        clear_items: bool,
        clear_toolbelt: bool,
    },
    AdminRestorePlayerStateScheduled {
        timer: AdminRestorePlayerStateTimer,
    },
    AdminSignOut {
        identity: __sdk::Identity,
    },
    AdminSignOutAllRegion,
    AdminSignOutString {
        identity: String,
    },
    AdminUpdateLightSourceStates,
    Attack {
        request: EntityAttackRequest,
    },
    AttackImpact {
        timer: AttackImpactTimer,
    },
    AttackScheduled {
        timer: AttackTimer,
    },
    AttackStart {
        request: EntityAttackRequest,
    },
    AutoLogoutLoop {
        timer: AutoLogoutLoopTimer,
    },
    BarterStallOrderAccept {
        request: PlayerBarterStallOrderAccept,
    },
    BarterStallOrderCreate {
        request: PlayerBarterStallOrderCreateRequest,
    },
    BarterStallOrderDelete {
        request: PlayerBarterStallOrderDeleteRequest,
    },
    BarterStallSetMarketModeEnabled {
        request: BarterStallSetMarketModeEnabledRequest,
    },
    BlueprintPlace {
        center: OffsetCoordinatesSmallMessage,
        blueprint_json: String,
        settings_json: String,
        rotation: i32,
        elevation_offset: i16,
    },
    BuildingDecayAgentLoop {
        timer: BuildingDecayLoopTimer,
    },
    BuildingDeconstruct {
        request: PlayerBuildingDeconstructRequest,
    },
    BuildingDeconstructStart {
        request: PlayerBuildingDeconstructRequest,
    },
    BuildingDespawn {
        timer: BuildingDespawnTimer,
    },
    BuildingMove {
        request: PlayerBuildingMoveRequest,
    },
    BuildingRepair {
        request: PlayerBuildingRepairRequest,
    },
    BuildingRepairStart {
        request: PlayerBuildingRepairRequest,
    },
    BuildingSetNickname {
        request: PlayerBuildingSetNicknameRequest,
    },
    BuildingSetSignText {
        request: BuildingSetSignTextRequest,
    },
    ChatPostMessage {
        request: PlayerChatPostMessageRequest,
    },
    CheatBuildingMove {
        request: PlayerBuildingMoveRequest,
    },
    CheatBuildingPlace {
        request: PlayerProjectSitePlaceRequest,
    },
    CheatCargoGrant {
        request: CheatCargoGrantRequest,
    },
    CheatClaimTakeOwnership {
        claim_entity_id: u64,
    },
    CheatClaimTotemAddSupplies {
        claim_entity_id: u64,
        amount: f32,
    },
    CheatClaimTotemCompleteCurrentResearch {
        claim_entity_id: u64,
    },
    CheatClaimTotemResearchAll {
        claim_entity_id: u64,
    },
    CheatClearBuffsAndDebuffs {
        player_entity_id: u64,
    },
    CheatCompendiumPlaceEnemy {
        request: CheatCompendiumEnemyPlaceRequest,
    },
    CheatCompendiumPlaceResource {
        request: CheatCompendiumItemPlaceRequest,
    },
    CheatDeleteItem {
        inventory_entity_id: u64,
        pocket_index: i32,
    },
    CheatDeployableStore {
        deployable_entity_id: u64,
    },
    CheatDiscoverMap {
        request: CheatDiscoverMapRequest,
    },
    CheatExperienceGrant {
        request: CheatExperienceGrantRequest,
    },
    CheatGrantKnowledge {
        request: CheatGrantKnowledgeRequest,
    },
    CheatGrantTeleportEnergy {
        player_entity_id: u64,
    },
    CheatItemStackGrant {
        request: CheatItemStackGrantRequest,
    },
    CheatItemStackGrantAndEquip {
        request: CheatItemStackGrantRequest,
    },
    CheatKill {
        entity_id: u64,
    },
    CheatPavingAddTile {
        request: PlayerPavingPlaceTileRequest,
    },
    CheatPavingDestroy {
        request: PlayerPavingDestroyTileRequest,
    },
    CheatPillarShapingAddPillar {
        request: PlayerPillarShapingPlaceRequest,
    },
    CheatPillarShapingDestroy {
        request: PlayerPillarShapingDestroyRequest,
    },
    CheatProjectSiteAddAllMaterials {
        project_site_entity_id: u64,
    },
    CheatRemoveEntityBuilding {
        request: CheatRemoveEntityRequest,
    },
    CheatRemoveEntityEnemy {
        request: CheatRemoveEntityRequest,
    },
    CheatRemoveEntityResource {
        request: CheatRemoveEntityRequest,
    },
    CheatSetAiDebugState {
        request: CheatSetDebugAiStateRequest,
    },
    CheatSpawnLootChest {
        request: CheatSpawnLootChestRequest,
    },
    CheatTeleportFloat {
        request: CheatTeleportFloatRequest,
    },
    CheatTerraform {
        request: CheatTerraformRequest,
    },
    CheatToggleActiveCollectible {
        request: CheatToggleActiveCollectibleRequest,
    },
    CheatWarp {
        request: CheatWarpRequest,
    },
    ClaimAddMember {
        request: PlayerClaimAddMemberRequest,
    },
    ClaimAddRecruitment {
        request: PlayerClaimAddRecruitmentRequest,
    },
    ClaimAddTile {
        request: PlayerClaimAddTileRequest,
    },
    ClaimApplyForRecruitment {
        request: PlayerClaimApplyForRecruitmentRequest,
    },
    ClaimLeave {
        request: PlayerClaimLeaveRequest,
    },
    ClaimPurchaseSuppliesFromPlayer {
        request: ClaimPurchaseSuppliesFromPlayerRequest,
    },
    ClaimRemoveMember {
        request: PlayerClaimRemoveMemberRequest,
    },
    ClaimRemoveRecruitment {
        request: PlayerClaimRemoveRecruitmentRequest,
    },
    ClaimRemoveTile {
        request: PlayerClaimRemoveTileRequest,
    },
    ClaimRename {
        request: PlayerClaimRenameRequest,
    },
    ClaimResupply {
        request: ClaimResupplyRequest,
    },
    ClaimResupplyStart {
        request: ClaimResupplyRequest,
    },
    ClaimSetMemberPermissions {
        request: PlayerClaimSetMemberPermissionsRequest,
    },
    ClaimSetPurchaseSupplyPrice {
        request: ClaimSetPurchaseSupplyPriceRequest,
    },
    ClaimSetPurchaseSupplyThreshold {
        request: ClaimSetPurchaseSupplyThresholdRequest,
    },
    ClaimTakeOwnership {
        request: PlayerClaimTakeOwnershipRequest,
    },
    ClaimTechCancel {
        request: PlayerClaimTechCancelRequest,
    },
    ClaimTechLearn {
        request: PlayerClaimTechLearnRequest,
    },
    ClaimTechUnlockTech {
        timer: ClaimTechUnlockTimer,
    },
    ClaimTransferOwnership {
        request: PlayerClaimTransferOwnershipRequest,
    },
    ClaimWithdrawFromTreasury {
        request: PlayerClaimWithdrawFromTreasuryRequest,
    },
    ClearStagedStaticData,
    ClosedListingCollect {
        request: PlayerClosedListingCollectRequest,
    },
    CollectStatsReducer {
        timer: CollectStatsTimer,
    },
    CollectibleActivate {
        request: PlayerCollectibleActivateRequest,
    },
    CommitStagedStaticData,
    CompleteOnboardingQuest {
        id: u16,
    },
    CompleteOnboardingState {
        id: u16,
    },
    ConvertCollectibleToDeed {
        request: PlayerConvertCollectibleToDeedRequest,
    },
    ConvertDeedToCollectible {
        request: PlayerConvertDeedToCollectibleRequest,
    },
    CraftCancel {
        request: PlayerCraftCancelRequest,
    },
    CraftCollect {
        request: PlayerCraftCollectRequest,
    },
    CraftCollectAll {
        request: PlayerCraftCollectAllRequest,
    },
    CraftContinue {
        request: PlayerCraftContinueRequest,
    },
    CraftContinueStart {
        request: PlayerCraftContinueRequest,
    },
    CraftInitiate {
        request: PlayerCraftInitiateRequest,
    },
    CraftInitiateStart {
        request: PlayerCraftInitiateRequest,
    },
    CurrentVersion,
    DayNightAgentLoop {
        timer: DayNightLoopTimer,
    },
    DeleteAllNpcs,
    DeployableDeploy {
        request: DeployableDeployRequest,
    },
    DeployableDeployStart {
        request: DeployableDeployRequest,
    },
    DeployableDismount {
        request: PlayerDeployableDismountRequest,
    },
    DeployableDismountScheduled {
        timer: DeployableDismountTimer,
    },
    DeployableMount {
        request: PlayerDeployableMountRequest,
    },
    DeployableMove {
        request: PlayerDeployableMoveRequest,
    },
    DeployableMoveOffClaim {
        deployable_entity_id: u64,
    },
    DeployableStore {
        request: DeployableStoreRequest,
    },
    DeployableStoreStart {
        request: DeployableStoreRequest,
    },
    DestroyDimensionNetwork {
        timer: DestroyDimensionNetworkTimer,
    },
    DevDeleteWorld,
    DiscoverEntities {
        request: PlayerDiscoverEntitiesRequest,
    },
    DroppedInventoryDespawn {
        timer: DroppedInventoryDespawnTimer,
    },
    DroppedInventoryLoseOwnership {
        timer: DroppedInventoryOwnershipTimer,
    },
    DuelAgentTimerLoop {
        timer: DuelAgentTimer,
    },
    DuelDespawn {
        timer: DuelDespawnTimer,
    },
    Eat {
        request: PlayerEatRequest,
    },
    Emote {
        request: PlayerEmoteRequest,
    },
    EmoteStart {
        request: PlayerEmoteRequest,
    },
    EmpireAddSiegeSupplies {
        request: EmpireAddSiegeSuppliesRequest,
    },
    EmpireClaimJoin {
        building_entity_id: u64,
        empire_entity_id: u64,
    },
    EmpireCollectHexiteCapsule {
        request: EmpireCollectHexiteCapsuleRequest,
    },
    EmpireDeploySiegeEngine {
        request: EmpireStartSiegeRequest,
    },
    EmpireDeploySiegeEngineStart {
        request: EmpireStartSiegeRequest,
    },
    EmpireQueueSupplies {
        request: EmpireQueueSuppliesRequest,
    },
    EmpireResupplyNode {
        request: EmpireResupplyNodeRequest,
    },
    EmpireResupplyNodeStart {
        request: EmpireResupplyNodeRequest,
    },
    EmpireSiegeDepletedWatchtower {
        request: EmpireStartSiegeRequest,
    },
    EndGracePeriod {
        timer: EndGracePeriodTimer,
    },
    EnemyClearAggro {
        request: EnemyClearAggroRequest,
    },
    EnemyDespawn {
        timer: EnemyDespawnTimer,
    },
    EnemyDespawnFromMobMonitor {
        enemy_entity_id: u64,
    },
    EnemyDespawnFromMobMonitorBatch {
        enemy_entity_ids: Vec<u64>,
    },
    EnemyMove {
        request: EnemyMoveRequest,
    },
    EnemyMoveBatch {
        requests: Vec<EnemyMoveRequest>,
    },
    EnemyRegenAgentLoop {
        timer: EnemyRegenLoopTimer,
    },
    EnemySetHealth {
        request: EnemySetHealthRequest,
    },
    EnemySetHealthBatch {
        requests: Vec<EnemySetHealthRequest>,
    },
    EnemySpawn {
        request: EnemySpawnRequest,
    },
    EnemySpawnBatch {
        requests: Vec<EnemySpawnRequest>,
    },
    EnemySpawnLoot {
        request: EnemySpawnLootRequest,
    },
    EnvironmentDebuffAgentLoop {
        timer: EnvironmentDebuffLoopTimer,
    },
    EquipmentAdd {
        request: PlayerEquipmentAddRequest,
    },
    EquipmentRemove {
        request: PlayerEquipmentRemoveRequest,
    },
    Extract {
        request: PlayerExtractRequest,
    },
    ExtractStart {
        request: PlayerExtractRequest,
    },
    ForceStartAgents,
    GenerateDevIsland,
    GenerateFlatWorld,
    GenerateWorld {
        world_definition: WorldGenWorldDefinition,
    },
    GrowthAgentLoop {
        timer: GrowthLoopTimer,
    },
    HideDeployable {
        timer: HideDeployableTimer,
    },
    IdentityConnected,
    IdentityDisconnected,
    ImportAchievementDesc {
        records: Vec<AchievementDesc>,
    },
    ImportActiveBuffState {
        records: Vec<ActiveBuffState>,
    },
    ImportAdminBroadcast {
        records: Vec<AdminBroadcast>,
    },
    ImportAlertDesc {
        records: Vec<AlertDesc>,
    },
    ImportAlertState {
        records: Vec<AlertState>,
    },
    ImportAttackOutcomeState {
        records: Vec<AttackOutcomeState>,
    },
    ImportBiomeDesc {
        records: Vec<BiomeDesc>,
    },
    ImportBuffDesc {
        records: Vec<BuffDesc>,
    },
    ImportBuffTypeDesc {
        records: Vec<BuffTypeDesc>,
    },
    ImportBuildingClaimDesc {
        records: Vec<BuildingClaimDesc>,
    },
    ImportBuildingDesc {
        records: Vec<BuildingDesc>,
    },
    ImportBuildingPortalDesc {
        records: Vec<BuildingPortalDesc>,
    },
    ImportBuildingRepairsDesc {
        records: Vec<BuildingRepairsDesc>,
    },
    ImportBuildingSpawnDesc {
        records: Vec<BuildingSpawnDesc>,
    },
    ImportBuildingState {
        records: Vec<BuildingState>,
    },
    ImportBuildingTypeDesc {
        records: Vec<BuildingTypeDesc>,
    },
    ImportCargoDesc {
        records: Vec<CargoDesc>,
    },
    ImportCharacterStatDesc {
        records: Vec<CharacterStatDesc>,
    },
    ImportCharacterStatsState {
        records: Vec<CharacterStatsState>,
    },
    ImportChatMessageState {
        records: Vec<ChatMessageState>,
    },
    ImportChestRarityDesc {
        records: Vec<ChestRarityDesc>,
    },
    ImportClaimLocalState {
        records: Vec<ClaimLocalState>,
    },
    ImportClaimRecruitmentState {
        records: Vec<ClaimRecruitmentState>,
    },
    ImportClaimState {
        records: Vec<ClaimState>,
    },
    ImportClaimTechDesc {
        records: Vec<ClaimTechDesc>,
    },
    ImportClaimTechState {
        records: Vec<ClaimTechState>,
    },
    ImportClaimTileCost {
        records: Vec<ClaimTileCost>,
    },
    ImportClaimTileState {
        records: Vec<ClaimTileState>,
    },
    ImportClimbRequirementDesc {
        records: Vec<ClimbRequirementDesc>,
    },
    ImportClothingDesc {
        records: Vec<ClothingDesc>,
    },
    ImportCollectibleDesc {
        records: Vec<CollectibleDesc>,
    },
    ImportCombatActionDesc {
        records: Vec<CombatActionDesc>,
    },
    ImportCombatState {
        records: Vec<CombatState>,
    },
    ImportConfig {
        records: Vec<Config>,
    },
    ImportConstructionRecipeDesc {
        records: Vec<ConstructionRecipeDesc>,
    },
    ImportCraftingRecipeDesc {
        records: Vec<CraftingRecipeDesc>,
    },
    ImportDeconstructionRecipeDesc {
        records: Vec<DeconstructionRecipeDesc>,
    },
    ImportDeployableDesc {
        records: Vec<DeployableDesc>,
    },
    ImportDeployableState {
        records: Vec<DeployableState>,
    },
    ImportDimensionDescriptionState {
        records: Vec<DimensionDescriptionState>,
    },
    ImportDimensionNetworkDescriptionState {
        records: Vec<DimensionNetworkState>,
    },
    ImportDistantVisibleEntityDesc {
        records: Vec<DistantVisibleEntityDesc>,
    },
    ImportDroppedInventoryState {
        records: Vec<DroppedInventoryState>,
    },
    ImportElevatorDesc {
        records: Vec<ElevatorDesc>,
    },
    ImportEmoteDesc {
        records: Vec<EmoteDesc>,
    },
    ImportEmpireColorsDesc {
        records: Vec<EmpireColorDesc>,
    },
    ImportEmpireIconDesc {
        records: Vec<EmpireIconDesc>,
    },
    ImportEmpireNotificationDesc {
        records: Vec<EmpireNotificationDesc>,
    },
    ImportEmpireRankDesc {
        records: Vec<EmpireRankDesc>,
    },
    ImportEmpireSuppliesDesc {
        records: Vec<EmpireSuppliesDesc>,
    },
    ImportEmpireTerritoryDesc {
        records: Vec<EmpireTerritoryDesc>,
    },
    ImportEnemyAiParamsDesc {
        records: Vec<EnemyAiParamsDesc>,
    },
    ImportEnemyDesc {
        records: Vec<EnemyDesc>,
    },
    ImportEnemyState {
        records: Vec<EnemyState>,
    },
    ImportEnvironmentDebuffDesc {
        records: Vec<EnvironmentDebuffDesc>,
    },
    ImportEquipmentDesc {
        records: Vec<EquipmentDesc>,
    },
    ImportEquipmentState {
        records: Vec<EquipmentState>,
    },
    ImportExperienceState {
        records: Vec<ExperienceState>,
    },
    ImportExplorationChunksState {
        records: Vec<ExplorationChunksState>,
    },
    ImportExtractionRecipeDesc {
        records: Vec<ExtractionRecipeDesc>,
    },
    ImportFoodDesc {
        records: Vec<FoodDesc>,
    },
    ImportFootprintTileState {
        records: Vec<FootprintTileState>,
    },
    ImportGateDesc {
        records: Vec<GateDesc>,
    },
    ImportGlobals {
        records: Vec<Globals>,
    },
    ImportGrowthState {
        records: Vec<GrowthState>,
    },
    ImportHealthState {
        records: Vec<HealthState>,
    },
    ImportHerdCache {
        records: Vec<HerdState>,
    },
    ImportHexiteExchangeEntryDesc {
        records: Vec<HexiteExchangeEntryDesc>,
    },
    ImportIdentityRole {
        records: Vec<IdentityRole>,
    },
    ImportInteriorCollapseTriggerState {
        records: Vec<InteriorCollapseTriggerState>,
    },
    ImportInteriorEnvironmentDesc {
        records: Vec<InteriorEnvironmentDesc>,
    },
    ImportInteriorInstanceDesc {
        records: Vec<InteriorInstanceDesc>,
    },
    ImportInteriorNetworkDesc {
        records: Vec<InteriorNetworkDesc>,
    },
    ImportInteriorPortalConnectionsDesc {
        records: Vec<InteriorPortalConnectionsDesc>,
    },
    ImportInteriorShapeDesc {
        records: Vec<InteriorShapeDesc>,
    },
    ImportInteriorSpawnDesc {
        records: Vec<InteriorSpawnDesc>,
    },
    ImportInventoryState {
        records: Vec<InventoryState>,
    },
    ImportItemConversionRecipeDesc {
        records: Vec<ItemConversionRecipeDesc>,
    },
    ImportItemDesc {
        records: Vec<ItemDesc>,
    },
    ImportItemListDesc {
        records: Vec<ItemListDesc>,
    },
    ImportKnowledgeAchievementState {
        records: Vec<KnowledgeAchievementState>,
    },
    ImportKnowledgeBattleActionState {
        records: Vec<KnowledgeBattleActionState>,
    },
    ImportKnowledgeBuildingState {
        records: Vec<KnowledgeBuildingState>,
    },
    ImportKnowledgeCargoState {
        records: Vec<KnowledgeCargoState>,
    },
    ImportKnowledgeConstructionState {
        records: Vec<KnowledgeConstructionState>,
    },
    ImportKnowledgeCraftState {
        records: Vec<KnowledgeCraftState>,
    },
    ImportKnowledgeDeployableState {
        records: Vec<KnowledgeDeployableState>,
    },
    ImportKnowledgeEnemyState {
        records: Vec<KnowledgeEnemyState>,
    },
    ImportKnowledgeExtractState {
        records: Vec<KnowledgeExtractState>,
    },
    ImportKnowledgeItemState {
        records: Vec<KnowledgeItemState>,
    },
    ImportKnowledgeLoreState {
        records: Vec<KnowledgeLoreState>,
    },
    ImportKnowledgeNpcState {
        records: Vec<KnowledgeNpcState>,
    },
    ImportKnowledgePavingState {
        records: Vec<KnowledgePavingState>,
    },
    ImportKnowledgePillarShapingState {
        records: Vec<KnowledgePillarShapingState>,
    },
    ImportKnowledgeResourcePlacementState {
        records: Vec<KnowledgeResourcePlacementState>,
    },
    ImportKnowledgeResourceState {
        records: Vec<KnowledgeResourceState>,
    },
    ImportKnowledgeRuinsState {
        records: Vec<KnowledgeRuinsState>,
    },
    ImportKnowledgeScrollDesc {
        records: Vec<KnowledgeScrollDesc>,
    },
    ImportKnowledgeScrollTypeDesc {
        records: Vec<KnowledgeScrollTypeDesc>,
    },
    ImportKnowledgeSecondaryState {
        records: Vec<KnowledgeSecondaryState>,
    },
    ImportKnowledgeStatModifierDesc {
        records: Vec<KnowledgeStatModifierDesc>,
    },
    ImportKnowledgeVaultState {
        records: Vec<KnowledgeVaultState>,
    },
    ImportLocationCache {
        records: Vec<LocationCache>,
    },
    ImportLocationState {
        records: Vec<LocationState>,
    },
    ImportLootChestDesc {
        records: Vec<LootChestDesc>,
    },
    ImportLootChestState {
        records: Vec<LootChestState>,
    },
    ImportLootRarityDesc {
        records: Vec<LootRarityDesc>,
    },
    ImportLootTableDesc {
        records: Vec<LootTableDesc>,
    },
    ImportMobileEntityState {
        records: Vec<MobileEntityState>,
    },
    ImportMountingState {
        records: Vec<MountingState>,
    },
    ImportNpcDesc {
        records: Vec<NpcDesc>,
    },
    ImportNpcState {
        records: Vec<NpcState>,
    },
    ImportOnboardingRewardDesc {
        records: Vec<OnboardingRewardDesc>,
    },
    ImportOnboardingState {
        records: Vec<OnboardingState>,
    },
    ImportParametersDesc {
        records: Vec<ParametersDesc>,
    },
    ImportPathfindingDesc {
        records: Vec<PathfindingDesc>,
    },
    ImportPavedTileState {
        records: Vec<PavedTileState>,
    },
    ImportPavingTileDesc {
        records: Vec<PavingTileDesc>,
    },
    ImportPillarShapingDesc {
        records: Vec<PillarShapingDesc>,
    },
    ImportPlayerActionDesc {
        records: Vec<PlayerActionDesc>,
    },
    ImportPlayerActionState {
        records: Vec<PlayerActionState>,
    },
    ImportPlayerHousingDesc {
        records: Vec<PlayerHousingDesc>,
    },
    ImportPlayerPrefsState {
        records: Vec<PlayerPrefsState>,
    },
    ImportPlayerState {
        records: Vec<PlayerState>,
    },
    ImportPortalState {
        records: Vec<PortalState>,
    },
    ImportPrivateParametersDesc {
        records: Vec<PrivateParametersDesc>,
    },
    ImportProgressiveActionState {
        records: Vec<ProgressiveActionState>,
    },
    ImportProjectSiteState {
        records: Vec<ProjectSiteState>,
    },
    ImportRentState {
        records: Vec<RentState>,
    },
    ImportResourceClumpDesc {
        records: Vec<ResourceClumpDesc>,
    },
    ImportResourceCount {
        records: Vec<ResourceCount>,
    },
    ImportResourceDesc {
        records: Vec<ResourceDesc>,
    },
    ImportResourceGrowthRecipeDesc {
        records: Vec<ResourceGrowthRecipeDesc>,
    },
    ImportResourcePlacementRecipeDesc {
        records: Vec<ResourcePlacementRecipeDesc>,
    },
    ImportResourceState {
        records: Vec<ResourceState>,
    },
    ImportResourcesLog {
        records: Vec<ResourcesLog>,
    },
    ImportSatiationState {
        records: Vec<SatiationState>,
    },
    ImportSecondaryKnowledgeDesc {
        records: Vec<SecondaryKnowledgeDesc>,
    },
    ImportServerIdentity {
        records: Vec<ServerIdentity>,
    },
    ImportSignedInPlayerState {
        records: Vec<SignedInPlayerState>,
    },
    ImportSkillDesc {
        records: Vec<SkillDesc>,
    },
    ImportStaminaState {
        records: Vec<StaminaState>,
    },
    ImportTargetState {
        records: Vec<TargetState>,
    },
    ImportTargetableState {
        records: Vec<TargetableState>,
    },
    ImportTargetingMatrixDesc {
        records: Vec<TargetingMatrixDesc>,
    },
    ImportTeleportItemDesc {
        records: Vec<TeleportItemDesc>,
    },
    ImportTerraformRecipeDesc {
        records: Vec<TerraformRecipeDesc>,
    },
    ImportTerrainChunkState {
        records: Vec<TerrainChunkState>,
    },
    ImportToolDesc {
        records: Vec<ToolDesc>,
    },
    ImportToolTypeDesc {
        records: Vec<ToolTypeDesc>,
    },
    ImportTradeOrderState {
        records: Vec<TradeOrderState>,
    },
    ImportTradeSessionState {
        records: Vec<TradeSessionState>,
    },
    ImportTravelerTaskDesc {
        records: Vec<TravelerTaskDesc>,
    },
    ImportTravelerTradeOrderDesc {
        records: Vec<TravelerTradeOrderDesc>,
    },
    ImportUserModerationState {
        records: Vec<UserModerationState>,
    },
    ImportUserState {
        records: Vec<UserState>,
    },
    ImportVaultState {
        records: Vec<VaultState>,
    },
    ImportWallDesc {
        records: Vec<WallDesc>,
    },
    ImportWeaponDesc {
        records: Vec<WeaponDesc>,
    },
    ImportWeaponTypeDesc {
        records: Vec<WeaponTypeDesc>,
    },
    ImportWorldRegionNameState {
        records: Vec<WorldRegionNameState>,
    },
    ImportWorldRegionState {
        records: Vec<WorldRegionState>,
    },
    InsertResourcesLog {
        resources_log: ResourcesLog,
    },
    InsertTerrainChunk {
        terrain_chunk: TerrainChunkState,
        buildings: Vec<WorldGenGeneratedBuilding>,
        resources: Vec<WorldGenGeneratedResourceDeposit>,
    },
    InteriorSetCollapsed {
        dimension_network_entity_id: u64,
        is_collapsed: bool,
    },
    InteriorSetCollapsedScheduled {
        timer: InteriorSetCollapsedTimer,
    },
    InventoryCreatePersonal {
        building_entity_id: u64,
    },
    InventorySort {
        target_entity_id: u64,
    },
    ItemConvert {
        request: PlayerItemConvertRequest,
    },
    ItemConvertStart {
        request: PlayerItemConvertRequest,
    },
    ItemDrop {
        request: PlayerItemDropRequest,
    },
    ItemPickUp {
        request: PlayerDroppedInventoryPickUpRequest,
    },
    ItemStackMove {
        request: PlayerItemStackMoveRequest,
    },
    ItemStackMoveAll {
        request: PlayerItemStackMoveAllRequest,
    },
    ItemStackSplit {
        request: PlayerItemStackSplitRequest,
    },
    ItemUse {
        request: PlayerItemUseRequest,
    },
    ItemUseStart {
        request: PlayerItemUseRequest,
    },
    LoadConfig {
        environment_names: Vec<String>,
        contents: Vec<String>,
    },
    LogClaimMemberLeaderboard,
    LogClaimTierLeaderboard,
    LootChestDespawn {
        timer: LootChestDespawnTimer,
    },
    LootChestSpawn {
        timer: LootChestSpawnTimer,
    },
    NpcAiAgentLoop {
        timer: NpcAiLoopTimer,
    },
    OnDurabilityZero {
        timer: OnDurabilityZeroTimer,
    },
    OnInterModuleMessageProcessed {
        id: u64,
        error: Option<String>,
    },
    OrderCancel {
        request: PlayerOrderCancelRequest,
    },
    OrderCollect {
        request: PlayerOrderCollectRequest,
    },
    OrderEditBuyOrder {
        request: PlayerEditOrderRequest,
    },
    OrderEditSellOrder {
        request: PlayerEditOrderRequest,
    },
    OrderPostBuyOrder {
        request: PlayerPostOrderRequest,
    },
    OrderPostSellOrder {
        request: PlayerPostOrderRequest,
    },
    PassiveCraftCancel {
        passive_craft_entity_id: u64,
    },
    PassiveCraftCollect {
        passive_craft_entity_id: u64,
    },
    PassiveCraftCollectAll {
        building_entity_id: u64,
    },
    PassiveCraftProcess {
        timer: PassiveCraftTimer,
    },
    PassiveCraftQueue {
        request: PlayerPassiveCraftQueueRequest,
    },
    PausePlayTimer {
        request: PlayerPausePlayTimerRequest,
    },
    PavingDestroyTile {
        request: PlayerPavingDestroyTileRequest,
    },
    PavingDestroyTileStart {
        request: PlayerPavingDestroyTileRequest,
    },
    PavingPlaceTile {
        request: PlayerPavingPlaceTileRequest,
    },
    PavingPlaceTileStart {
        request: PlayerPavingPlaceTileRequest,
    },
    PermissionEdit {
        request: PlayerPermissionEditRequest,
    },
    PillarShapingDestroy {
        request: PlayerPillarShapingDestroyRequest,
    },
    PillarShapingDestroyStart {
        request: PlayerPillarShapingDestroyRequest,
    },
    PillarShapingPlacePillar {
        request: PlayerPillarShapingPlaceRequest,
    },
    PillarShapingPlacePillarStart {
        request: PlayerPillarShapingPlaceRequest,
    },
    PlayerActionCancel {
        client_cancel: bool,
    },
    PlayerCancelRegionTransfer,
    PlayerClearActionState {
        actor_id: u64,
        current_action: PlayerActionType,
        layer: PlayerActionLayer,
        last_action_result: PlayerActionResult,
    },
    PlayerClimb {
        request: PlayerClimbRequest,
    },
    PlayerClimbStart {
        request: PlayerClimbRequest,
    },
    PlayerCompleteTask {
        request: PlayerCompleteTaskRequest,
    },
    PlayerDeathStart {
        timer: PlayerDeathTimer,
    },
    PlayerDismissAlert {
        request: PlayerDismissAlertRequest,
    },
    PlayerDuelInitiate {
        target_player_entity_id: u64,
    },
    PlayerElevatorArrive {
        timer: PlayerUseElevatorTimer,
    },
    PlayerHousingChangeEntrance {
        building_entity_id: u64,
    },
    PlayerHousingEnter {
        request: PlayerHousingEnterRequest,
    },
    PlayerHousingEvictPlayer {
        request: PlayerHousingEvictPlayerRequest,
    },
    PlayerHousingEvictPlayerComplete {
        timer: PlayerHousingEvictPlayerTimer,
    },
    PlayerHousingIncomeAgentLoop {
        timer: PlayerHousingIncomeLoopTimer,
    },
    PlayerHousingRequestAccess {
        request: PlayerHousingRequestAccessRequest,
    },
    PlayerHousingUpdate {
        building_entity_id: u64,
    },
    PlayerMove {
        request: PlayerMoveRequest,
    },
    PlayerNotificationEventReducer {
        timer: PlayerNotificationEvent,
    },
    PlayerQueueJoin,
    PlayerQueueLeave,
    PlayerRegenAgentLoop {
        timer: PlayerRegenLoopTimer,
    },
    PlayerRegionCrossover,
    PlayerRegionTransferEventReducer {
        timer: PlayerRegionTransferEvent,
    },
    PlayerRespawn {
        teleport_home: bool,
    },
    PlayerSetDefaultDeployable {
        request: PlayerSetDefaultDeployableRequest,
    },
    PlayerSetNameOutcomeEventReducer {
        timer: PlayerSetNameOutcomeEvent,
    },
    PlayerTeleportHome {
        request: PlayerTeleportHomeRequest,
    },
    PlayerTeleportHomeStart {
        request: PlayerTeleportHomeRequest,
    },
    PlayerTeleportWaystone {
        request: PlayerTeleportWaystoneRequest,
    },
    PlayerTeleportWaystoneStart {
        request: PlayerTeleportWaystoneRequest,
    },
    PlayerUseElevator {
        platform_entity_id: u64,
    },
    PlayerVoteAnswer {
        request: PlayerVoteAnswerRequest,
    },
    PlayerVoteConclude {
        timer: PlayerVoteConcludeTimer,
    },
    PocketSwapContents {
        request: PlayerPocketSwapContentsRequest,
    },
    PortalEnter {
        request: PlayerPortalEnterRequest,
    },
    ProcessInterModuleMessage {
        sender: u8,
        message: InterModuleMessage,
    },
    ProjectSiteAddMaterials {
        request: PlayerProjectSiteAddMaterialsRequest,
    },
    ProjectSiteAdvanceProject {
        request: PlayerProjectSiteAdvanceProjectRequest,
    },
    ProjectSiteAdvanceProjectStart {
        request: PlayerProjectSiteAdvanceProjectRequest,
    },
    ProjectSiteCancel {
        request: PlayerProjectSiteCancelRequest,
    },
    ProjectSitePlace {
        request: PlayerProjectSitePlaceRequest,
    },
    RegionPopuplationAgentLoop {
        timer: RegionPopulationLoopTimer,
    },
    RentAddListing {
        request: RentAddListingRequest,
    },
    RentAddTenant {
        request: RentAddTenantRequest,
    },
    RentCollectEvictionFee {
        rent_entity_id: u64,
    },
    RentCollectorAgentLoop {
        timer: RentCollectorLoopTimer,
    },
    RentDepositCoins {
        request: RentDepositCoinsRequest,
    },
    RentEvict {
        request: RentEvictRequest,
    },
    RentEvictTerm {
        timer: RentEvictTimer,
    },
    RentPurchase {
        request: RentPurchaseRequest,
    },
    RentRemoveTenant {
        request: RentRemoveTenantRequest,
    },
    RentSetDailyRate {
        request: RentSetDailyRateRequest,
    },
    RentTerminate {
        request: RentTerminateRequest,
    },
    RentUnlist {
        request: RentUnlistRequest,
    },
    ReportChatMessage {
        request: ReportPlayerChatMessage,
    },
    ReportPlayer {
        request: ReportPlayerMessage,
    },
    ResetChunkIndex,
    ResetChunkIndexWithDimension {
        timer: ResetChunkIndexTimer,
    },
    ResetMobileEntityPosition {
        timer: ResetMobileEntityTimer,
    },
    ResetOnboarding,
    ResourceSpawnScheduled {
        timer: ResourceSpawnTimer,
    },
    ResourcesRegen {
        timer: ResourcesRegenLoopTimer,
    },
    RespawnInteriorNpcs,
    RespawnResourceInChunk {
        timer: RespawnResourceInChunkTimer,
    },
    RetrieveLostItem {
        request: PlayerRetrieveLostItemRequest,
    },
    ScrollRead {
        request: PlayerScrollReadRequest,
    },
    SearchForClosestBuilding {
        building_description_ids: Vec<i32>,
    },
    SearchForClosestBuildingType {
        building_type_id: i32,
    },
    ServerTeleportPlayer {
        timer: TeleportPlayerTimer,
    },
    SetHome {
        request: PlayerSetHomeRequest,
    },
    SignIn {
        request: PlayerSignInRequest,
    },
    SignOut,
    Sleep {
        request: PlayerSleepRequest,
    },
    StageAchievementDesc {
        records: Vec<AchievementDesc>,
    },
    StageAlertDesc {
        records: Vec<AlertDesc>,
    },
    StageBiomeDesc {
        records: Vec<BiomeDesc>,
    },
    StageBuffDesc {
        records: Vec<BuffDesc>,
    },
    StageBuffTypeDesc {
        records: Vec<BuffTypeDesc>,
    },
    StageBuildingClaimDesc {
        records: Vec<BuildingClaimDesc>,
    },
    StageBuildingDesc {
        records: Vec<BuildingDesc>,
    },
    StageBuildingPortalDesc {
        records: Vec<BuildingPortalDesc>,
    },
    StageBuildingRepairsDesc {
        records: Vec<BuildingRepairsDesc>,
    },
    StageBuildingSpawnDesc {
        records: Vec<BuildingSpawnDesc>,
    },
    StageBuildingTypeDesc {
        records: Vec<BuildingTypeDesc>,
    },
    StageCargoDesc {
        records: Vec<CargoDesc>,
    },
    StageCharacterStatDesc {
        records: Vec<CharacterStatDesc>,
    },
    StageChestRarityDesc {
        records: Vec<ChestRarityDesc>,
    },
    StageClaimTechDesc {
        records: Vec<ClaimTechDesc>,
    },
    StageClaimTileCost {
        records: Vec<ClaimTileCost>,
    },
    StageClimbRequirementDesc {
        records: Vec<ClimbRequirementDesc>,
    },
    StageClothingDesc {
        records: Vec<ClothingDesc>,
    },
    StageCollectibleDesc {
        records: Vec<CollectibleDesc>,
    },
    StageCombatActionDesc {
        records: Vec<CombatActionDesc>,
    },
    StageConstructionRecipeDesc {
        records: Vec<ConstructionRecipeDesc>,
    },
    StageCraftingRecipeDesc {
        records: Vec<CraftingRecipeDesc>,
    },
    StageDeconstructionRecipeDesc {
        records: Vec<DeconstructionRecipeDesc>,
    },
    StageDeployableDesc {
        records: Vec<DeployableDesc>,
    },
    StageDistantVisibleEntityDesc {
        records: Vec<DistantVisibleEntityDesc>,
    },
    StageElevatorDesc {
        records: Vec<ElevatorDesc>,
    },
    StageEmoteDesc {
        records: Vec<EmoteDesc>,
    },
    StageEmpireColorsDesc {
        records: Vec<EmpireColorDesc>,
    },
    StageEmpireIconDesc {
        records: Vec<EmpireIconDesc>,
    },
    StageEmpireNotificationDesc {
        records: Vec<EmpireNotificationDesc>,
    },
    StageEmpireRankDesc {
        records: Vec<EmpireRankDesc>,
    },
    StageEmpireSuppliesDesc {
        records: Vec<EmpireSuppliesDesc>,
    },
    StageEmpireTerritoryDesc {
        records: Vec<EmpireTerritoryDesc>,
    },
    StageEnemyAiParamsDesc {
        records: Vec<EnemyAiParamsDesc>,
    },
    StageEnemyDesc {
        records: Vec<EnemyDesc>,
    },
    StageEnvironmentDebuffDesc {
        records: Vec<EnvironmentDebuffDesc>,
    },
    StageEquipmentDesc {
        records: Vec<EquipmentDesc>,
    },
    StageExtractionRecipeDesc {
        records: Vec<ExtractionRecipeDesc>,
    },
    StageFoodDesc {
        records: Vec<FoodDesc>,
    },
    StageGateDesc {
        records: Vec<GateDesc>,
    },
    StageHexiteExchangeEntryDesc {
        records: Vec<HexiteExchangeEntryDesc>,
    },
    StageInteriorEnvironmentDesc {
        records: Vec<InteriorEnvironmentDesc>,
    },
    StageInteriorInstanceDesc {
        records: Vec<InteriorInstanceDesc>,
    },
    StageInteriorNetworkDesc {
        records: Vec<InteriorNetworkDesc>,
    },
    StageInteriorPortalConnectionsDesc {
        records: Vec<InteriorPortalConnectionsDesc>,
    },
    StageInteriorShapeDesc {
        records: Vec<InteriorShapeDesc>,
    },
    StageInteriorSpawnDesc {
        records: Vec<InteriorSpawnDesc>,
    },
    StageItemConversionRecipeDesc {
        records: Vec<ItemConversionRecipeDesc>,
    },
    StageItemDesc {
        records: Vec<ItemDesc>,
    },
    StageItemListDesc {
        records: Vec<ItemListDesc>,
    },
    StageKnowledgeScrollDesc {
        records: Vec<KnowledgeScrollDesc>,
    },
    StageKnowledgeScrollTypeDesc {
        records: Vec<KnowledgeScrollTypeDesc>,
    },
    StageKnowledgeStatModifierDesc {
        records: Vec<KnowledgeStatModifierDesc>,
    },
    StageLootChestDesc {
        records: Vec<LootChestDesc>,
    },
    StageLootRarityDesc {
        records: Vec<LootRarityDesc>,
    },
    StageLootTableDesc {
        records: Vec<LootTableDesc>,
    },
    StageNpcDesc {
        records: Vec<NpcDesc>,
    },
    StageOnboardingRewardDesc {
        records: Vec<OnboardingRewardDesc>,
    },
    StageParametersDesc {
        records: Vec<ParametersDesc>,
    },
    StagePathfindingDesc {
        records: Vec<PathfindingDesc>,
    },
    StagePavingTileDesc {
        records: Vec<PavingTileDesc>,
    },
    StagePillarShapingDesc {
        records: Vec<PillarShapingDesc>,
    },
    StagePlayerActionDesc {
        records: Vec<PlayerActionDesc>,
    },
    StagePlayerHousingDesc {
        records: Vec<PlayerHousingDesc>,
    },
    StagePrivateParametersDesc {
        records: Vec<PrivateParametersDesc>,
    },
    StageResourceClumpDesc {
        records: Vec<ResourceClumpDesc>,
    },
    StageResourceDesc {
        records: Vec<ResourceDesc>,
    },
    StageResourceGrowthRecipeDesc {
        records: Vec<ResourceGrowthRecipeDesc>,
    },
    StageResourcePlacementRecipeDesc {
        records: Vec<ResourcePlacementRecipeDesc>,
    },
    StageSecondaryKnowledgeDesc {
        records: Vec<SecondaryKnowledgeDesc>,
    },
    StageSkillDesc {
        records: Vec<SkillDesc>,
    },
    StageTargetingMatrixDesc {
        records: Vec<TargetingMatrixDesc>,
    },
    StageTeleportItemDesc {
        records: Vec<TeleportItemDesc>,
    },
    StageTerraformRecipeDesc {
        records: Vec<TerraformRecipeDesc>,
    },
    StageToolDesc {
        records: Vec<ToolDesc>,
    },
    StageToolTypeDesc {
        records: Vec<ToolTypeDesc>,
    },
    StageTravelerTaskDesc {
        records: Vec<TravelerTaskDesc>,
    },
    StageTravelerTradeOrderDesc {
        records: Vec<TravelerTradeOrderDesc>,
    },
    StageWallDesc {
        records: Vec<WallDesc>,
    },
    StageWeaponDesc {
        records: Vec<WeaponDesc>,
    },
    StageWeaponTypeDesc {
        records: Vec<WeaponTypeDesc>,
    },
    StartAgents,
    StartGeneratingWorld {
        world_width: i32,
        world_height: i32,
        region_index: u8,
        region_count: u8,
    },
    StartOnboardingQuest {
        id: u16,
    },
    StarvingAgentLoop {
        timer: StarvingLoopTimer,
    },
    StopAgents,
    SynchronizeTime {
        client_time: f64,
    },
    TargetUpdate {
        request: TargetUpdateRequest,
    },
    TeleportationEnergyRegenAgentLoop {
        timer: TeleportationEnergyRegenLoopTimer,
    },
    Terraform {
        request: PlayerTerraformRequest,
    },
    TerraformCancel {
        request: PlayerTerraformCancelRequest,
    },
    TerraformSetFinalTarget {
        request: PlayerTerraformSetFinalTargetRequest,
    },
    TerraformStart {
        request: PlayerTerraformRequest,
    },
    TradeAccept {
        request: PlayerTradeAcceptRequest,
    },
    TradeAcceptSession {
        request: PlayerTradeAcceptSessionRequest,
    },
    TradeAddItem {
        request: PlayerTradeAddItemRequest,
    },
    TradeCancelServer {
        session_entity_id: u64,
        resolution_message: String,
    },
    TradeDecline {
        request: PlayerTradeDeclineRequest,
    },
    TradeDeclineSession {
        request: PlayerTradeDeclineSessionRequest,
    },
    TradeInitiateSession {
        request: PlayerTradeInitiateSessionRequest,
    },
    TradeRemoveItem {
        request: PlayerTradeRemoveItemRequest,
    },
    TradeSessionsAgentLoop {
        timer: TradeSessionLoopTimer,
    },
    TradeSwapPockets {
        request: PlayerTradeSwapPocketsRequest,
    },
    TransferPlayerDelayed {
        timer: TransferPlayerTimer,
    },
    TravelerTaskAgentLoop {
        timer: TravelerTaskLoopTimer,
    },
    UpdateScheduledTimersFromStaticData,
}

impl __sdk::InModule for Reducer {
    type Module = RemoteModule;
}

impl __sdk::Reducer for Reducer {
    fn reducer_name(&self) -> &'static str {
        match self {
            Reducer::AchievementClaim { .. } => "achievement_claim",
            Reducer::AcquireKnowledgeFromEntities { .. } => "acquire_knowledge_from_entities",
            Reducer::AdminAlpha3CompleteOnboarding { .. } => "admin_alpha3_complete_onboarding",
            Reducer::AdminAlpha3ResetOnboardingToFifthTempleQuest { .. } => {
                "admin_alpha3_reset_onboarding_to_fifth_temple_quest"
            }
            Reducer::AdminAlpha3ResetOnboardingToFirstExpandQuest { .. } => {
                "admin_alpha3_reset_onboarding_to_first_expand_quest"
            }
            Reducer::AdminAlpha3ResetOnboardingToFirstTempleQuest { .. } => {
                "admin_alpha3_reset_onboarding_to_first_temple_quest"
            }
            Reducer::AdminAlpha3ResetOnboardingToFourthExpandQuest { .. } => {
                "admin_alpha3_reset_onboarding_to_fourth_expand_quest"
            }
            Reducer::AdminAlpha3ResetOnboardingToFourthTempleQuest { .. } => {
                "admin_alpha3_reset_onboarding_to_fourth_temple_quest"
            }
            Reducer::AdminAlpha3ResetOnboardingToSecondExpandQuest { .. } => {
                "admin_alpha3_reset_onboarding_to_second_expand_quest"
            }
            Reducer::AdminAlpha3ResetOnboardingToSecondTempleQuest { .. } => {
                "admin_alpha3_reset_onboarding_to_second_temple_quest"
            }
            Reducer::AdminAlpha3ResetOnboardingToThirdExpandQuest { .. } => {
                "admin_alpha3_reset_onboarding_to_third_expand_quest"
            }
            Reducer::AdminAlpha3ResetOnboardingToThirdTempleQuest { .. } => {
                "admin_alpha3_reset_onboarding_to_third_temple_quest"
            }
            Reducer::AdminBroadcastMsgRegion { .. } => "admin_broadcast_msg_region",
            Reducer::AdminClearAllResources => "admin_clear_all_resources",
            Reducer::AdminCollapseRuin { .. } => "admin_collapse_ruin",
            Reducer::AdminCollapseRuins => "admin_collapse_ruins",
            Reducer::AdminCompleteAllPassiveCrafts => "admin_complete_all_passive_crafts",
            Reducer::AdminCountInventoryItems { .. } => "admin_count_inventory_items",
            Reducer::AdminDespawnOverworldEnemies => "admin_despawn_overworld_enemies",
            Reducer::AdminGrantCollectibles { .. } => "admin_grant_collectibles",
            Reducer::AdminResetAllHerdLocations => "admin_reset_all_herd_locations",
            Reducer::AdminResetHerdLocations { .. } => "admin_reset_herd_locations",
            Reducer::AdminResetOnboardingCompletely { .. } => "admin_reset_onboarding_completely",
            Reducer::AdminRestoreAllCollapsedRuins => "admin_restore_all_collapsed_ruins",
            Reducer::AdminRestorePlayerState { .. } => "admin_restore_player_state",
            Reducer::AdminRestorePlayerStateScheduled { .. } => {
                "admin_restore_player_state_scheduled"
            }
            Reducer::AdminSignOut { .. } => "admin_sign_out",
            Reducer::AdminSignOutAllRegion => "admin_sign_out_all_region",
            Reducer::AdminSignOutString { .. } => "admin_sign_out_string",
            Reducer::AdminUpdateLightSourceStates => "admin_update_light_source_states",
            Reducer::Attack { .. } => "attack",
            Reducer::AttackImpact { .. } => "attack_impact",
            Reducer::AttackScheduled { .. } => "attack_scheduled",
            Reducer::AttackStart { .. } => "attack_start",
            Reducer::AutoLogoutLoop { .. } => "auto_logout_loop",
            Reducer::BarterStallOrderAccept { .. } => "barter_stall_order_accept",
            Reducer::BarterStallOrderCreate { .. } => "barter_stall_order_create",
            Reducer::BarterStallOrderDelete { .. } => "barter_stall_order_delete",
            Reducer::BarterStallSetMarketModeEnabled { .. } => {
                "barter_stall_set_market_mode_enabled"
            }
            Reducer::BlueprintPlace { .. } => "blueprint_place",
            Reducer::BuildingDecayAgentLoop { .. } => "building_decay_agent_loop",
            Reducer::BuildingDeconstruct { .. } => "building_deconstruct",
            Reducer::BuildingDeconstructStart { .. } => "building_deconstruct_start",
            Reducer::BuildingDespawn { .. } => "building_despawn",
            Reducer::BuildingMove { .. } => "building_move",
            Reducer::BuildingRepair { .. } => "building_repair",
            Reducer::BuildingRepairStart { .. } => "building_repair_start",
            Reducer::BuildingSetNickname { .. } => "building_set_nickname",
            Reducer::BuildingSetSignText { .. } => "building_set_sign_text",
            Reducer::ChatPostMessage { .. } => "chat_post_message",
            Reducer::CheatBuildingMove { .. } => "cheat_building_move",
            Reducer::CheatBuildingPlace { .. } => "cheat_building_place",
            Reducer::CheatCargoGrant { .. } => "cheat_cargo_grant",
            Reducer::CheatClaimTakeOwnership { .. } => "cheat_claim_take_ownership",
            Reducer::CheatClaimTotemAddSupplies { .. } => "cheat_claim_totem_add_supplies",
            Reducer::CheatClaimTotemCompleteCurrentResearch { .. } => {
                "cheat_claim_totem_complete_current_research"
            }
            Reducer::CheatClaimTotemResearchAll { .. } => "cheat_claim_totem_research_all",
            Reducer::CheatClearBuffsAndDebuffs { .. } => "cheat_clear_buffs_and_debuffs",
            Reducer::CheatCompendiumPlaceEnemy { .. } => "cheat_compendium_place_enemy",
            Reducer::CheatCompendiumPlaceResource { .. } => "cheat_compendium_place_resource",
            Reducer::CheatDeleteItem { .. } => "cheat_delete_item",
            Reducer::CheatDeployableStore { .. } => "cheat_deployable_store",
            Reducer::CheatDiscoverMap { .. } => "cheat_discover_map",
            Reducer::CheatExperienceGrant { .. } => "cheat_experience_grant",
            Reducer::CheatGrantKnowledge { .. } => "cheat_grant_knowledge",
            Reducer::CheatGrantTeleportEnergy { .. } => "cheat_grant_teleport_energy",
            Reducer::CheatItemStackGrant { .. } => "cheat_item_stack_grant",
            Reducer::CheatItemStackGrantAndEquip { .. } => "cheat_item_stack_grant_and_equip",
            Reducer::CheatKill { .. } => "cheat_kill",
            Reducer::CheatPavingAddTile { .. } => "cheat_paving_add_tile",
            Reducer::CheatPavingDestroy { .. } => "cheat_paving_destroy",
            Reducer::CheatPillarShapingAddPillar { .. } => "cheat_pillar_shaping_add_pillar",
            Reducer::CheatPillarShapingDestroy { .. } => "cheat_pillar_shaping_destroy",
            Reducer::CheatProjectSiteAddAllMaterials { .. } => {
                "cheat_project_site_add_all_materials"
            }
            Reducer::CheatRemoveEntityBuilding { .. } => "cheat_remove_entity_building",
            Reducer::CheatRemoveEntityEnemy { .. } => "cheat_remove_entity_enemy",
            Reducer::CheatRemoveEntityResource { .. } => "cheat_remove_entity_resource",
            Reducer::CheatSetAiDebugState { .. } => "cheat_set_ai_debug_state",
            Reducer::CheatSpawnLootChest { .. } => "cheat_spawn_loot_chest",
            Reducer::CheatTeleportFloat { .. } => "cheat_teleport_float",
            Reducer::CheatTerraform { .. } => "cheat_terraform",
            Reducer::CheatToggleActiveCollectible { .. } => "cheat_toggle_active_collectible",
            Reducer::CheatWarp { .. } => "cheat_warp",
            Reducer::ClaimAddMember { .. } => "claim_add_member",
            Reducer::ClaimAddRecruitment { .. } => "claim_add_recruitment",
            Reducer::ClaimAddTile { .. } => "claim_add_tile",
            Reducer::ClaimApplyForRecruitment { .. } => "claim_apply_for_recruitment",
            Reducer::ClaimLeave { .. } => "claim_leave",
            Reducer::ClaimPurchaseSuppliesFromPlayer { .. } => {
                "claim_purchase_supplies_from_player"
            }
            Reducer::ClaimRemoveMember { .. } => "claim_remove_member",
            Reducer::ClaimRemoveRecruitment { .. } => "claim_remove_recruitment",
            Reducer::ClaimRemoveTile { .. } => "claim_remove_tile",
            Reducer::ClaimRename { .. } => "claim_rename",
            Reducer::ClaimResupply { .. } => "claim_resupply",
            Reducer::ClaimResupplyStart { .. } => "claim_resupply_start",
            Reducer::ClaimSetMemberPermissions { .. } => "claim_set_member_permissions",
            Reducer::ClaimSetPurchaseSupplyPrice { .. } => "claim_set_purchase_supply_price",
            Reducer::ClaimSetPurchaseSupplyThreshold { .. } => {
                "claim_set_purchase_supply_threshold"
            }
            Reducer::ClaimTakeOwnership { .. } => "claim_take_ownership",
            Reducer::ClaimTechCancel { .. } => "claim_tech_cancel",
            Reducer::ClaimTechLearn { .. } => "claim_tech_learn",
            Reducer::ClaimTechUnlockTech { .. } => "claim_tech_unlock_tech",
            Reducer::ClaimTransferOwnership { .. } => "claim_transfer_ownership",
            Reducer::ClaimWithdrawFromTreasury { .. } => "claim_withdraw_from_treasury",
            Reducer::ClearStagedStaticData => "clear_staged_static_data",
            Reducer::ClosedListingCollect { .. } => "closed_listing_collect",
            Reducer::CollectStatsReducer { .. } => "collect_stats_reducer",
            Reducer::CollectibleActivate { .. } => "collectible_activate",
            Reducer::CommitStagedStaticData => "commit_staged_static_data",
            Reducer::CompleteOnboardingQuest { .. } => "complete_onboarding_quest",
            Reducer::CompleteOnboardingState { .. } => "complete_onboarding_state",
            Reducer::ConvertCollectibleToDeed { .. } => "convert_collectible_to_deed",
            Reducer::ConvertDeedToCollectible { .. } => "convert_deed_to_collectible",
            Reducer::CraftCancel { .. } => "craft_cancel",
            Reducer::CraftCollect { .. } => "craft_collect",
            Reducer::CraftCollectAll { .. } => "craft_collect_all",
            Reducer::CraftContinue { .. } => "craft_continue",
            Reducer::CraftContinueStart { .. } => "craft_continue_start",
            Reducer::CraftInitiate { .. } => "craft_initiate",
            Reducer::CraftInitiateStart { .. } => "craft_initiate_start",
            Reducer::CurrentVersion => "current_version",
            Reducer::DayNightAgentLoop { .. } => "day_night_agent_loop",
            Reducer::DeleteAllNpcs => "delete_all_npcs",
            Reducer::DeployableDeploy { .. } => "deployable_deploy",
            Reducer::DeployableDeployStart { .. } => "deployable_deploy_start",
            Reducer::DeployableDismount { .. } => "deployable_dismount",
            Reducer::DeployableDismountScheduled { .. } => "deployable_dismount_scheduled",
            Reducer::DeployableMount { .. } => "deployable_mount",
            Reducer::DeployableMove { .. } => "deployable_move",
            Reducer::DeployableMoveOffClaim { .. } => "deployable_move_off_claim",
            Reducer::DeployableStore { .. } => "deployable_store",
            Reducer::DeployableStoreStart { .. } => "deployable_store_start",
            Reducer::DestroyDimensionNetwork { .. } => "destroy_dimension_network",
            Reducer::DevDeleteWorld => "dev_delete_world",
            Reducer::DiscoverEntities { .. } => "discover_entities",
            Reducer::DroppedInventoryDespawn { .. } => "dropped_inventory_despawn",
            Reducer::DroppedInventoryLoseOwnership { .. } => "dropped_inventory_lose_ownership",
            Reducer::DuelAgentTimerLoop { .. } => "duel_agent_timer_loop",
            Reducer::DuelDespawn { .. } => "duel_despawn",
            Reducer::Eat { .. } => "eat",
            Reducer::Emote { .. } => "emote",
            Reducer::EmoteStart { .. } => "emote_start",
            Reducer::EmpireAddSiegeSupplies { .. } => "empire_add_siege_supplies",
            Reducer::EmpireClaimJoin { .. } => "empire_claim_join",
            Reducer::EmpireCollectHexiteCapsule { .. } => "empire_collect_hexite_capsule",
            Reducer::EmpireDeploySiegeEngine { .. } => "empire_deploy_siege_engine",
            Reducer::EmpireDeploySiegeEngineStart { .. } => "empire_deploy_siege_engine_start",
            Reducer::EmpireQueueSupplies { .. } => "empire_queue_supplies",
            Reducer::EmpireResupplyNode { .. } => "empire_resupply_node",
            Reducer::EmpireResupplyNodeStart { .. } => "empire_resupply_node_start",
            Reducer::EmpireSiegeDepletedWatchtower { .. } => "empire_siege_depleted_watchtower",
            Reducer::EndGracePeriod { .. } => "end_grace_period",
            Reducer::EnemyClearAggro { .. } => "enemy_clear_aggro",
            Reducer::EnemyDespawn { .. } => "enemy_despawn",
            Reducer::EnemyDespawnFromMobMonitor { .. } => "enemy_despawn_from_mob_monitor",
            Reducer::EnemyDespawnFromMobMonitorBatch { .. } => {
                "enemy_despawn_from_mob_monitor_batch"
            }
            Reducer::EnemyMove { .. } => "enemy_move",
            Reducer::EnemyMoveBatch { .. } => "enemy_move_batch",
            Reducer::EnemyRegenAgentLoop { .. } => "enemy_regen_agent_loop",
            Reducer::EnemySetHealth { .. } => "enemy_set_health",
            Reducer::EnemySetHealthBatch { .. } => "enemy_set_health_batch",
            Reducer::EnemySpawn { .. } => "enemy_spawn",
            Reducer::EnemySpawnBatch { .. } => "enemy_spawn_batch",
            Reducer::EnemySpawnLoot { .. } => "enemy_spawn_loot",
            Reducer::EnvironmentDebuffAgentLoop { .. } => "environment_debuff_agent_loop",
            Reducer::EquipmentAdd { .. } => "equipment_add",
            Reducer::EquipmentRemove { .. } => "equipment_remove",
            Reducer::Extract { .. } => "extract",
            Reducer::ExtractStart { .. } => "extract_start",
            Reducer::ForceStartAgents => "force_start_agents",
            Reducer::GenerateDevIsland => "generate_dev_island",
            Reducer::GenerateFlatWorld => "generate_flat_world",
            Reducer::GenerateWorld { .. } => "generate_world",
            Reducer::GrowthAgentLoop { .. } => "growth_agent_loop",
            Reducer::HideDeployable { .. } => "hide_deployable",
            Reducer::IdentityConnected => "identity_connected",
            Reducer::IdentityDisconnected => "identity_disconnected",
            Reducer::ImportAchievementDesc { .. } => "import_achievement_desc",
            Reducer::ImportActiveBuffState { .. } => "import_active_buff_state",
            Reducer::ImportAdminBroadcast { .. } => "import_admin_broadcast",
            Reducer::ImportAlertDesc { .. } => "import_alert_desc",
            Reducer::ImportAlertState { .. } => "import_alert_state",
            Reducer::ImportAttackOutcomeState { .. } => "import_attack_outcome_state",
            Reducer::ImportBiomeDesc { .. } => "import_biome_desc",
            Reducer::ImportBuffDesc { .. } => "import_buff_desc",
            Reducer::ImportBuffTypeDesc { .. } => "import_buff_type_desc",
            Reducer::ImportBuildingClaimDesc { .. } => "import_building_claim_desc",
            Reducer::ImportBuildingDesc { .. } => "import_building_desc",
            Reducer::ImportBuildingPortalDesc { .. } => "import_building_portal_desc",
            Reducer::ImportBuildingRepairsDesc { .. } => "import_building_repairs_desc",
            Reducer::ImportBuildingSpawnDesc { .. } => "import_building_spawn_desc",
            Reducer::ImportBuildingState { .. } => "import_building_state",
            Reducer::ImportBuildingTypeDesc { .. } => "import_building_type_desc",
            Reducer::ImportCargoDesc { .. } => "import_cargo_desc",
            Reducer::ImportCharacterStatDesc { .. } => "import_character_stat_desc",
            Reducer::ImportCharacterStatsState { .. } => "import_character_stats_state",
            Reducer::ImportChatMessageState { .. } => "import_chat_message_state",
            Reducer::ImportChestRarityDesc { .. } => "import_chest_rarity_desc",
            Reducer::ImportClaimLocalState { .. } => "import_claim_local_state",
            Reducer::ImportClaimRecruitmentState { .. } => "import_claim_recruitment_state",
            Reducer::ImportClaimState { .. } => "import_claim_state",
            Reducer::ImportClaimTechDesc { .. } => "import_claim_tech_desc",
            Reducer::ImportClaimTechState { .. } => "import_claim_tech_state",
            Reducer::ImportClaimTileCost { .. } => "import_claim_tile_cost",
            Reducer::ImportClaimTileState { .. } => "import_claim_tile_state",
            Reducer::ImportClimbRequirementDesc { .. } => "import_climb_requirement_desc",
            Reducer::ImportClothingDesc { .. } => "import_clothing_desc",
            Reducer::ImportCollectibleDesc { .. } => "import_collectible_desc",
            Reducer::ImportCombatActionDesc { .. } => "import_combat_action_desc",
            Reducer::ImportCombatState { .. } => "import_combat_state",
            Reducer::ImportConfig { .. } => "import_config",
            Reducer::ImportConstructionRecipeDesc { .. } => "import_construction_recipe_desc",
            Reducer::ImportCraftingRecipeDesc { .. } => "import_crafting_recipe_desc",
            Reducer::ImportDeconstructionRecipeDesc { .. } => "import_deconstruction_recipe_desc",
            Reducer::ImportDeployableDesc { .. } => "import_deployable_desc",
            Reducer::ImportDeployableState { .. } => "import_deployable_state",
            Reducer::ImportDimensionDescriptionState { .. } => "import_dimension_description_state",
            Reducer::ImportDimensionNetworkDescriptionState { .. } => {
                "import_dimension_network_description_state"
            }
            Reducer::ImportDistantVisibleEntityDesc { .. } => "import_distant_visible_entity_desc",
            Reducer::ImportDroppedInventoryState { .. } => "import_dropped_inventory_state",
            Reducer::ImportElevatorDesc { .. } => "import_elevator_desc",
            Reducer::ImportEmoteDesc { .. } => "import_emote_desc",
            Reducer::ImportEmpireColorsDesc { .. } => "import_empire_colors_desc",
            Reducer::ImportEmpireIconDesc { .. } => "import_empire_icon_desc",
            Reducer::ImportEmpireNotificationDesc { .. } => "import_empire_notification_desc",
            Reducer::ImportEmpireRankDesc { .. } => "import_empire_rank_desc",
            Reducer::ImportEmpireSuppliesDesc { .. } => "import_empire_supplies_desc",
            Reducer::ImportEmpireTerritoryDesc { .. } => "import_empire_territory_desc",
            Reducer::ImportEnemyAiParamsDesc { .. } => "import_enemy_ai_params_desc",
            Reducer::ImportEnemyDesc { .. } => "import_enemy_desc",
            Reducer::ImportEnemyState { .. } => "import_enemy_state",
            Reducer::ImportEnvironmentDebuffDesc { .. } => "import_environment_debuff_desc",
            Reducer::ImportEquipmentDesc { .. } => "import_equipment_desc",
            Reducer::ImportEquipmentState { .. } => "import_equipment_state",
            Reducer::ImportExperienceState { .. } => "import_experience_state",
            Reducer::ImportExplorationChunksState { .. } => "import_exploration_chunks_state",
            Reducer::ImportExtractionRecipeDesc { .. } => "import_extraction_recipe_desc",
            Reducer::ImportFoodDesc { .. } => "import_food_desc",
            Reducer::ImportFootprintTileState { .. } => "import_footprint_tile_state",
            Reducer::ImportGateDesc { .. } => "import_gate_desc",
            Reducer::ImportGlobals { .. } => "import_globals",
            Reducer::ImportGrowthState { .. } => "import_growth_state",
            Reducer::ImportHealthState { .. } => "import_health_state",
            Reducer::ImportHerdCache { .. } => "import_herd_cache",
            Reducer::ImportHexiteExchangeEntryDesc { .. } => "import_hexite_exchange_entry_desc",
            Reducer::ImportIdentityRole { .. } => "import_identity_role",
            Reducer::ImportInteriorCollapseTriggerState { .. } => {
                "import_interior_collapse_trigger_state"
            }
            Reducer::ImportInteriorEnvironmentDesc { .. } => "import_interior_environment_desc",
            Reducer::ImportInteriorInstanceDesc { .. } => "import_interior_instance_desc",
            Reducer::ImportInteriorNetworkDesc { .. } => "import_interior_network_desc",
            Reducer::ImportInteriorPortalConnectionsDesc { .. } => {
                "import_interior_portal_connections_desc"
            }
            Reducer::ImportInteriorShapeDesc { .. } => "import_interior_shape_desc",
            Reducer::ImportInteriorSpawnDesc { .. } => "import_interior_spawn_desc",
            Reducer::ImportInventoryState { .. } => "import_inventory_state",
            Reducer::ImportItemConversionRecipeDesc { .. } => "import_item_conversion_recipe_desc",
            Reducer::ImportItemDesc { .. } => "import_item_desc",
            Reducer::ImportItemListDesc { .. } => "import_item_list_desc",
            Reducer::ImportKnowledgeAchievementState { .. } => "import_knowledge_achievement_state",
            Reducer::ImportKnowledgeBattleActionState { .. } => {
                "import_knowledge_battle_action_state"
            }
            Reducer::ImportKnowledgeBuildingState { .. } => "import_knowledge_building_state",
            Reducer::ImportKnowledgeCargoState { .. } => "import_knowledge_cargo_state",
            Reducer::ImportKnowledgeConstructionState { .. } => {
                "import_knowledge_construction_state"
            }
            Reducer::ImportKnowledgeCraftState { .. } => "import_knowledge_craft_state",
            Reducer::ImportKnowledgeDeployableState { .. } => "import_knowledge_deployable_state",
            Reducer::ImportKnowledgeEnemyState { .. } => "import_knowledge_enemy_state",
            Reducer::ImportKnowledgeExtractState { .. } => "import_knowledge_extract_state",
            Reducer::ImportKnowledgeItemState { .. } => "import_knowledge_item_state",
            Reducer::ImportKnowledgeLoreState { .. } => "import_knowledge_lore_state",
            Reducer::ImportKnowledgeNpcState { .. } => "import_knowledge_npc_state",
            Reducer::ImportKnowledgePavingState { .. } => "import_knowledge_paving_state",
            Reducer::ImportKnowledgePillarShapingState { .. } => {
                "import_knowledge_pillar_shaping_state"
            }
            Reducer::ImportKnowledgeResourcePlacementState { .. } => {
                "import_knowledge_resource_placement_state"
            }
            Reducer::ImportKnowledgeResourceState { .. } => "import_knowledge_resource_state",
            Reducer::ImportKnowledgeRuinsState { .. } => "import_knowledge_ruins_state",
            Reducer::ImportKnowledgeScrollDesc { .. } => "import_knowledge_scroll_desc",
            Reducer::ImportKnowledgeScrollTypeDesc { .. } => "import_knowledge_scroll_type_desc",
            Reducer::ImportKnowledgeSecondaryState { .. } => "import_knowledge_secondary_state",
            Reducer::ImportKnowledgeStatModifierDesc { .. } => {
                "import_knowledge_stat_modifier_desc"
            }
            Reducer::ImportKnowledgeVaultState { .. } => "import_knowledge_vault_state",
            Reducer::ImportLocationCache { .. } => "import_location_cache",
            Reducer::ImportLocationState { .. } => "import_location_state",
            Reducer::ImportLootChestDesc { .. } => "import_loot_chest_desc",
            Reducer::ImportLootChestState { .. } => "import_loot_chest_state",
            Reducer::ImportLootRarityDesc { .. } => "import_loot_rarity_desc",
            Reducer::ImportLootTableDesc { .. } => "import_loot_table_desc",
            Reducer::ImportMobileEntityState { .. } => "import_mobile_entity_state",
            Reducer::ImportMountingState { .. } => "import_mounting_state",
            Reducer::ImportNpcDesc { .. } => "import_npc_desc",
            Reducer::ImportNpcState { .. } => "import_npc_state",
            Reducer::ImportOnboardingRewardDesc { .. } => "import_onboarding_reward_desc",
            Reducer::ImportOnboardingState { .. } => "import_onboarding_state",
            Reducer::ImportParametersDesc { .. } => "import_parameters_desc",
            Reducer::ImportPathfindingDesc { .. } => "import_pathfinding_desc",
            Reducer::ImportPavedTileState { .. } => "import_paved_tile_state",
            Reducer::ImportPavingTileDesc { .. } => "import_paving_tile_desc",
            Reducer::ImportPillarShapingDesc { .. } => "import_pillar_shaping_desc",
            Reducer::ImportPlayerActionDesc { .. } => "import_player_action_desc",
            Reducer::ImportPlayerActionState { .. } => "import_player_action_state",
            Reducer::ImportPlayerHousingDesc { .. } => "import_player_housing_desc",
            Reducer::ImportPlayerPrefsState { .. } => "import_player_prefs_state",
            Reducer::ImportPlayerState { .. } => "import_player_state",
            Reducer::ImportPortalState { .. } => "import_portal_state",
            Reducer::ImportPrivateParametersDesc { .. } => "import_private_parameters_desc",
            Reducer::ImportProgressiveActionState { .. } => "import_progressive_action_state",
            Reducer::ImportProjectSiteState { .. } => "import_project_site_state",
            Reducer::ImportRentState { .. } => "import_rent_state",
            Reducer::ImportResourceClumpDesc { .. } => "import_resource_clump_desc",
            Reducer::ImportResourceCount { .. } => "import_resource_count",
            Reducer::ImportResourceDesc { .. } => "import_resource_desc",
            Reducer::ImportResourceGrowthRecipeDesc { .. } => "import_resource_growth_recipe_desc",
            Reducer::ImportResourcePlacementRecipeDesc { .. } => {
                "import_resource_placement_recipe_desc"
            }
            Reducer::ImportResourceState { .. } => "import_resource_state",
            Reducer::ImportResourcesLog { .. } => "import_resources_log",
            Reducer::ImportSatiationState { .. } => "import_satiation_state",
            Reducer::ImportSecondaryKnowledgeDesc { .. } => "import_secondary_knowledge_desc",
            Reducer::ImportServerIdentity { .. } => "import_server_identity",
            Reducer::ImportSignedInPlayerState { .. } => "import_signed_in_player_state",
            Reducer::ImportSkillDesc { .. } => "import_skill_desc",
            Reducer::ImportStaminaState { .. } => "import_stamina_state",
            Reducer::ImportTargetState { .. } => "import_target_state",
            Reducer::ImportTargetableState { .. } => "import_targetable_state",
            Reducer::ImportTargetingMatrixDesc { .. } => "import_targeting_matrix_desc",
            Reducer::ImportTeleportItemDesc { .. } => "import_teleport_item_desc",
            Reducer::ImportTerraformRecipeDesc { .. } => "import_terraform_recipe_desc",
            Reducer::ImportTerrainChunkState { .. } => "import_terrain_chunk_state",
            Reducer::ImportToolDesc { .. } => "import_tool_desc",
            Reducer::ImportToolTypeDesc { .. } => "import_tool_type_desc",
            Reducer::ImportTradeOrderState { .. } => "import_trade_order_state",
            Reducer::ImportTradeSessionState { .. } => "import_trade_session_state",
            Reducer::ImportTravelerTaskDesc { .. } => "import_traveler_task_desc",
            Reducer::ImportTravelerTradeOrderDesc { .. } => "import_traveler_trade_order_desc",
            Reducer::ImportUserModerationState { .. } => "import_user_moderation_state",
            Reducer::ImportUserState { .. } => "import_user_state",
            Reducer::ImportVaultState { .. } => "import_vault_state",
            Reducer::ImportWallDesc { .. } => "import_wall_desc",
            Reducer::ImportWeaponDesc { .. } => "import_weapon_desc",
            Reducer::ImportWeaponTypeDesc { .. } => "import_weapon_type_desc",
            Reducer::ImportWorldRegionNameState { .. } => "import_world_region_name_state",
            Reducer::ImportWorldRegionState { .. } => "import_world_region_state",
            Reducer::InsertResourcesLog { .. } => "insert_resources_log",
            Reducer::InsertTerrainChunk { .. } => "insert_terrain_chunk",
            Reducer::InteriorSetCollapsed { .. } => "interior_set_collapsed",
            Reducer::InteriorSetCollapsedScheduled { .. } => "interior_set_collapsed_scheduled",
            Reducer::InventoryCreatePersonal { .. } => "inventory_create_personal",
            Reducer::InventorySort { .. } => "inventory_sort",
            Reducer::ItemConvert { .. } => "item_convert",
            Reducer::ItemConvertStart { .. } => "item_convert_start",
            Reducer::ItemDrop { .. } => "item_drop",
            Reducer::ItemPickUp { .. } => "item_pick_up",
            Reducer::ItemStackMove { .. } => "item_stack_move",
            Reducer::ItemStackMoveAll { .. } => "item_stack_move_all",
            Reducer::ItemStackSplit { .. } => "item_stack_split",
            Reducer::ItemUse { .. } => "item_use",
            Reducer::ItemUseStart { .. } => "item_use_start",
            Reducer::LoadConfig { .. } => "load_config",
            Reducer::LogClaimMemberLeaderboard => "log_claim_member_leaderboard",
            Reducer::LogClaimTierLeaderboard => "log_claim_tier_leaderboard",
            Reducer::LootChestDespawn { .. } => "loot_chest_despawn",
            Reducer::LootChestSpawn { .. } => "loot_chest_spawn",
            Reducer::NpcAiAgentLoop { .. } => "npc_ai_agent_loop",
            Reducer::OnDurabilityZero { .. } => "on_durability_zero",
            Reducer::OnInterModuleMessageProcessed { .. } => "on_inter_module_message_processed",
            Reducer::OrderCancel { .. } => "order_cancel",
            Reducer::OrderCollect { .. } => "order_collect",
            Reducer::OrderEditBuyOrder { .. } => "order_edit_buy_order",
            Reducer::OrderEditSellOrder { .. } => "order_edit_sell_order",
            Reducer::OrderPostBuyOrder { .. } => "order_post_buy_order",
            Reducer::OrderPostSellOrder { .. } => "order_post_sell_order",
            Reducer::PassiveCraftCancel { .. } => "passive_craft_cancel",
            Reducer::PassiveCraftCollect { .. } => "passive_craft_collect",
            Reducer::PassiveCraftCollectAll { .. } => "passive_craft_collect_all",
            Reducer::PassiveCraftProcess { .. } => "passive_craft_process",
            Reducer::PassiveCraftQueue { .. } => "passive_craft_queue",
            Reducer::PausePlayTimer { .. } => "pause_play_timer",
            Reducer::PavingDestroyTile { .. } => "paving_destroy_tile",
            Reducer::PavingDestroyTileStart { .. } => "paving_destroy_tile_start",
            Reducer::PavingPlaceTile { .. } => "paving_place_tile",
            Reducer::PavingPlaceTileStart { .. } => "paving_place_tile_start",
            Reducer::PermissionEdit { .. } => "permission_edit",
            Reducer::PillarShapingDestroy { .. } => "pillar_shaping_destroy",
            Reducer::PillarShapingDestroyStart { .. } => "pillar_shaping_destroy_start",
            Reducer::PillarShapingPlacePillar { .. } => "pillar_shaping_place_pillar",
            Reducer::PillarShapingPlacePillarStart { .. } => "pillar_shaping_place_pillar_start",
            Reducer::PlayerActionCancel { .. } => "player_action_cancel",
            Reducer::PlayerCancelRegionTransfer => "player_cancel_region_transfer",
            Reducer::PlayerClearActionState { .. } => "player_clear_action_state",
            Reducer::PlayerClimb { .. } => "player_climb",
            Reducer::PlayerClimbStart { .. } => "player_climb_start",
            Reducer::PlayerCompleteTask { .. } => "player_complete_task",
            Reducer::PlayerDeathStart { .. } => "player_death_start",
            Reducer::PlayerDismissAlert { .. } => "player_dismiss_alert",
            Reducer::PlayerDuelInitiate { .. } => "player_duel_initiate",
            Reducer::PlayerElevatorArrive { .. } => "player_elevator_arrive",
            Reducer::PlayerHousingChangeEntrance { .. } => "player_housing_change_entrance",
            Reducer::PlayerHousingEnter { .. } => "player_housing_enter",
            Reducer::PlayerHousingEvictPlayer { .. } => "player_housing_evict_player",
            Reducer::PlayerHousingEvictPlayerComplete { .. } => {
                "player_housing_evict_player_complete"
            }
            Reducer::PlayerHousingIncomeAgentLoop { .. } => "player_housing_income_agent_loop",
            Reducer::PlayerHousingRequestAccess { .. } => "player_housing_request_access",
            Reducer::PlayerHousingUpdate { .. } => "player_housing_update",
            Reducer::PlayerMove { .. } => "player_move",
            Reducer::PlayerNotificationEventReducer { .. } => "player_notification_event_reducer",
            Reducer::PlayerQueueJoin => "player_queue_join",
            Reducer::PlayerQueueLeave => "player_queue_leave",
            Reducer::PlayerRegenAgentLoop { .. } => "player_regen_agent_loop",
            Reducer::PlayerRegionCrossover => "player_region_crossover",
            Reducer::PlayerRegionTransferEventReducer { .. } => {
                "player_region_transfer_event_reducer"
            }
            Reducer::PlayerRespawn { .. } => "player_respawn",
            Reducer::PlayerSetDefaultDeployable { .. } => "player_set_default_deployable",
            Reducer::PlayerSetNameOutcomeEventReducer { .. } => {
                "player_set_name_outcome_event_reducer"
            }
            Reducer::PlayerTeleportHome { .. } => "player_teleport_home",
            Reducer::PlayerTeleportHomeStart { .. } => "player_teleport_home_start",
            Reducer::PlayerTeleportWaystone { .. } => "player_teleport_waystone",
            Reducer::PlayerTeleportWaystoneStart { .. } => "player_teleport_waystone_start",
            Reducer::PlayerUseElevator { .. } => "player_use_elevator",
            Reducer::PlayerVoteAnswer { .. } => "player_vote_answer",
            Reducer::PlayerVoteConclude { .. } => "player_vote_conclude",
            Reducer::PocketSwapContents { .. } => "pocket_swap_contents",
            Reducer::PortalEnter { .. } => "portal_enter",
            Reducer::ProcessInterModuleMessage { .. } => "process_inter_module_message",
            Reducer::ProjectSiteAddMaterials { .. } => "project_site_add_materials",
            Reducer::ProjectSiteAdvanceProject { .. } => "project_site_advance_project",
            Reducer::ProjectSiteAdvanceProjectStart { .. } => "project_site_advance_project_start",
            Reducer::ProjectSiteCancel { .. } => "project_site_cancel",
            Reducer::ProjectSitePlace { .. } => "project_site_place",
            Reducer::RegionPopuplationAgentLoop { .. } => "region_popuplation_agent_loop",
            Reducer::RentAddListing { .. } => "rent_add_listing",
            Reducer::RentAddTenant { .. } => "rent_add_tenant",
            Reducer::RentCollectEvictionFee { .. } => "rent_collect_eviction_fee",
            Reducer::RentCollectorAgentLoop { .. } => "rent_collector_agent_loop",
            Reducer::RentDepositCoins { .. } => "rent_deposit_coins",
            Reducer::RentEvict { .. } => "rent_evict",
            Reducer::RentEvictTerm { .. } => "rent_evict_term",
            Reducer::RentPurchase { .. } => "rent_purchase",
            Reducer::RentRemoveTenant { .. } => "rent_remove_tenant",
            Reducer::RentSetDailyRate { .. } => "rent_set_daily_rate",
            Reducer::RentTerminate { .. } => "rent_terminate",
            Reducer::RentUnlist { .. } => "rent_unlist",
            Reducer::ReportChatMessage { .. } => "report_chat_message",
            Reducer::ReportPlayer { .. } => "report_player",
            Reducer::ResetChunkIndex => "reset_chunk_index",
            Reducer::ResetChunkIndexWithDimension { .. } => "reset_chunk_index_with_dimension",
            Reducer::ResetMobileEntityPosition { .. } => "reset_mobile_entity_position",
            Reducer::ResetOnboarding => "reset_onboarding",
            Reducer::ResourceSpawnScheduled { .. } => "resource_spawn_scheduled",
            Reducer::ResourcesRegen { .. } => "resources_regen",
            Reducer::RespawnInteriorNpcs => "respawn_interior_npcs",
            Reducer::RespawnResourceInChunk { .. } => "respawn_resource_in_chunk",
            Reducer::RetrieveLostItem { .. } => "retrieve_lost_item",
            Reducer::ScrollRead { .. } => "scroll_read",
            Reducer::SearchForClosestBuilding { .. } => "search_for_closest_building",
            Reducer::SearchForClosestBuildingType { .. } => "search_for_closest_building_type",
            Reducer::ServerTeleportPlayer { .. } => "server_teleport_player",
            Reducer::SetHome { .. } => "set_home",
            Reducer::SignIn { .. } => "sign_in",
            Reducer::SignOut => "sign_out",
            Reducer::Sleep { .. } => "sleep",
            Reducer::StageAchievementDesc { .. } => "stage_achievement_desc",
            Reducer::StageAlertDesc { .. } => "stage_alert_desc",
            Reducer::StageBiomeDesc { .. } => "stage_biome_desc",
            Reducer::StageBuffDesc { .. } => "stage_buff_desc",
            Reducer::StageBuffTypeDesc { .. } => "stage_buff_type_desc",
            Reducer::StageBuildingClaimDesc { .. } => "stage_building_claim_desc",
            Reducer::StageBuildingDesc { .. } => "stage_building_desc",
            Reducer::StageBuildingPortalDesc { .. } => "stage_building_portal_desc",
            Reducer::StageBuildingRepairsDesc { .. } => "stage_building_repairs_desc",
            Reducer::StageBuildingSpawnDesc { .. } => "stage_building_spawn_desc",
            Reducer::StageBuildingTypeDesc { .. } => "stage_building_type_desc",
            Reducer::StageCargoDesc { .. } => "stage_cargo_desc",
            Reducer::StageCharacterStatDesc { .. } => "stage_character_stat_desc",
            Reducer::StageChestRarityDesc { .. } => "stage_chest_rarity_desc",
            Reducer::StageClaimTechDesc { .. } => "stage_claim_tech_desc",
            Reducer::StageClaimTileCost { .. } => "stage_claim_tile_cost",
            Reducer::StageClimbRequirementDesc { .. } => "stage_climb_requirement_desc",
            Reducer::StageClothingDesc { .. } => "stage_clothing_desc",
            Reducer::StageCollectibleDesc { .. } => "stage_collectible_desc",
            Reducer::StageCombatActionDesc { .. } => "stage_combat_action_desc",
            Reducer::StageConstructionRecipeDesc { .. } => "stage_construction_recipe_desc",
            Reducer::StageCraftingRecipeDesc { .. } => "stage_crafting_recipe_desc",
            Reducer::StageDeconstructionRecipeDesc { .. } => "stage_deconstruction_recipe_desc",
            Reducer::StageDeployableDesc { .. } => "stage_deployable_desc",
            Reducer::StageDistantVisibleEntityDesc { .. } => "stage_distant_visible_entity_desc",
            Reducer::StageElevatorDesc { .. } => "stage_elevator_desc",
            Reducer::StageEmoteDesc { .. } => "stage_emote_desc",
            Reducer::StageEmpireColorsDesc { .. } => "stage_empire_colors_desc",
            Reducer::StageEmpireIconDesc { .. } => "stage_empire_icon_desc",
            Reducer::StageEmpireNotificationDesc { .. } => "stage_empire_notification_desc",
            Reducer::StageEmpireRankDesc { .. } => "stage_empire_rank_desc",
            Reducer::StageEmpireSuppliesDesc { .. } => "stage_empire_supplies_desc",
            Reducer::StageEmpireTerritoryDesc { .. } => "stage_empire_territory_desc",
            Reducer::StageEnemyAiParamsDesc { .. } => "stage_enemy_ai_params_desc",
            Reducer::StageEnemyDesc { .. } => "stage_enemy_desc",
            Reducer::StageEnvironmentDebuffDesc { .. } => "stage_environment_debuff_desc",
            Reducer::StageEquipmentDesc { .. } => "stage_equipment_desc",
            Reducer::StageExtractionRecipeDesc { .. } => "stage_extraction_recipe_desc",
            Reducer::StageFoodDesc { .. } => "stage_food_desc",
            Reducer::StageGateDesc { .. } => "stage_gate_desc",
            Reducer::StageHexiteExchangeEntryDesc { .. } => "stage_hexite_exchange_entry_desc",
            Reducer::StageInteriorEnvironmentDesc { .. } => "stage_interior_environment_desc",
            Reducer::StageInteriorInstanceDesc { .. } => "stage_interior_instance_desc",
            Reducer::StageInteriorNetworkDesc { .. } => "stage_interior_network_desc",
            Reducer::StageInteriorPortalConnectionsDesc { .. } => {
                "stage_interior_portal_connections_desc"
            }
            Reducer::StageInteriorShapeDesc { .. } => "stage_interior_shape_desc",
            Reducer::StageInteriorSpawnDesc { .. } => "stage_interior_spawn_desc",
            Reducer::StageItemConversionRecipeDesc { .. } => "stage_item_conversion_recipe_desc",
            Reducer::StageItemDesc { .. } => "stage_item_desc",
            Reducer::StageItemListDesc { .. } => "stage_item_list_desc",
            Reducer::StageKnowledgeScrollDesc { .. } => "stage_knowledge_scroll_desc",
            Reducer::StageKnowledgeScrollTypeDesc { .. } => "stage_knowledge_scroll_type_desc",
            Reducer::StageKnowledgeStatModifierDesc { .. } => "stage_knowledge_stat_modifier_desc",
            Reducer::StageLootChestDesc { .. } => "stage_loot_chest_desc",
            Reducer::StageLootRarityDesc { .. } => "stage_loot_rarity_desc",
            Reducer::StageLootTableDesc { .. } => "stage_loot_table_desc",
            Reducer::StageNpcDesc { .. } => "stage_npc_desc",
            Reducer::StageOnboardingRewardDesc { .. } => "stage_onboarding_reward_desc",
            Reducer::StageParametersDesc { .. } => "stage_parameters_desc",
            Reducer::StagePathfindingDesc { .. } => "stage_pathfinding_desc",
            Reducer::StagePavingTileDesc { .. } => "stage_paving_tile_desc",
            Reducer::StagePillarShapingDesc { .. } => "stage_pillar_shaping_desc",
            Reducer::StagePlayerActionDesc { .. } => "stage_player_action_desc",
            Reducer::StagePlayerHousingDesc { .. } => "stage_player_housing_desc",
            Reducer::StagePrivateParametersDesc { .. } => "stage_private_parameters_desc",
            Reducer::StageResourceClumpDesc { .. } => "stage_resource_clump_desc",
            Reducer::StageResourceDesc { .. } => "stage_resource_desc",
            Reducer::StageResourceGrowthRecipeDesc { .. } => "stage_resource_growth_recipe_desc",
            Reducer::StageResourcePlacementRecipeDesc { .. } => {
                "stage_resource_placement_recipe_desc"
            }
            Reducer::StageSecondaryKnowledgeDesc { .. } => "stage_secondary_knowledge_desc",
            Reducer::StageSkillDesc { .. } => "stage_skill_desc",
            Reducer::StageTargetingMatrixDesc { .. } => "stage_targeting_matrix_desc",
            Reducer::StageTeleportItemDesc { .. } => "stage_teleport_item_desc",
            Reducer::StageTerraformRecipeDesc { .. } => "stage_terraform_recipe_desc",
            Reducer::StageToolDesc { .. } => "stage_tool_desc",
            Reducer::StageToolTypeDesc { .. } => "stage_tool_type_desc",
            Reducer::StageTravelerTaskDesc { .. } => "stage_traveler_task_desc",
            Reducer::StageTravelerTradeOrderDesc { .. } => "stage_traveler_trade_order_desc",
            Reducer::StageWallDesc { .. } => "stage_wall_desc",
            Reducer::StageWeaponDesc { .. } => "stage_weapon_desc",
            Reducer::StageWeaponTypeDesc { .. } => "stage_weapon_type_desc",
            Reducer::StartAgents => "start_agents",
            Reducer::StartGeneratingWorld { .. } => "start_generating_world",
            Reducer::StartOnboardingQuest { .. } => "start_onboarding_quest",
            Reducer::StarvingAgentLoop { .. } => "starving_agent_loop",
            Reducer::StopAgents => "stop_agents",
            Reducer::SynchronizeTime { .. } => "synchronize_time",
            Reducer::TargetUpdate { .. } => "target_update",
            Reducer::TeleportationEnergyRegenAgentLoop { .. } => {
                "teleportation_energy_regen_agent_loop"
            }
            Reducer::Terraform { .. } => "terraform",
            Reducer::TerraformCancel { .. } => "terraform_cancel",
            Reducer::TerraformSetFinalTarget { .. } => "terraform_set_final_target",
            Reducer::TerraformStart { .. } => "terraform_start",
            Reducer::TradeAccept { .. } => "trade_accept",
            Reducer::TradeAcceptSession { .. } => "trade_accept_session",
            Reducer::TradeAddItem { .. } => "trade_add_item",
            Reducer::TradeCancelServer { .. } => "trade_cancel_server",
            Reducer::TradeDecline { .. } => "trade_decline",
            Reducer::TradeDeclineSession { .. } => "trade_decline_session",
            Reducer::TradeInitiateSession { .. } => "trade_initiate_session",
            Reducer::TradeRemoveItem { .. } => "trade_remove_item",
            Reducer::TradeSessionsAgentLoop { .. } => "trade_sessions_agent_loop",
            Reducer::TradeSwapPockets { .. } => "trade_swap_pockets",
            Reducer::TransferPlayerDelayed { .. } => "transfer_player_delayed",
            Reducer::TravelerTaskAgentLoop { .. } => "traveler_task_agent_loop",
            Reducer::UpdateScheduledTimersFromStaticData => {
                "update_scheduled_timers_from_static_data"
            }
        }
    }
}
impl TryFrom<__ws::ReducerCallInfo<__ws::BsatnFormat>> for Reducer {
    type Error = __sdk::Error;
    fn try_from(value: __ws::ReducerCallInfo<__ws::BsatnFormat>) -> __sdk::Result<Self> {
        match &value.reducer_name[..] {
                        "achievement_claim" => Ok(__sdk::parse_reducer_args::<achievement_claim_reducer::AchievementClaimArgs>("achievement_claim", &value.args)?.into()),
            "acquire_knowledge_from_entities" => Ok(__sdk::parse_reducer_args::<acquire_knowledge_from_entities_reducer::AcquireKnowledgeFromEntitiesArgs>("acquire_knowledge_from_entities", &value.args)?.into()),
            "admin_alpha3_complete_onboarding" => Ok(__sdk::parse_reducer_args::<admin_alpha_3_complete_onboarding_reducer::AdminAlpha3CompleteOnboardingArgs>("admin_alpha3_complete_onboarding", &value.args)?.into()),
            "admin_alpha3_reset_onboarding_to_fifth_temple_quest" => Ok(__sdk::parse_reducer_args::<admin_alpha_3_reset_onboarding_to_fifth_temple_quest_reducer::AdminAlpha3ResetOnboardingToFifthTempleQuestArgs>("admin_alpha3_reset_onboarding_to_fifth_temple_quest", &value.args)?.into()),
            "admin_alpha3_reset_onboarding_to_first_expand_quest" => Ok(__sdk::parse_reducer_args::<admin_alpha_3_reset_onboarding_to_first_expand_quest_reducer::AdminAlpha3ResetOnboardingToFirstExpandQuestArgs>("admin_alpha3_reset_onboarding_to_first_expand_quest", &value.args)?.into()),
            "admin_alpha3_reset_onboarding_to_first_temple_quest" => Ok(__sdk::parse_reducer_args::<admin_alpha_3_reset_onboarding_to_first_temple_quest_reducer::AdminAlpha3ResetOnboardingToFirstTempleQuestArgs>("admin_alpha3_reset_onboarding_to_first_temple_quest", &value.args)?.into()),
            "admin_alpha3_reset_onboarding_to_fourth_expand_quest" => Ok(__sdk::parse_reducer_args::<admin_alpha_3_reset_onboarding_to_fourth_expand_quest_reducer::AdminAlpha3ResetOnboardingToFourthExpandQuestArgs>("admin_alpha3_reset_onboarding_to_fourth_expand_quest", &value.args)?.into()),
            "admin_alpha3_reset_onboarding_to_fourth_temple_quest" => Ok(__sdk::parse_reducer_args::<admin_alpha_3_reset_onboarding_to_fourth_temple_quest_reducer::AdminAlpha3ResetOnboardingToFourthTempleQuestArgs>("admin_alpha3_reset_onboarding_to_fourth_temple_quest", &value.args)?.into()),
            "admin_alpha3_reset_onboarding_to_second_expand_quest" => Ok(__sdk::parse_reducer_args::<admin_alpha_3_reset_onboarding_to_second_expand_quest_reducer::AdminAlpha3ResetOnboardingToSecondExpandQuestArgs>("admin_alpha3_reset_onboarding_to_second_expand_quest", &value.args)?.into()),
            "admin_alpha3_reset_onboarding_to_second_temple_quest" => Ok(__sdk::parse_reducer_args::<admin_alpha_3_reset_onboarding_to_second_temple_quest_reducer::AdminAlpha3ResetOnboardingToSecondTempleQuestArgs>("admin_alpha3_reset_onboarding_to_second_temple_quest", &value.args)?.into()),
            "admin_alpha3_reset_onboarding_to_third_expand_quest" => Ok(__sdk::parse_reducer_args::<admin_alpha_3_reset_onboarding_to_third_expand_quest_reducer::AdminAlpha3ResetOnboardingToThirdExpandQuestArgs>("admin_alpha3_reset_onboarding_to_third_expand_quest", &value.args)?.into()),
            "admin_alpha3_reset_onboarding_to_third_temple_quest" => Ok(__sdk::parse_reducer_args::<admin_alpha_3_reset_onboarding_to_third_temple_quest_reducer::AdminAlpha3ResetOnboardingToThirdTempleQuestArgs>("admin_alpha3_reset_onboarding_to_third_temple_quest", &value.args)?.into()),
            "admin_broadcast_msg_region" => Ok(__sdk::parse_reducer_args::<admin_broadcast_msg_region_reducer::AdminBroadcastMsgRegionArgs>("admin_broadcast_msg_region", &value.args)?.into()),
            "admin_clear_all_resources" => Ok(__sdk::parse_reducer_args::<admin_clear_all_resources_reducer::AdminClearAllResourcesArgs>("admin_clear_all_resources", &value.args)?.into()),
            "admin_collapse_ruin" => Ok(__sdk::parse_reducer_args::<admin_collapse_ruin_reducer::AdminCollapseRuinArgs>("admin_collapse_ruin", &value.args)?.into()),
            "admin_collapse_ruins" => Ok(__sdk::parse_reducer_args::<admin_collapse_ruins_reducer::AdminCollapseRuinsArgs>("admin_collapse_ruins", &value.args)?.into()),
            "admin_complete_all_passive_crafts" => Ok(__sdk::parse_reducer_args::<admin_complete_all_passive_crafts_reducer::AdminCompleteAllPassiveCraftsArgs>("admin_complete_all_passive_crafts", &value.args)?.into()),
            "admin_count_inventory_items" => Ok(__sdk::parse_reducer_args::<admin_count_inventory_items_reducer::AdminCountInventoryItemsArgs>("admin_count_inventory_items", &value.args)?.into()),
            "admin_despawn_overworld_enemies" => Ok(__sdk::parse_reducer_args::<admin_despawn_overworld_enemies_reducer::AdminDespawnOverworldEnemiesArgs>("admin_despawn_overworld_enemies", &value.args)?.into()),
            "admin_grant_collectibles" => Ok(__sdk::parse_reducer_args::<admin_grant_collectibles_reducer::AdminGrantCollectiblesArgs>("admin_grant_collectibles", &value.args)?.into()),
            "admin_reset_all_herd_locations" => Ok(__sdk::parse_reducer_args::<admin_reset_all_herd_locations_reducer::AdminResetAllHerdLocationsArgs>("admin_reset_all_herd_locations", &value.args)?.into()),
            "admin_reset_herd_locations" => Ok(__sdk::parse_reducer_args::<admin_reset_herd_locations_reducer::AdminResetHerdLocationsArgs>("admin_reset_herd_locations", &value.args)?.into()),
            "admin_reset_onboarding_completely" => Ok(__sdk::parse_reducer_args::<admin_reset_onboarding_completely_reducer::AdminResetOnboardingCompletelyArgs>("admin_reset_onboarding_completely", &value.args)?.into()),
            "admin_restore_all_collapsed_ruins" => Ok(__sdk::parse_reducer_args::<admin_restore_all_collapsed_ruins_reducer::AdminRestoreAllCollapsedRuinsArgs>("admin_restore_all_collapsed_ruins", &value.args)?.into()),
            "admin_restore_player_state" => Ok(__sdk::parse_reducer_args::<admin_restore_player_state_reducer::AdminRestorePlayerStateArgs>("admin_restore_player_state", &value.args)?.into()),
            "admin_restore_player_state_scheduled" => Ok(__sdk::parse_reducer_args::<admin_restore_player_state_scheduled_reducer::AdminRestorePlayerStateScheduledArgs>("admin_restore_player_state_scheduled", &value.args)?.into()),
            "admin_sign_out" => Ok(__sdk::parse_reducer_args::<admin_sign_out_reducer::AdminSignOutArgs>("admin_sign_out", &value.args)?.into()),
            "admin_sign_out_all_region" => Ok(__sdk::parse_reducer_args::<admin_sign_out_all_region_reducer::AdminSignOutAllRegionArgs>("admin_sign_out_all_region", &value.args)?.into()),
            "admin_sign_out_string" => Ok(__sdk::parse_reducer_args::<admin_sign_out_string_reducer::AdminSignOutStringArgs>("admin_sign_out_string", &value.args)?.into()),
            "admin_update_light_source_states" => Ok(__sdk::parse_reducer_args::<admin_update_light_source_states_reducer::AdminUpdateLightSourceStatesArgs>("admin_update_light_source_states", &value.args)?.into()),
            "attack" => Ok(__sdk::parse_reducer_args::<attack_reducer::AttackArgs>("attack", &value.args)?.into()),
            "attack_impact" => Ok(__sdk::parse_reducer_args::<attack_impact_reducer::AttackImpactArgs>("attack_impact", &value.args)?.into()),
            "attack_scheduled" => Ok(__sdk::parse_reducer_args::<attack_scheduled_reducer::AttackScheduledArgs>("attack_scheduled", &value.args)?.into()),
            "attack_start" => Ok(__sdk::parse_reducer_args::<attack_start_reducer::AttackStartArgs>("attack_start", &value.args)?.into()),
            "auto_logout_loop" => Ok(__sdk::parse_reducer_args::<auto_logout_loop_reducer::AutoLogoutLoopArgs>("auto_logout_loop", &value.args)?.into()),
            "barter_stall_order_accept" => Ok(__sdk::parse_reducer_args::<barter_stall_order_accept_reducer::BarterStallOrderAcceptArgs>("barter_stall_order_accept", &value.args)?.into()),
            "barter_stall_order_create" => Ok(__sdk::parse_reducer_args::<barter_stall_order_create_reducer::BarterStallOrderCreateArgs>("barter_stall_order_create", &value.args)?.into()),
            "barter_stall_order_delete" => Ok(__sdk::parse_reducer_args::<barter_stall_order_delete_reducer::BarterStallOrderDeleteArgs>("barter_stall_order_delete", &value.args)?.into()),
            "barter_stall_set_market_mode_enabled" => Ok(__sdk::parse_reducer_args::<barter_stall_set_market_mode_enabled_reducer::BarterStallSetMarketModeEnabledArgs>("barter_stall_set_market_mode_enabled", &value.args)?.into()),
            "blueprint_place" => Ok(__sdk::parse_reducer_args::<blueprint_place_reducer::BlueprintPlaceArgs>("blueprint_place", &value.args)?.into()),
            "building_decay_agent_loop" => Ok(__sdk::parse_reducer_args::<building_decay_agent_loop_reducer::BuildingDecayAgentLoopArgs>("building_decay_agent_loop", &value.args)?.into()),
            "building_deconstruct" => Ok(__sdk::parse_reducer_args::<building_deconstruct_reducer::BuildingDeconstructArgs>("building_deconstruct", &value.args)?.into()),
            "building_deconstruct_start" => Ok(__sdk::parse_reducer_args::<building_deconstruct_start_reducer::BuildingDeconstructStartArgs>("building_deconstruct_start", &value.args)?.into()),
            "building_despawn" => Ok(__sdk::parse_reducer_args::<building_despawn_reducer::BuildingDespawnArgs>("building_despawn", &value.args)?.into()),
            "building_move" => Ok(__sdk::parse_reducer_args::<building_move_reducer::BuildingMoveArgs>("building_move", &value.args)?.into()),
            "building_repair" => Ok(__sdk::parse_reducer_args::<building_repair_reducer::BuildingRepairArgs>("building_repair", &value.args)?.into()),
            "building_repair_start" => Ok(__sdk::parse_reducer_args::<building_repair_start_reducer::BuildingRepairStartArgs>("building_repair_start", &value.args)?.into()),
            "building_set_nickname" => Ok(__sdk::parse_reducer_args::<building_set_nickname_reducer::BuildingSetNicknameArgs>("building_set_nickname", &value.args)?.into()),
            "building_set_sign_text" => Ok(__sdk::parse_reducer_args::<building_set_sign_text_reducer::BuildingSetSignTextArgs>("building_set_sign_text", &value.args)?.into()),
            "chat_post_message" => Ok(__sdk::parse_reducer_args::<chat_post_message_reducer::ChatPostMessageArgs>("chat_post_message", &value.args)?.into()),
            "cheat_building_move" => Ok(__sdk::parse_reducer_args::<cheat_building_move_reducer::CheatBuildingMoveArgs>("cheat_building_move", &value.args)?.into()),
            "cheat_building_place" => Ok(__sdk::parse_reducer_args::<cheat_building_place_reducer::CheatBuildingPlaceArgs>("cheat_building_place", &value.args)?.into()),
            "cheat_cargo_grant" => Ok(__sdk::parse_reducer_args::<cheat_cargo_grant_reducer::CheatCargoGrantArgs>("cheat_cargo_grant", &value.args)?.into()),
            "cheat_claim_take_ownership" => Ok(__sdk::parse_reducer_args::<cheat_claim_take_ownership_reducer::CheatClaimTakeOwnershipArgs>("cheat_claim_take_ownership", &value.args)?.into()),
            "cheat_claim_totem_add_supplies" => Ok(__sdk::parse_reducer_args::<cheat_claim_totem_add_supplies_reducer::CheatClaimTotemAddSuppliesArgs>("cheat_claim_totem_add_supplies", &value.args)?.into()),
            "cheat_claim_totem_complete_current_research" => Ok(__sdk::parse_reducer_args::<cheat_claim_totem_complete_current_research_reducer::CheatClaimTotemCompleteCurrentResearchArgs>("cheat_claim_totem_complete_current_research", &value.args)?.into()),
            "cheat_claim_totem_research_all" => Ok(__sdk::parse_reducer_args::<cheat_claim_totem_research_all_reducer::CheatClaimTotemResearchAllArgs>("cheat_claim_totem_research_all", &value.args)?.into()),
            "cheat_clear_buffs_and_debuffs" => Ok(__sdk::parse_reducer_args::<cheat_clear_buffs_and_debuffs_reducer::CheatClearBuffsAndDebuffsArgs>("cheat_clear_buffs_and_debuffs", &value.args)?.into()),
            "cheat_compendium_place_enemy" => Ok(__sdk::parse_reducer_args::<cheat_compendium_place_enemy_reducer::CheatCompendiumPlaceEnemyArgs>("cheat_compendium_place_enemy", &value.args)?.into()),
            "cheat_compendium_place_resource" => Ok(__sdk::parse_reducer_args::<cheat_compendium_place_resource_reducer::CheatCompendiumPlaceResourceArgs>("cheat_compendium_place_resource", &value.args)?.into()),
            "cheat_delete_item" => Ok(__sdk::parse_reducer_args::<cheat_delete_item_reducer::CheatDeleteItemArgs>("cheat_delete_item", &value.args)?.into()),
            "cheat_deployable_store" => Ok(__sdk::parse_reducer_args::<cheat_deployable_store_reducer::CheatDeployableStoreArgs>("cheat_deployable_store", &value.args)?.into()),
            "cheat_discover_map" => Ok(__sdk::parse_reducer_args::<cheat_discover_map_reducer::CheatDiscoverMapArgs>("cheat_discover_map", &value.args)?.into()),
            "cheat_experience_grant" => Ok(__sdk::parse_reducer_args::<cheat_experience_grant_reducer::CheatExperienceGrantArgs>("cheat_experience_grant", &value.args)?.into()),
            "cheat_grant_knowledge" => Ok(__sdk::parse_reducer_args::<cheat_grant_knowledge_reducer::CheatGrantKnowledgeArgs>("cheat_grant_knowledge", &value.args)?.into()),
            "cheat_grant_teleport_energy" => Ok(__sdk::parse_reducer_args::<cheat_grant_teleport_energy_reducer::CheatGrantTeleportEnergyArgs>("cheat_grant_teleport_energy", &value.args)?.into()),
            "cheat_item_stack_grant" => Ok(__sdk::parse_reducer_args::<cheat_item_stack_grant_reducer::CheatItemStackGrantArgs>("cheat_item_stack_grant", &value.args)?.into()),
            "cheat_item_stack_grant_and_equip" => Ok(__sdk::parse_reducer_args::<cheat_item_stack_grant_and_equip_reducer::CheatItemStackGrantAndEquipArgs>("cheat_item_stack_grant_and_equip", &value.args)?.into()),
            "cheat_kill" => Ok(__sdk::parse_reducer_args::<cheat_kill_reducer::CheatKillArgs>("cheat_kill", &value.args)?.into()),
            "cheat_paving_add_tile" => Ok(__sdk::parse_reducer_args::<cheat_paving_add_tile_reducer::CheatPavingAddTileArgs>("cheat_paving_add_tile", &value.args)?.into()),
            "cheat_paving_destroy" => Ok(__sdk::parse_reducer_args::<cheat_paving_destroy_reducer::CheatPavingDestroyArgs>("cheat_paving_destroy", &value.args)?.into()),
            "cheat_pillar_shaping_add_pillar" => Ok(__sdk::parse_reducer_args::<cheat_pillar_shaping_add_pillar_reducer::CheatPillarShapingAddPillarArgs>("cheat_pillar_shaping_add_pillar", &value.args)?.into()),
            "cheat_pillar_shaping_destroy" => Ok(__sdk::parse_reducer_args::<cheat_pillar_shaping_destroy_reducer::CheatPillarShapingDestroyArgs>("cheat_pillar_shaping_destroy", &value.args)?.into()),
            "cheat_project_site_add_all_materials" => Ok(__sdk::parse_reducer_args::<cheat_project_site_add_all_materials_reducer::CheatProjectSiteAddAllMaterialsArgs>("cheat_project_site_add_all_materials", &value.args)?.into()),
            "cheat_remove_entity_building" => Ok(__sdk::parse_reducer_args::<cheat_remove_entity_building_reducer::CheatRemoveEntityBuildingArgs>("cheat_remove_entity_building", &value.args)?.into()),
            "cheat_remove_entity_enemy" => Ok(__sdk::parse_reducer_args::<cheat_remove_entity_enemy_reducer::CheatRemoveEntityEnemyArgs>("cheat_remove_entity_enemy", &value.args)?.into()),
            "cheat_remove_entity_resource" => Ok(__sdk::parse_reducer_args::<cheat_remove_entity_resource_reducer::CheatRemoveEntityResourceArgs>("cheat_remove_entity_resource", &value.args)?.into()),
            "cheat_set_ai_debug_state" => Ok(__sdk::parse_reducer_args::<cheat_set_ai_debug_state_reducer::CheatSetAiDebugStateArgs>("cheat_set_ai_debug_state", &value.args)?.into()),
            "cheat_spawn_loot_chest" => Ok(__sdk::parse_reducer_args::<cheat_spawn_loot_chest_reducer::CheatSpawnLootChestArgs>("cheat_spawn_loot_chest", &value.args)?.into()),
            "cheat_teleport_float" => Ok(__sdk::parse_reducer_args::<cheat_teleport_float_reducer::CheatTeleportFloatArgs>("cheat_teleport_float", &value.args)?.into()),
            "cheat_terraform" => Ok(__sdk::parse_reducer_args::<cheat_terraform_reducer::CheatTerraformArgs>("cheat_terraform", &value.args)?.into()),
            "cheat_toggle_active_collectible" => Ok(__sdk::parse_reducer_args::<cheat_toggle_active_collectible_reducer::CheatToggleActiveCollectibleArgs>("cheat_toggle_active_collectible", &value.args)?.into()),
            "cheat_warp" => Ok(__sdk::parse_reducer_args::<cheat_warp_reducer::CheatWarpArgs>("cheat_warp", &value.args)?.into()),
            "claim_add_member" => Ok(__sdk::parse_reducer_args::<claim_add_member_reducer::ClaimAddMemberArgs>("claim_add_member", &value.args)?.into()),
            "claim_add_recruitment" => Ok(__sdk::parse_reducer_args::<claim_add_recruitment_reducer::ClaimAddRecruitmentArgs>("claim_add_recruitment", &value.args)?.into()),
            "claim_add_tile" => Ok(__sdk::parse_reducer_args::<claim_add_tile_reducer::ClaimAddTileArgs>("claim_add_tile", &value.args)?.into()),
            "claim_apply_for_recruitment" => Ok(__sdk::parse_reducer_args::<claim_apply_for_recruitment_reducer::ClaimApplyForRecruitmentArgs>("claim_apply_for_recruitment", &value.args)?.into()),
            "claim_leave" => Ok(__sdk::parse_reducer_args::<claim_leave_reducer::ClaimLeaveArgs>("claim_leave", &value.args)?.into()),
            "claim_purchase_supplies_from_player" => Ok(__sdk::parse_reducer_args::<claim_purchase_supplies_from_player_reducer::ClaimPurchaseSuppliesFromPlayerArgs>("claim_purchase_supplies_from_player", &value.args)?.into()),
            "claim_remove_member" => Ok(__sdk::parse_reducer_args::<claim_remove_member_reducer::ClaimRemoveMemberArgs>("claim_remove_member", &value.args)?.into()),
            "claim_remove_recruitment" => Ok(__sdk::parse_reducer_args::<claim_remove_recruitment_reducer::ClaimRemoveRecruitmentArgs>("claim_remove_recruitment", &value.args)?.into()),
            "claim_remove_tile" => Ok(__sdk::parse_reducer_args::<claim_remove_tile_reducer::ClaimRemoveTileArgs>("claim_remove_tile", &value.args)?.into()),
            "claim_rename" => Ok(__sdk::parse_reducer_args::<claim_rename_reducer::ClaimRenameArgs>("claim_rename", &value.args)?.into()),
            "claim_resupply" => Ok(__sdk::parse_reducer_args::<claim_resupply_reducer::ClaimResupplyArgs>("claim_resupply", &value.args)?.into()),
            "claim_resupply_start" => Ok(__sdk::parse_reducer_args::<claim_resupply_start_reducer::ClaimResupplyStartArgs>("claim_resupply_start", &value.args)?.into()),
            "claim_set_member_permissions" => Ok(__sdk::parse_reducer_args::<claim_set_member_permissions_reducer::ClaimSetMemberPermissionsArgs>("claim_set_member_permissions", &value.args)?.into()),
            "claim_set_purchase_supply_price" => Ok(__sdk::parse_reducer_args::<claim_set_purchase_supply_price_reducer::ClaimSetPurchaseSupplyPriceArgs>("claim_set_purchase_supply_price", &value.args)?.into()),
            "claim_set_purchase_supply_threshold" => Ok(__sdk::parse_reducer_args::<claim_set_purchase_supply_threshold_reducer::ClaimSetPurchaseSupplyThresholdArgs>("claim_set_purchase_supply_threshold", &value.args)?.into()),
            "claim_take_ownership" => Ok(__sdk::parse_reducer_args::<claim_take_ownership_reducer::ClaimTakeOwnershipArgs>("claim_take_ownership", &value.args)?.into()),
            "claim_tech_cancel" => Ok(__sdk::parse_reducer_args::<claim_tech_cancel_reducer::ClaimTechCancelArgs>("claim_tech_cancel", &value.args)?.into()),
            "claim_tech_learn" => Ok(__sdk::parse_reducer_args::<claim_tech_learn_reducer::ClaimTechLearnArgs>("claim_tech_learn", &value.args)?.into()),
            "claim_tech_unlock_tech" => Ok(__sdk::parse_reducer_args::<claim_tech_unlock_tech_reducer::ClaimTechUnlockTechArgs>("claim_tech_unlock_tech", &value.args)?.into()),
            "claim_transfer_ownership" => Ok(__sdk::parse_reducer_args::<claim_transfer_ownership_reducer::ClaimTransferOwnershipArgs>("claim_transfer_ownership", &value.args)?.into()),
            "claim_withdraw_from_treasury" => Ok(__sdk::parse_reducer_args::<claim_withdraw_from_treasury_reducer::ClaimWithdrawFromTreasuryArgs>("claim_withdraw_from_treasury", &value.args)?.into()),
            "clear_staged_static_data" => Ok(__sdk::parse_reducer_args::<clear_staged_static_data_reducer::ClearStagedStaticDataArgs>("clear_staged_static_data", &value.args)?.into()),
            "closed_listing_collect" => Ok(__sdk::parse_reducer_args::<closed_listing_collect_reducer::ClosedListingCollectArgs>("closed_listing_collect", &value.args)?.into()),
            "collect_stats_reducer" => Ok(__sdk::parse_reducer_args::<collect_stats_reducer_reducer::CollectStatsReducerArgs>("collect_stats_reducer", &value.args)?.into()),
            "collectible_activate" => Ok(__sdk::parse_reducer_args::<collectible_activate_reducer::CollectibleActivateArgs>("collectible_activate", &value.args)?.into()),
            "commit_staged_static_data" => Ok(__sdk::parse_reducer_args::<commit_staged_static_data_reducer::CommitStagedStaticDataArgs>("commit_staged_static_data", &value.args)?.into()),
            "complete_onboarding_quest" => Ok(__sdk::parse_reducer_args::<complete_onboarding_quest_reducer::CompleteOnboardingQuestArgs>("complete_onboarding_quest", &value.args)?.into()),
            "complete_onboarding_state" => Ok(__sdk::parse_reducer_args::<complete_onboarding_state_reducer::CompleteOnboardingStateArgs>("complete_onboarding_state", &value.args)?.into()),
            "convert_collectible_to_deed" => Ok(__sdk::parse_reducer_args::<convert_collectible_to_deed_reducer::ConvertCollectibleToDeedArgs>("convert_collectible_to_deed", &value.args)?.into()),
            "convert_deed_to_collectible" => Ok(__sdk::parse_reducer_args::<convert_deed_to_collectible_reducer::ConvertDeedToCollectibleArgs>("convert_deed_to_collectible", &value.args)?.into()),
            "craft_cancel" => Ok(__sdk::parse_reducer_args::<craft_cancel_reducer::CraftCancelArgs>("craft_cancel", &value.args)?.into()),
            "craft_collect" => Ok(__sdk::parse_reducer_args::<craft_collect_reducer::CraftCollectArgs>("craft_collect", &value.args)?.into()),
            "craft_collect_all" => Ok(__sdk::parse_reducer_args::<craft_collect_all_reducer::CraftCollectAllArgs>("craft_collect_all", &value.args)?.into()),
            "craft_continue" => Ok(__sdk::parse_reducer_args::<craft_continue_reducer::CraftContinueArgs>("craft_continue", &value.args)?.into()),
            "craft_continue_start" => Ok(__sdk::parse_reducer_args::<craft_continue_start_reducer::CraftContinueStartArgs>("craft_continue_start", &value.args)?.into()),
            "craft_initiate" => Ok(__sdk::parse_reducer_args::<craft_initiate_reducer::CraftInitiateArgs>("craft_initiate", &value.args)?.into()),
            "craft_initiate_start" => Ok(__sdk::parse_reducer_args::<craft_initiate_start_reducer::CraftInitiateStartArgs>("craft_initiate_start", &value.args)?.into()),
            "current_version" => Ok(__sdk::parse_reducer_args::<current_version_reducer::CurrentVersionArgs>("current_version", &value.args)?.into()),
            "day_night_agent_loop" => Ok(__sdk::parse_reducer_args::<day_night_agent_loop_reducer::DayNightAgentLoopArgs>("day_night_agent_loop", &value.args)?.into()),
            "delete_all_npcs" => Ok(__sdk::parse_reducer_args::<delete_all_npcs_reducer::DeleteAllNpcsArgs>("delete_all_npcs", &value.args)?.into()),
            "deployable_deploy" => Ok(__sdk::parse_reducer_args::<deployable_deploy_reducer::DeployableDeployArgs>("deployable_deploy", &value.args)?.into()),
            "deployable_deploy_start" => Ok(__sdk::parse_reducer_args::<deployable_deploy_start_reducer::DeployableDeployStartArgs>("deployable_deploy_start", &value.args)?.into()),
            "deployable_dismount" => Ok(__sdk::parse_reducer_args::<deployable_dismount_reducer::DeployableDismountArgs>("deployable_dismount", &value.args)?.into()),
            "deployable_dismount_scheduled" => Ok(__sdk::parse_reducer_args::<deployable_dismount_scheduled_reducer::DeployableDismountScheduledArgs>("deployable_dismount_scheduled", &value.args)?.into()),
            "deployable_mount" => Ok(__sdk::parse_reducer_args::<deployable_mount_reducer::DeployableMountArgs>("deployable_mount", &value.args)?.into()),
            "deployable_move" => Ok(__sdk::parse_reducer_args::<deployable_move_reducer::DeployableMoveArgs>("deployable_move", &value.args)?.into()),
            "deployable_move_off_claim" => Ok(__sdk::parse_reducer_args::<deployable_move_off_claim_reducer::DeployableMoveOffClaimArgs>("deployable_move_off_claim", &value.args)?.into()),
            "deployable_store" => Ok(__sdk::parse_reducer_args::<deployable_store_reducer::DeployableStoreArgs>("deployable_store", &value.args)?.into()),
            "deployable_store_start" => Ok(__sdk::parse_reducer_args::<deployable_store_start_reducer::DeployableStoreStartArgs>("deployable_store_start", &value.args)?.into()),
            "destroy_dimension_network" => Ok(__sdk::parse_reducer_args::<destroy_dimension_network_reducer::DestroyDimensionNetworkArgs>("destroy_dimension_network", &value.args)?.into()),
            "dev_delete_world" => Ok(__sdk::parse_reducer_args::<dev_delete_world_reducer::DevDeleteWorldArgs>("dev_delete_world", &value.args)?.into()),
            "discover_entities" => Ok(__sdk::parse_reducer_args::<discover_entities_reducer::DiscoverEntitiesArgs>("discover_entities", &value.args)?.into()),
            "dropped_inventory_despawn" => Ok(__sdk::parse_reducer_args::<dropped_inventory_despawn_reducer::DroppedInventoryDespawnArgs>("dropped_inventory_despawn", &value.args)?.into()),
            "dropped_inventory_lose_ownership" => Ok(__sdk::parse_reducer_args::<dropped_inventory_lose_ownership_reducer::DroppedInventoryLoseOwnershipArgs>("dropped_inventory_lose_ownership", &value.args)?.into()),
            "duel_agent_timer_loop" => Ok(__sdk::parse_reducer_args::<duel_agent_timer_loop_reducer::DuelAgentTimerLoopArgs>("duel_agent_timer_loop", &value.args)?.into()),
            "duel_despawn" => Ok(__sdk::parse_reducer_args::<duel_despawn_reducer::DuelDespawnArgs>("duel_despawn", &value.args)?.into()),
            "eat" => Ok(__sdk::parse_reducer_args::<eat_reducer::EatArgs>("eat", &value.args)?.into()),
            "emote" => Ok(__sdk::parse_reducer_args::<emote_reducer::EmoteArgs>("emote", &value.args)?.into()),
            "emote_start" => Ok(__sdk::parse_reducer_args::<emote_start_reducer::EmoteStartArgs>("emote_start", &value.args)?.into()),
            "empire_add_siege_supplies" => Ok(__sdk::parse_reducer_args::<empire_add_siege_supplies_reducer::EmpireAddSiegeSuppliesArgs>("empire_add_siege_supplies", &value.args)?.into()),
            "empire_claim_join" => Ok(__sdk::parse_reducer_args::<empire_claim_join_reducer::EmpireClaimJoinArgs>("empire_claim_join", &value.args)?.into()),
            "empire_collect_hexite_capsule" => Ok(__sdk::parse_reducer_args::<empire_collect_hexite_capsule_reducer::EmpireCollectHexiteCapsuleArgs>("empire_collect_hexite_capsule", &value.args)?.into()),
            "empire_deploy_siege_engine" => Ok(__sdk::parse_reducer_args::<empire_deploy_siege_engine_reducer::EmpireDeploySiegeEngineArgs>("empire_deploy_siege_engine", &value.args)?.into()),
            "empire_deploy_siege_engine_start" => Ok(__sdk::parse_reducer_args::<empire_deploy_siege_engine_start_reducer::EmpireDeploySiegeEngineStartArgs>("empire_deploy_siege_engine_start", &value.args)?.into()),
            "empire_queue_supplies" => Ok(__sdk::parse_reducer_args::<empire_queue_supplies_reducer::EmpireQueueSuppliesArgs>("empire_queue_supplies", &value.args)?.into()),
            "empire_resupply_node" => Ok(__sdk::parse_reducer_args::<empire_resupply_node_reducer::EmpireResupplyNodeArgs>("empire_resupply_node", &value.args)?.into()),
            "empire_resupply_node_start" => Ok(__sdk::parse_reducer_args::<empire_resupply_node_start_reducer::EmpireResupplyNodeStartArgs>("empire_resupply_node_start", &value.args)?.into()),
            "empire_siege_depleted_watchtower" => Ok(__sdk::parse_reducer_args::<empire_siege_depleted_watchtower_reducer::EmpireSiegeDepletedWatchtowerArgs>("empire_siege_depleted_watchtower", &value.args)?.into()),
            "end_grace_period" => Ok(__sdk::parse_reducer_args::<end_grace_period_reducer::EndGracePeriodArgs>("end_grace_period", &value.args)?.into()),
            "enemy_clear_aggro" => Ok(__sdk::parse_reducer_args::<enemy_clear_aggro_reducer::EnemyClearAggroArgs>("enemy_clear_aggro", &value.args)?.into()),
            "enemy_despawn" => Ok(__sdk::parse_reducer_args::<enemy_despawn_reducer::EnemyDespawnArgs>("enemy_despawn", &value.args)?.into()),
            "enemy_despawn_from_mob_monitor" => Ok(__sdk::parse_reducer_args::<enemy_despawn_from_mob_monitor_reducer::EnemyDespawnFromMobMonitorArgs>("enemy_despawn_from_mob_monitor", &value.args)?.into()),
            "enemy_despawn_from_mob_monitor_batch" => Ok(__sdk::parse_reducer_args::<enemy_despawn_from_mob_monitor_batch_reducer::EnemyDespawnFromMobMonitorBatchArgs>("enemy_despawn_from_mob_monitor_batch", &value.args)?.into()),
            "enemy_move" => Ok(__sdk::parse_reducer_args::<enemy_move_reducer::EnemyMoveArgs>("enemy_move", &value.args)?.into()),
            "enemy_move_batch" => Ok(__sdk::parse_reducer_args::<enemy_move_batch_reducer::EnemyMoveBatchArgs>("enemy_move_batch", &value.args)?.into()),
            "enemy_regen_agent_loop" => Ok(__sdk::parse_reducer_args::<enemy_regen_agent_loop_reducer::EnemyRegenAgentLoopArgs>("enemy_regen_agent_loop", &value.args)?.into()),
            "enemy_set_health" => Ok(__sdk::parse_reducer_args::<enemy_set_health_reducer::EnemySetHealthArgs>("enemy_set_health", &value.args)?.into()),
            "enemy_set_health_batch" => Ok(__sdk::parse_reducer_args::<enemy_set_health_batch_reducer::EnemySetHealthBatchArgs>("enemy_set_health_batch", &value.args)?.into()),
            "enemy_spawn" => Ok(__sdk::parse_reducer_args::<enemy_spawn_reducer::EnemySpawnArgs>("enemy_spawn", &value.args)?.into()),
            "enemy_spawn_batch" => Ok(__sdk::parse_reducer_args::<enemy_spawn_batch_reducer::EnemySpawnBatchArgs>("enemy_spawn_batch", &value.args)?.into()),
            "enemy_spawn_loot" => Ok(__sdk::parse_reducer_args::<enemy_spawn_loot_reducer::EnemySpawnLootArgs>("enemy_spawn_loot", &value.args)?.into()),
            "environment_debuff_agent_loop" => Ok(__sdk::parse_reducer_args::<environment_debuff_agent_loop_reducer::EnvironmentDebuffAgentLoopArgs>("environment_debuff_agent_loop", &value.args)?.into()),
            "equipment_add" => Ok(__sdk::parse_reducer_args::<equipment_add_reducer::EquipmentAddArgs>("equipment_add", &value.args)?.into()),
            "equipment_remove" => Ok(__sdk::parse_reducer_args::<equipment_remove_reducer::EquipmentRemoveArgs>("equipment_remove", &value.args)?.into()),
            "extract" => Ok(__sdk::parse_reducer_args::<extract_reducer::ExtractArgs>("extract", &value.args)?.into()),
            "extract_start" => Ok(__sdk::parse_reducer_args::<extract_start_reducer::ExtractStartArgs>("extract_start", &value.args)?.into()),
            "force_start_agents" => Ok(__sdk::parse_reducer_args::<force_start_agents_reducer::ForceStartAgentsArgs>("force_start_agents", &value.args)?.into()),
            "generate_dev_island" => Ok(__sdk::parse_reducer_args::<generate_dev_island_reducer::GenerateDevIslandArgs>("generate_dev_island", &value.args)?.into()),
            "generate_flat_world" => Ok(__sdk::parse_reducer_args::<generate_flat_world_reducer::GenerateFlatWorldArgs>("generate_flat_world", &value.args)?.into()),
            "generate_world" => Ok(__sdk::parse_reducer_args::<generate_world_reducer::GenerateWorldArgs>("generate_world", &value.args)?.into()),
            "growth_agent_loop" => Ok(__sdk::parse_reducer_args::<growth_agent_loop_reducer::GrowthAgentLoopArgs>("growth_agent_loop", &value.args)?.into()),
            "hide_deployable" => Ok(__sdk::parse_reducer_args::<hide_deployable_reducer::HideDeployableArgs>("hide_deployable", &value.args)?.into()),
            "identity_connected" => Ok(__sdk::parse_reducer_args::<identity_connected_reducer::IdentityConnectedArgs>("identity_connected", &value.args)?.into()),
            "identity_disconnected" => Ok(__sdk::parse_reducer_args::<identity_disconnected_reducer::IdentityDisconnectedArgs>("identity_disconnected", &value.args)?.into()),
            "import_achievement_desc" => Ok(__sdk::parse_reducer_args::<import_achievement_desc_reducer::ImportAchievementDescArgs>("import_achievement_desc", &value.args)?.into()),
            "import_active_buff_state" => Ok(__sdk::parse_reducer_args::<import_active_buff_state_reducer::ImportActiveBuffStateArgs>("import_active_buff_state", &value.args)?.into()),
            "import_admin_broadcast" => Ok(__sdk::parse_reducer_args::<import_admin_broadcast_reducer::ImportAdminBroadcastArgs>("import_admin_broadcast", &value.args)?.into()),
            "import_alert_desc" => Ok(__sdk::parse_reducer_args::<import_alert_desc_reducer::ImportAlertDescArgs>("import_alert_desc", &value.args)?.into()),
            "import_alert_state" => Ok(__sdk::parse_reducer_args::<import_alert_state_reducer::ImportAlertStateArgs>("import_alert_state", &value.args)?.into()),
            "import_attack_outcome_state" => Ok(__sdk::parse_reducer_args::<import_attack_outcome_state_reducer::ImportAttackOutcomeStateArgs>("import_attack_outcome_state", &value.args)?.into()),
            "import_biome_desc" => Ok(__sdk::parse_reducer_args::<import_biome_desc_reducer::ImportBiomeDescArgs>("import_biome_desc", &value.args)?.into()),
            "import_buff_desc" => Ok(__sdk::parse_reducer_args::<import_buff_desc_reducer::ImportBuffDescArgs>("import_buff_desc", &value.args)?.into()),
            "import_buff_type_desc" => Ok(__sdk::parse_reducer_args::<import_buff_type_desc_reducer::ImportBuffTypeDescArgs>("import_buff_type_desc", &value.args)?.into()),
            "import_building_claim_desc" => Ok(__sdk::parse_reducer_args::<import_building_claim_desc_reducer::ImportBuildingClaimDescArgs>("import_building_claim_desc", &value.args)?.into()),
            "import_building_desc" => Ok(__sdk::parse_reducer_args::<import_building_desc_reducer::ImportBuildingDescArgs>("import_building_desc", &value.args)?.into()),
            "import_building_portal_desc" => Ok(__sdk::parse_reducer_args::<import_building_portal_desc_reducer::ImportBuildingPortalDescArgs>("import_building_portal_desc", &value.args)?.into()),
            "import_building_repairs_desc" => Ok(__sdk::parse_reducer_args::<import_building_repairs_desc_reducer::ImportBuildingRepairsDescArgs>("import_building_repairs_desc", &value.args)?.into()),
            "import_building_spawn_desc" => Ok(__sdk::parse_reducer_args::<import_building_spawn_desc_reducer::ImportBuildingSpawnDescArgs>("import_building_spawn_desc", &value.args)?.into()),
            "import_building_state" => Ok(__sdk::parse_reducer_args::<import_building_state_reducer::ImportBuildingStateArgs>("import_building_state", &value.args)?.into()),
            "import_building_type_desc" => Ok(__sdk::parse_reducer_args::<import_building_type_desc_reducer::ImportBuildingTypeDescArgs>("import_building_type_desc", &value.args)?.into()),
            "import_cargo_desc" => Ok(__sdk::parse_reducer_args::<import_cargo_desc_reducer::ImportCargoDescArgs>("import_cargo_desc", &value.args)?.into()),
            "import_character_stat_desc" => Ok(__sdk::parse_reducer_args::<import_character_stat_desc_reducer::ImportCharacterStatDescArgs>("import_character_stat_desc", &value.args)?.into()),
            "import_character_stats_state" => Ok(__sdk::parse_reducer_args::<import_character_stats_state_reducer::ImportCharacterStatsStateArgs>("import_character_stats_state", &value.args)?.into()),
            "import_chat_message_state" => Ok(__sdk::parse_reducer_args::<import_chat_message_state_reducer::ImportChatMessageStateArgs>("import_chat_message_state", &value.args)?.into()),
            "import_chest_rarity_desc" => Ok(__sdk::parse_reducer_args::<import_chest_rarity_desc_reducer::ImportChestRarityDescArgs>("import_chest_rarity_desc", &value.args)?.into()),
            "import_claim_local_state" => Ok(__sdk::parse_reducer_args::<import_claim_local_state_reducer::ImportClaimLocalStateArgs>("import_claim_local_state", &value.args)?.into()),
            "import_claim_recruitment_state" => Ok(__sdk::parse_reducer_args::<import_claim_recruitment_state_reducer::ImportClaimRecruitmentStateArgs>("import_claim_recruitment_state", &value.args)?.into()),
            "import_claim_state" => Ok(__sdk::parse_reducer_args::<import_claim_state_reducer::ImportClaimStateArgs>("import_claim_state", &value.args)?.into()),
            "import_claim_tech_desc" => Ok(__sdk::parse_reducer_args::<import_claim_tech_desc_reducer::ImportClaimTechDescArgs>("import_claim_tech_desc", &value.args)?.into()),
            "import_claim_tech_state" => Ok(__sdk::parse_reducer_args::<import_claim_tech_state_reducer::ImportClaimTechStateArgs>("import_claim_tech_state", &value.args)?.into()),
            "import_claim_tile_cost" => Ok(__sdk::parse_reducer_args::<import_claim_tile_cost_reducer::ImportClaimTileCostArgs>("import_claim_tile_cost", &value.args)?.into()),
            "import_claim_tile_state" => Ok(__sdk::parse_reducer_args::<import_claim_tile_state_reducer::ImportClaimTileStateArgs>("import_claim_tile_state", &value.args)?.into()),
            "import_climb_requirement_desc" => Ok(__sdk::parse_reducer_args::<import_climb_requirement_desc_reducer::ImportClimbRequirementDescArgs>("import_climb_requirement_desc", &value.args)?.into()),
            "import_clothing_desc" => Ok(__sdk::parse_reducer_args::<import_clothing_desc_reducer::ImportClothingDescArgs>("import_clothing_desc", &value.args)?.into()),
            "import_collectible_desc" => Ok(__sdk::parse_reducer_args::<import_collectible_desc_reducer::ImportCollectibleDescArgs>("import_collectible_desc", &value.args)?.into()),
            "import_combat_action_desc" => Ok(__sdk::parse_reducer_args::<import_combat_action_desc_reducer::ImportCombatActionDescArgs>("import_combat_action_desc", &value.args)?.into()),
            "import_combat_state" => Ok(__sdk::parse_reducer_args::<import_combat_state_reducer::ImportCombatStateArgs>("import_combat_state", &value.args)?.into()),
            "import_config" => Ok(__sdk::parse_reducer_args::<import_config_reducer::ImportConfigArgs>("import_config", &value.args)?.into()),
            "import_construction_recipe_desc" => Ok(__sdk::parse_reducer_args::<import_construction_recipe_desc_reducer::ImportConstructionRecipeDescArgs>("import_construction_recipe_desc", &value.args)?.into()),
            "import_crafting_recipe_desc" => Ok(__sdk::parse_reducer_args::<import_crafting_recipe_desc_reducer::ImportCraftingRecipeDescArgs>("import_crafting_recipe_desc", &value.args)?.into()),
            "import_deconstruction_recipe_desc" => Ok(__sdk::parse_reducer_args::<import_deconstruction_recipe_desc_reducer::ImportDeconstructionRecipeDescArgs>("import_deconstruction_recipe_desc", &value.args)?.into()),
            "import_deployable_desc" => Ok(__sdk::parse_reducer_args::<import_deployable_desc_reducer::ImportDeployableDescArgs>("import_deployable_desc", &value.args)?.into()),
            "import_deployable_state" => Ok(__sdk::parse_reducer_args::<import_deployable_state_reducer::ImportDeployableStateArgs>("import_deployable_state", &value.args)?.into()),
            "import_dimension_description_state" => Ok(__sdk::parse_reducer_args::<import_dimension_description_state_reducer::ImportDimensionDescriptionStateArgs>("import_dimension_description_state", &value.args)?.into()),
            "import_dimension_network_description_state" => Ok(__sdk::parse_reducer_args::<import_dimension_network_description_state_reducer::ImportDimensionNetworkDescriptionStateArgs>("import_dimension_network_description_state", &value.args)?.into()),
            "import_distant_visible_entity_desc" => Ok(__sdk::parse_reducer_args::<import_distant_visible_entity_desc_reducer::ImportDistantVisibleEntityDescArgs>("import_distant_visible_entity_desc", &value.args)?.into()),
            "import_dropped_inventory_state" => Ok(__sdk::parse_reducer_args::<import_dropped_inventory_state_reducer::ImportDroppedInventoryStateArgs>("import_dropped_inventory_state", &value.args)?.into()),
            "import_elevator_desc" => Ok(__sdk::parse_reducer_args::<import_elevator_desc_reducer::ImportElevatorDescArgs>("import_elevator_desc", &value.args)?.into()),
            "import_emote_desc" => Ok(__sdk::parse_reducer_args::<import_emote_desc_reducer::ImportEmoteDescArgs>("import_emote_desc", &value.args)?.into()),
            "import_empire_colors_desc" => Ok(__sdk::parse_reducer_args::<import_empire_colors_desc_reducer::ImportEmpireColorsDescArgs>("import_empire_colors_desc", &value.args)?.into()),
            "import_empire_icon_desc" => Ok(__sdk::parse_reducer_args::<import_empire_icon_desc_reducer::ImportEmpireIconDescArgs>("import_empire_icon_desc", &value.args)?.into()),
            "import_empire_notification_desc" => Ok(__sdk::parse_reducer_args::<import_empire_notification_desc_reducer::ImportEmpireNotificationDescArgs>("import_empire_notification_desc", &value.args)?.into()),
            "import_empire_rank_desc" => Ok(__sdk::parse_reducer_args::<import_empire_rank_desc_reducer::ImportEmpireRankDescArgs>("import_empire_rank_desc", &value.args)?.into()),
            "import_empire_supplies_desc" => Ok(__sdk::parse_reducer_args::<import_empire_supplies_desc_reducer::ImportEmpireSuppliesDescArgs>("import_empire_supplies_desc", &value.args)?.into()),
            "import_empire_territory_desc" => Ok(__sdk::parse_reducer_args::<import_empire_territory_desc_reducer::ImportEmpireTerritoryDescArgs>("import_empire_territory_desc", &value.args)?.into()),
            "import_enemy_ai_params_desc" => Ok(__sdk::parse_reducer_args::<import_enemy_ai_params_desc_reducer::ImportEnemyAiParamsDescArgs>("import_enemy_ai_params_desc", &value.args)?.into()),
            "import_enemy_desc" => Ok(__sdk::parse_reducer_args::<import_enemy_desc_reducer::ImportEnemyDescArgs>("import_enemy_desc", &value.args)?.into()),
            "import_enemy_state" => Ok(__sdk::parse_reducer_args::<import_enemy_state_reducer::ImportEnemyStateArgs>("import_enemy_state", &value.args)?.into()),
            "import_environment_debuff_desc" => Ok(__sdk::parse_reducer_args::<import_environment_debuff_desc_reducer::ImportEnvironmentDebuffDescArgs>("import_environment_debuff_desc", &value.args)?.into()),
            "import_equipment_desc" => Ok(__sdk::parse_reducer_args::<import_equipment_desc_reducer::ImportEquipmentDescArgs>("import_equipment_desc", &value.args)?.into()),
            "import_equipment_state" => Ok(__sdk::parse_reducer_args::<import_equipment_state_reducer::ImportEquipmentStateArgs>("import_equipment_state", &value.args)?.into()),
            "import_experience_state" => Ok(__sdk::parse_reducer_args::<import_experience_state_reducer::ImportExperienceStateArgs>("import_experience_state", &value.args)?.into()),
            "import_exploration_chunks_state" => Ok(__sdk::parse_reducer_args::<import_exploration_chunks_state_reducer::ImportExplorationChunksStateArgs>("import_exploration_chunks_state", &value.args)?.into()),
            "import_extraction_recipe_desc" => Ok(__sdk::parse_reducer_args::<import_extraction_recipe_desc_reducer::ImportExtractionRecipeDescArgs>("import_extraction_recipe_desc", &value.args)?.into()),
            "import_food_desc" => Ok(__sdk::parse_reducer_args::<import_food_desc_reducer::ImportFoodDescArgs>("import_food_desc", &value.args)?.into()),
            "import_footprint_tile_state" => Ok(__sdk::parse_reducer_args::<import_footprint_tile_state_reducer::ImportFootprintTileStateArgs>("import_footprint_tile_state", &value.args)?.into()),
            "import_gate_desc" => Ok(__sdk::parse_reducer_args::<import_gate_desc_reducer::ImportGateDescArgs>("import_gate_desc", &value.args)?.into()),
            "import_globals" => Ok(__sdk::parse_reducer_args::<import_globals_reducer::ImportGlobalsArgs>("import_globals", &value.args)?.into()),
            "import_growth_state" => Ok(__sdk::parse_reducer_args::<import_growth_state_reducer::ImportGrowthStateArgs>("import_growth_state", &value.args)?.into()),
            "import_health_state" => Ok(__sdk::parse_reducer_args::<import_health_state_reducer::ImportHealthStateArgs>("import_health_state", &value.args)?.into()),
            "import_herd_cache" => Ok(__sdk::parse_reducer_args::<import_herd_cache_reducer::ImportHerdCacheArgs>("import_herd_cache", &value.args)?.into()),
            "import_hexite_exchange_entry_desc" => Ok(__sdk::parse_reducer_args::<import_hexite_exchange_entry_desc_reducer::ImportHexiteExchangeEntryDescArgs>("import_hexite_exchange_entry_desc", &value.args)?.into()),
            "import_identity_role" => Ok(__sdk::parse_reducer_args::<import_identity_role_reducer::ImportIdentityRoleArgs>("import_identity_role", &value.args)?.into()),
            "import_interior_collapse_trigger_state" => Ok(__sdk::parse_reducer_args::<import_interior_collapse_trigger_state_reducer::ImportInteriorCollapseTriggerStateArgs>("import_interior_collapse_trigger_state", &value.args)?.into()),
            "import_interior_environment_desc" => Ok(__sdk::parse_reducer_args::<import_interior_environment_desc_reducer::ImportInteriorEnvironmentDescArgs>("import_interior_environment_desc", &value.args)?.into()),
            "import_interior_instance_desc" => Ok(__sdk::parse_reducer_args::<import_interior_instance_desc_reducer::ImportInteriorInstanceDescArgs>("import_interior_instance_desc", &value.args)?.into()),
            "import_interior_network_desc" => Ok(__sdk::parse_reducer_args::<import_interior_network_desc_reducer::ImportInteriorNetworkDescArgs>("import_interior_network_desc", &value.args)?.into()),
            "import_interior_portal_connections_desc" => Ok(__sdk::parse_reducer_args::<import_interior_portal_connections_desc_reducer::ImportInteriorPortalConnectionsDescArgs>("import_interior_portal_connections_desc", &value.args)?.into()),
            "import_interior_shape_desc" => Ok(__sdk::parse_reducer_args::<import_interior_shape_desc_reducer::ImportInteriorShapeDescArgs>("import_interior_shape_desc", &value.args)?.into()),
            "import_interior_spawn_desc" => Ok(__sdk::parse_reducer_args::<import_interior_spawn_desc_reducer::ImportInteriorSpawnDescArgs>("import_interior_spawn_desc", &value.args)?.into()),
            "import_inventory_state" => Ok(__sdk::parse_reducer_args::<import_inventory_state_reducer::ImportInventoryStateArgs>("import_inventory_state", &value.args)?.into()),
            "import_item_conversion_recipe_desc" => Ok(__sdk::parse_reducer_args::<import_item_conversion_recipe_desc_reducer::ImportItemConversionRecipeDescArgs>("import_item_conversion_recipe_desc", &value.args)?.into()),
            "import_item_desc" => Ok(__sdk::parse_reducer_args::<import_item_desc_reducer::ImportItemDescArgs>("import_item_desc", &value.args)?.into()),
            "import_item_list_desc" => Ok(__sdk::parse_reducer_args::<import_item_list_desc_reducer::ImportItemListDescArgs>("import_item_list_desc", &value.args)?.into()),
            "import_knowledge_achievement_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_achievement_state_reducer::ImportKnowledgeAchievementStateArgs>("import_knowledge_achievement_state", &value.args)?.into()),
            "import_knowledge_battle_action_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_battle_action_state_reducer::ImportKnowledgeBattleActionStateArgs>("import_knowledge_battle_action_state", &value.args)?.into()),
            "import_knowledge_building_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_building_state_reducer::ImportKnowledgeBuildingStateArgs>("import_knowledge_building_state", &value.args)?.into()),
            "import_knowledge_cargo_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_cargo_state_reducer::ImportKnowledgeCargoStateArgs>("import_knowledge_cargo_state", &value.args)?.into()),
            "import_knowledge_construction_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_construction_state_reducer::ImportKnowledgeConstructionStateArgs>("import_knowledge_construction_state", &value.args)?.into()),
            "import_knowledge_craft_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_craft_state_reducer::ImportKnowledgeCraftStateArgs>("import_knowledge_craft_state", &value.args)?.into()),
            "import_knowledge_deployable_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_deployable_state_reducer::ImportKnowledgeDeployableStateArgs>("import_knowledge_deployable_state", &value.args)?.into()),
            "import_knowledge_enemy_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_enemy_state_reducer::ImportKnowledgeEnemyStateArgs>("import_knowledge_enemy_state", &value.args)?.into()),
            "import_knowledge_extract_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_extract_state_reducer::ImportKnowledgeExtractStateArgs>("import_knowledge_extract_state", &value.args)?.into()),
            "import_knowledge_item_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_item_state_reducer::ImportKnowledgeItemStateArgs>("import_knowledge_item_state", &value.args)?.into()),
            "import_knowledge_lore_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_lore_state_reducer::ImportKnowledgeLoreStateArgs>("import_knowledge_lore_state", &value.args)?.into()),
            "import_knowledge_npc_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_npc_state_reducer::ImportKnowledgeNpcStateArgs>("import_knowledge_npc_state", &value.args)?.into()),
            "import_knowledge_paving_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_paving_state_reducer::ImportKnowledgePavingStateArgs>("import_knowledge_paving_state", &value.args)?.into()),
            "import_knowledge_pillar_shaping_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_pillar_shaping_state_reducer::ImportKnowledgePillarShapingStateArgs>("import_knowledge_pillar_shaping_state", &value.args)?.into()),
            "import_knowledge_resource_placement_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_resource_placement_state_reducer::ImportKnowledgeResourcePlacementStateArgs>("import_knowledge_resource_placement_state", &value.args)?.into()),
            "import_knowledge_resource_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_resource_state_reducer::ImportKnowledgeResourceStateArgs>("import_knowledge_resource_state", &value.args)?.into()),
            "import_knowledge_ruins_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_ruins_state_reducer::ImportKnowledgeRuinsStateArgs>("import_knowledge_ruins_state", &value.args)?.into()),
            "import_knowledge_scroll_desc" => Ok(__sdk::parse_reducer_args::<import_knowledge_scroll_desc_reducer::ImportKnowledgeScrollDescArgs>("import_knowledge_scroll_desc", &value.args)?.into()),
            "import_knowledge_scroll_type_desc" => Ok(__sdk::parse_reducer_args::<import_knowledge_scroll_type_desc_reducer::ImportKnowledgeScrollTypeDescArgs>("import_knowledge_scroll_type_desc", &value.args)?.into()),
            "import_knowledge_secondary_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_secondary_state_reducer::ImportKnowledgeSecondaryStateArgs>("import_knowledge_secondary_state", &value.args)?.into()),
            "import_knowledge_stat_modifier_desc" => Ok(__sdk::parse_reducer_args::<import_knowledge_stat_modifier_desc_reducer::ImportKnowledgeStatModifierDescArgs>("import_knowledge_stat_modifier_desc", &value.args)?.into()),
            "import_knowledge_vault_state" => Ok(__sdk::parse_reducer_args::<import_knowledge_vault_state_reducer::ImportKnowledgeVaultStateArgs>("import_knowledge_vault_state", &value.args)?.into()),
            "import_location_cache" => Ok(__sdk::parse_reducer_args::<import_location_cache_reducer::ImportLocationCacheArgs>("import_location_cache", &value.args)?.into()),
            "import_location_state" => Ok(__sdk::parse_reducer_args::<import_location_state_reducer::ImportLocationStateArgs>("import_location_state", &value.args)?.into()),
            "import_loot_chest_desc" => Ok(__sdk::parse_reducer_args::<import_loot_chest_desc_reducer::ImportLootChestDescArgs>("import_loot_chest_desc", &value.args)?.into()),
            "import_loot_chest_state" => Ok(__sdk::parse_reducer_args::<import_loot_chest_state_reducer::ImportLootChestStateArgs>("import_loot_chest_state", &value.args)?.into()),
            "import_loot_rarity_desc" => Ok(__sdk::parse_reducer_args::<import_loot_rarity_desc_reducer::ImportLootRarityDescArgs>("import_loot_rarity_desc", &value.args)?.into()),
            "import_loot_table_desc" => Ok(__sdk::parse_reducer_args::<import_loot_table_desc_reducer::ImportLootTableDescArgs>("import_loot_table_desc", &value.args)?.into()),
            "import_mobile_entity_state" => Ok(__sdk::parse_reducer_args::<import_mobile_entity_state_reducer::ImportMobileEntityStateArgs>("import_mobile_entity_state", &value.args)?.into()),
            "import_mounting_state" => Ok(__sdk::parse_reducer_args::<import_mounting_state_reducer::ImportMountingStateArgs>("import_mounting_state", &value.args)?.into()),
            "import_npc_desc" => Ok(__sdk::parse_reducer_args::<import_npc_desc_reducer::ImportNpcDescArgs>("import_npc_desc", &value.args)?.into()),
            "import_npc_state" => Ok(__sdk::parse_reducer_args::<import_npc_state_reducer::ImportNpcStateArgs>("import_npc_state", &value.args)?.into()),
            "import_onboarding_reward_desc" => Ok(__sdk::parse_reducer_args::<import_onboarding_reward_desc_reducer::ImportOnboardingRewardDescArgs>("import_onboarding_reward_desc", &value.args)?.into()),
            "import_onboarding_state" => Ok(__sdk::parse_reducer_args::<import_onboarding_state_reducer::ImportOnboardingStateArgs>("import_onboarding_state", &value.args)?.into()),
            "import_parameters_desc" => Ok(__sdk::parse_reducer_args::<import_parameters_desc_reducer::ImportParametersDescArgs>("import_parameters_desc", &value.args)?.into()),
            "import_pathfinding_desc" => Ok(__sdk::parse_reducer_args::<import_pathfinding_desc_reducer::ImportPathfindingDescArgs>("import_pathfinding_desc", &value.args)?.into()),
            "import_paved_tile_state" => Ok(__sdk::parse_reducer_args::<import_paved_tile_state_reducer::ImportPavedTileStateArgs>("import_paved_tile_state", &value.args)?.into()),
            "import_paving_tile_desc" => Ok(__sdk::parse_reducer_args::<import_paving_tile_desc_reducer::ImportPavingTileDescArgs>("import_paving_tile_desc", &value.args)?.into()),
            "import_pillar_shaping_desc" => Ok(__sdk::parse_reducer_args::<import_pillar_shaping_desc_reducer::ImportPillarShapingDescArgs>("import_pillar_shaping_desc", &value.args)?.into()),
            "import_player_action_desc" => Ok(__sdk::parse_reducer_args::<import_player_action_desc_reducer::ImportPlayerActionDescArgs>("import_player_action_desc", &value.args)?.into()),
            "import_player_action_state" => Ok(__sdk::parse_reducer_args::<import_player_action_state_reducer::ImportPlayerActionStateArgs>("import_player_action_state", &value.args)?.into()),
            "import_player_housing_desc" => Ok(__sdk::parse_reducer_args::<import_player_housing_desc_reducer::ImportPlayerHousingDescArgs>("import_player_housing_desc", &value.args)?.into()),
            "import_player_prefs_state" => Ok(__sdk::parse_reducer_args::<import_player_prefs_state_reducer::ImportPlayerPrefsStateArgs>("import_player_prefs_state", &value.args)?.into()),
            "import_player_state" => Ok(__sdk::parse_reducer_args::<import_player_state_reducer::ImportPlayerStateArgs>("import_player_state", &value.args)?.into()),
            "import_portal_state" => Ok(__sdk::parse_reducer_args::<import_portal_state_reducer::ImportPortalStateArgs>("import_portal_state", &value.args)?.into()),
            "import_private_parameters_desc" => Ok(__sdk::parse_reducer_args::<import_private_parameters_desc_reducer::ImportPrivateParametersDescArgs>("import_private_parameters_desc", &value.args)?.into()),
            "import_progressive_action_state" => Ok(__sdk::parse_reducer_args::<import_progressive_action_state_reducer::ImportProgressiveActionStateArgs>("import_progressive_action_state", &value.args)?.into()),
            "import_project_site_state" => Ok(__sdk::parse_reducer_args::<import_project_site_state_reducer::ImportProjectSiteStateArgs>("import_project_site_state", &value.args)?.into()),
            "import_rent_state" => Ok(__sdk::parse_reducer_args::<import_rent_state_reducer::ImportRentStateArgs>("import_rent_state", &value.args)?.into()),
            "import_resource_clump_desc" => Ok(__sdk::parse_reducer_args::<import_resource_clump_desc_reducer::ImportResourceClumpDescArgs>("import_resource_clump_desc", &value.args)?.into()),
            "import_resource_count" => Ok(__sdk::parse_reducer_args::<import_resource_count_reducer::ImportResourceCountArgs>("import_resource_count", &value.args)?.into()),
            "import_resource_desc" => Ok(__sdk::parse_reducer_args::<import_resource_desc_reducer::ImportResourceDescArgs>("import_resource_desc", &value.args)?.into()),
            "import_resource_growth_recipe_desc" => Ok(__sdk::parse_reducer_args::<import_resource_growth_recipe_desc_reducer::ImportResourceGrowthRecipeDescArgs>("import_resource_growth_recipe_desc", &value.args)?.into()),
            "import_resource_placement_recipe_desc" => Ok(__sdk::parse_reducer_args::<import_resource_placement_recipe_desc_reducer::ImportResourcePlacementRecipeDescArgs>("import_resource_placement_recipe_desc", &value.args)?.into()),
            "import_resource_state" => Ok(__sdk::parse_reducer_args::<import_resource_state_reducer::ImportResourceStateArgs>("import_resource_state", &value.args)?.into()),
            "import_resources_log" => Ok(__sdk::parse_reducer_args::<import_resources_log_reducer::ImportResourcesLogArgs>("import_resources_log", &value.args)?.into()),
            "import_satiation_state" => Ok(__sdk::parse_reducer_args::<import_satiation_state_reducer::ImportSatiationStateArgs>("import_satiation_state", &value.args)?.into()),
            "import_secondary_knowledge_desc" => Ok(__sdk::parse_reducer_args::<import_secondary_knowledge_desc_reducer::ImportSecondaryKnowledgeDescArgs>("import_secondary_knowledge_desc", &value.args)?.into()),
            "import_server_identity" => Ok(__sdk::parse_reducer_args::<import_server_identity_reducer::ImportServerIdentityArgs>("import_server_identity", &value.args)?.into()),
            "import_signed_in_player_state" => Ok(__sdk::parse_reducer_args::<import_signed_in_player_state_reducer::ImportSignedInPlayerStateArgs>("import_signed_in_player_state", &value.args)?.into()),
            "import_skill_desc" => Ok(__sdk::parse_reducer_args::<import_skill_desc_reducer::ImportSkillDescArgs>("import_skill_desc", &value.args)?.into()),
            "import_stamina_state" => Ok(__sdk::parse_reducer_args::<import_stamina_state_reducer::ImportStaminaStateArgs>("import_stamina_state", &value.args)?.into()),
            "import_target_state" => Ok(__sdk::parse_reducer_args::<import_target_state_reducer::ImportTargetStateArgs>("import_target_state", &value.args)?.into()),
            "import_targetable_state" => Ok(__sdk::parse_reducer_args::<import_targetable_state_reducer::ImportTargetableStateArgs>("import_targetable_state", &value.args)?.into()),
            "import_targeting_matrix_desc" => Ok(__sdk::parse_reducer_args::<import_targeting_matrix_desc_reducer::ImportTargetingMatrixDescArgs>("import_targeting_matrix_desc", &value.args)?.into()),
            "import_teleport_item_desc" => Ok(__sdk::parse_reducer_args::<import_teleport_item_desc_reducer::ImportTeleportItemDescArgs>("import_teleport_item_desc", &value.args)?.into()),
            "import_terraform_recipe_desc" => Ok(__sdk::parse_reducer_args::<import_terraform_recipe_desc_reducer::ImportTerraformRecipeDescArgs>("import_terraform_recipe_desc", &value.args)?.into()),
            "import_terrain_chunk_state" => Ok(__sdk::parse_reducer_args::<import_terrain_chunk_state_reducer::ImportTerrainChunkStateArgs>("import_terrain_chunk_state", &value.args)?.into()),
            "import_tool_desc" => Ok(__sdk::parse_reducer_args::<import_tool_desc_reducer::ImportToolDescArgs>("import_tool_desc", &value.args)?.into()),
            "import_tool_type_desc" => Ok(__sdk::parse_reducer_args::<import_tool_type_desc_reducer::ImportToolTypeDescArgs>("import_tool_type_desc", &value.args)?.into()),
            "import_trade_order_state" => Ok(__sdk::parse_reducer_args::<import_trade_order_state_reducer::ImportTradeOrderStateArgs>("import_trade_order_state", &value.args)?.into()),
            "import_trade_session_state" => Ok(__sdk::parse_reducer_args::<import_trade_session_state_reducer::ImportTradeSessionStateArgs>("import_trade_session_state", &value.args)?.into()),
            "import_traveler_task_desc" => Ok(__sdk::parse_reducer_args::<import_traveler_task_desc_reducer::ImportTravelerTaskDescArgs>("import_traveler_task_desc", &value.args)?.into()),
            "import_traveler_trade_order_desc" => Ok(__sdk::parse_reducer_args::<import_traveler_trade_order_desc_reducer::ImportTravelerTradeOrderDescArgs>("import_traveler_trade_order_desc", &value.args)?.into()),
            "import_user_moderation_state" => Ok(__sdk::parse_reducer_args::<import_user_moderation_state_reducer::ImportUserModerationStateArgs>("import_user_moderation_state", &value.args)?.into()),
            "import_user_state" => Ok(__sdk::parse_reducer_args::<import_user_state_reducer::ImportUserStateArgs>("import_user_state", &value.args)?.into()),
            "import_vault_state" => Ok(__sdk::parse_reducer_args::<import_vault_state_reducer::ImportVaultStateArgs>("import_vault_state", &value.args)?.into()),
            "import_wall_desc" => Ok(__sdk::parse_reducer_args::<import_wall_desc_reducer::ImportWallDescArgs>("import_wall_desc", &value.args)?.into()),
            "import_weapon_desc" => Ok(__sdk::parse_reducer_args::<import_weapon_desc_reducer::ImportWeaponDescArgs>("import_weapon_desc", &value.args)?.into()),
            "import_weapon_type_desc" => Ok(__sdk::parse_reducer_args::<import_weapon_type_desc_reducer::ImportWeaponTypeDescArgs>("import_weapon_type_desc", &value.args)?.into()),
            "import_world_region_name_state" => Ok(__sdk::parse_reducer_args::<import_world_region_name_state_reducer::ImportWorldRegionNameStateArgs>("import_world_region_name_state", &value.args)?.into()),
            "import_world_region_state" => Ok(__sdk::parse_reducer_args::<import_world_region_state_reducer::ImportWorldRegionStateArgs>("import_world_region_state", &value.args)?.into()),
            "insert_resources_log" => Ok(__sdk::parse_reducer_args::<insert_resources_log_reducer::InsertResourcesLogArgs>("insert_resources_log", &value.args)?.into()),
            "insert_terrain_chunk" => Ok(__sdk::parse_reducer_args::<insert_terrain_chunk_reducer::InsertTerrainChunkArgs>("insert_terrain_chunk", &value.args)?.into()),
            "interior_set_collapsed" => Ok(__sdk::parse_reducer_args::<interior_set_collapsed_reducer::InteriorSetCollapsedArgs>("interior_set_collapsed", &value.args)?.into()),
            "interior_set_collapsed_scheduled" => Ok(__sdk::parse_reducer_args::<interior_set_collapsed_scheduled_reducer::InteriorSetCollapsedScheduledArgs>("interior_set_collapsed_scheduled", &value.args)?.into()),
            "inventory_create_personal" => Ok(__sdk::parse_reducer_args::<inventory_create_personal_reducer::InventoryCreatePersonalArgs>("inventory_create_personal", &value.args)?.into()),
            "inventory_sort" => Ok(__sdk::parse_reducer_args::<inventory_sort_reducer::InventorySortArgs>("inventory_sort", &value.args)?.into()),
            "item_convert" => Ok(__sdk::parse_reducer_args::<item_convert_reducer::ItemConvertArgs>("item_convert", &value.args)?.into()),
            "item_convert_start" => Ok(__sdk::parse_reducer_args::<item_convert_start_reducer::ItemConvertStartArgs>("item_convert_start", &value.args)?.into()),
            "item_drop" => Ok(__sdk::parse_reducer_args::<item_drop_reducer::ItemDropArgs>("item_drop", &value.args)?.into()),
            "item_pick_up" => Ok(__sdk::parse_reducer_args::<item_pick_up_reducer::ItemPickUpArgs>("item_pick_up", &value.args)?.into()),
            "item_stack_move" => Ok(__sdk::parse_reducer_args::<item_stack_move_reducer::ItemStackMoveArgs>("item_stack_move", &value.args)?.into()),
            "item_stack_move_all" => Ok(__sdk::parse_reducer_args::<item_stack_move_all_reducer::ItemStackMoveAllArgs>("item_stack_move_all", &value.args)?.into()),
            "item_stack_split" => Ok(__sdk::parse_reducer_args::<item_stack_split_reducer::ItemStackSplitArgs>("item_stack_split", &value.args)?.into()),
            "item_use" => Ok(__sdk::parse_reducer_args::<item_use_reducer::ItemUseArgs>("item_use", &value.args)?.into()),
            "item_use_start" => Ok(__sdk::parse_reducer_args::<item_use_start_reducer::ItemUseStartArgs>("item_use_start", &value.args)?.into()),
            "load_config" => Ok(__sdk::parse_reducer_args::<load_config_reducer::LoadConfigArgs>("load_config", &value.args)?.into()),
            "log_claim_member_leaderboard" => Ok(__sdk::parse_reducer_args::<log_claim_member_leaderboard_reducer::LogClaimMemberLeaderboardArgs>("log_claim_member_leaderboard", &value.args)?.into()),
            "log_claim_tier_leaderboard" => Ok(__sdk::parse_reducer_args::<log_claim_tier_leaderboard_reducer::LogClaimTierLeaderboardArgs>("log_claim_tier_leaderboard", &value.args)?.into()),
            "loot_chest_despawn" => Ok(__sdk::parse_reducer_args::<loot_chest_despawn_reducer::LootChestDespawnArgs>("loot_chest_despawn", &value.args)?.into()),
            "loot_chest_spawn" => Ok(__sdk::parse_reducer_args::<loot_chest_spawn_reducer::LootChestSpawnArgs>("loot_chest_spawn", &value.args)?.into()),
            "npc_ai_agent_loop" => Ok(__sdk::parse_reducer_args::<npc_ai_agent_loop_reducer::NpcAiAgentLoopArgs>("npc_ai_agent_loop", &value.args)?.into()),
            "on_durability_zero" => Ok(__sdk::parse_reducer_args::<on_durability_zero_reducer::OnDurabilityZeroArgs>("on_durability_zero", &value.args)?.into()),
            "on_inter_module_message_processed" => Ok(__sdk::parse_reducer_args::<on_inter_module_message_processed_reducer::OnInterModuleMessageProcessedArgs>("on_inter_module_message_processed", &value.args)?.into()),
            "order_cancel" => Ok(__sdk::parse_reducer_args::<order_cancel_reducer::OrderCancelArgs>("order_cancel", &value.args)?.into()),
            "order_collect" => Ok(__sdk::parse_reducer_args::<order_collect_reducer::OrderCollectArgs>("order_collect", &value.args)?.into()),
            "order_edit_buy_order" => Ok(__sdk::parse_reducer_args::<order_edit_buy_order_reducer::OrderEditBuyOrderArgs>("order_edit_buy_order", &value.args)?.into()),
            "order_edit_sell_order" => Ok(__sdk::parse_reducer_args::<order_edit_sell_order_reducer::OrderEditSellOrderArgs>("order_edit_sell_order", &value.args)?.into()),
            "order_post_buy_order" => Ok(__sdk::parse_reducer_args::<order_post_buy_order_reducer::OrderPostBuyOrderArgs>("order_post_buy_order", &value.args)?.into()),
            "order_post_sell_order" => Ok(__sdk::parse_reducer_args::<order_post_sell_order_reducer::OrderPostSellOrderArgs>("order_post_sell_order", &value.args)?.into()),
            "passive_craft_cancel" => Ok(__sdk::parse_reducer_args::<passive_craft_cancel_reducer::PassiveCraftCancelArgs>("passive_craft_cancel", &value.args)?.into()),
            "passive_craft_collect" => Ok(__sdk::parse_reducer_args::<passive_craft_collect_reducer::PassiveCraftCollectArgs>("passive_craft_collect", &value.args)?.into()),
            "passive_craft_collect_all" => Ok(__sdk::parse_reducer_args::<passive_craft_collect_all_reducer::PassiveCraftCollectAllArgs>("passive_craft_collect_all", &value.args)?.into()),
            "passive_craft_process" => Ok(__sdk::parse_reducer_args::<passive_craft_process_reducer::PassiveCraftProcessArgs>("passive_craft_process", &value.args)?.into()),
            "passive_craft_queue" => Ok(__sdk::parse_reducer_args::<passive_craft_queue_reducer::PassiveCraftQueueArgs>("passive_craft_queue", &value.args)?.into()),
            "pause_play_timer" => Ok(__sdk::parse_reducer_args::<pause_play_timer_reducer::PausePlayTimerArgs>("pause_play_timer", &value.args)?.into()),
            "paving_destroy_tile" => Ok(__sdk::parse_reducer_args::<paving_destroy_tile_reducer::PavingDestroyTileArgs>("paving_destroy_tile", &value.args)?.into()),
            "paving_destroy_tile_start" => Ok(__sdk::parse_reducer_args::<paving_destroy_tile_start_reducer::PavingDestroyTileStartArgs>("paving_destroy_tile_start", &value.args)?.into()),
            "paving_place_tile" => Ok(__sdk::parse_reducer_args::<paving_place_tile_reducer::PavingPlaceTileArgs>("paving_place_tile", &value.args)?.into()),
            "paving_place_tile_start" => Ok(__sdk::parse_reducer_args::<paving_place_tile_start_reducer::PavingPlaceTileStartArgs>("paving_place_tile_start", &value.args)?.into()),
            "permission_edit" => Ok(__sdk::parse_reducer_args::<permission_edit_reducer::PermissionEditArgs>("permission_edit", &value.args)?.into()),
            "pillar_shaping_destroy" => Ok(__sdk::parse_reducer_args::<pillar_shaping_destroy_reducer::PillarShapingDestroyArgs>("pillar_shaping_destroy", &value.args)?.into()),
            "pillar_shaping_destroy_start" => Ok(__sdk::parse_reducer_args::<pillar_shaping_destroy_start_reducer::PillarShapingDestroyStartArgs>("pillar_shaping_destroy_start", &value.args)?.into()),
            "pillar_shaping_place_pillar" => Ok(__sdk::parse_reducer_args::<pillar_shaping_place_pillar_reducer::PillarShapingPlacePillarArgs>("pillar_shaping_place_pillar", &value.args)?.into()),
            "pillar_shaping_place_pillar_start" => Ok(__sdk::parse_reducer_args::<pillar_shaping_place_pillar_start_reducer::PillarShapingPlacePillarStartArgs>("pillar_shaping_place_pillar_start", &value.args)?.into()),
            "player_action_cancel" => Ok(__sdk::parse_reducer_args::<player_action_cancel_reducer::PlayerActionCancelArgs>("player_action_cancel", &value.args)?.into()),
            "player_cancel_region_transfer" => Ok(__sdk::parse_reducer_args::<player_cancel_region_transfer_reducer::PlayerCancelRegionTransferArgs>("player_cancel_region_transfer", &value.args)?.into()),
            "player_clear_action_state" => Ok(__sdk::parse_reducer_args::<player_clear_action_state_reducer::PlayerClearActionStateArgs>("player_clear_action_state", &value.args)?.into()),
            "player_climb" => Ok(__sdk::parse_reducer_args::<player_climb_reducer::PlayerClimbArgs>("player_climb", &value.args)?.into()),
            "player_climb_start" => Ok(__sdk::parse_reducer_args::<player_climb_start_reducer::PlayerClimbStartArgs>("player_climb_start", &value.args)?.into()),
            "player_complete_task" => Ok(__sdk::parse_reducer_args::<player_complete_task_reducer::PlayerCompleteTaskArgs>("player_complete_task", &value.args)?.into()),
            "player_death_start" => Ok(__sdk::parse_reducer_args::<player_death_start_reducer::PlayerDeathStartArgs>("player_death_start", &value.args)?.into()),
            "player_dismiss_alert" => Ok(__sdk::parse_reducer_args::<player_dismiss_alert_reducer::PlayerDismissAlertArgs>("player_dismiss_alert", &value.args)?.into()),
            "player_duel_initiate" => Ok(__sdk::parse_reducer_args::<player_duel_initiate_reducer::PlayerDuelInitiateArgs>("player_duel_initiate", &value.args)?.into()),
            "player_elevator_arrive" => Ok(__sdk::parse_reducer_args::<player_elevator_arrive_reducer::PlayerElevatorArriveArgs>("player_elevator_arrive", &value.args)?.into()),
            "player_housing_change_entrance" => Ok(__sdk::parse_reducer_args::<player_housing_change_entrance_reducer::PlayerHousingChangeEntranceArgs>("player_housing_change_entrance", &value.args)?.into()),
            "player_housing_enter" => Ok(__sdk::parse_reducer_args::<player_housing_enter_reducer::PlayerHousingEnterArgs>("player_housing_enter", &value.args)?.into()),
            "player_housing_evict_player" => Ok(__sdk::parse_reducer_args::<player_housing_evict_player_reducer::PlayerHousingEvictPlayerArgs>("player_housing_evict_player", &value.args)?.into()),
            "player_housing_evict_player_complete" => Ok(__sdk::parse_reducer_args::<player_housing_evict_player_complete_reducer::PlayerHousingEvictPlayerCompleteArgs>("player_housing_evict_player_complete", &value.args)?.into()),
            "player_housing_income_agent_loop" => Ok(__sdk::parse_reducer_args::<player_housing_income_agent_loop_reducer::PlayerHousingIncomeAgentLoopArgs>("player_housing_income_agent_loop", &value.args)?.into()),
            "player_housing_request_access" => Ok(__sdk::parse_reducer_args::<player_housing_request_access_reducer::PlayerHousingRequestAccessArgs>("player_housing_request_access", &value.args)?.into()),
            "player_housing_update" => Ok(__sdk::parse_reducer_args::<player_housing_update_reducer::PlayerHousingUpdateArgs>("player_housing_update", &value.args)?.into()),
            "player_move" => Ok(__sdk::parse_reducer_args::<player_move_reducer::PlayerMoveArgs>("player_move", &value.args)?.into()),
            "player_notification_event_reducer" => Ok(__sdk::parse_reducer_args::<player_notification_event_reducer_reducer::PlayerNotificationEventReducerArgs>("player_notification_event_reducer", &value.args)?.into()),
            "player_queue_join" => Ok(__sdk::parse_reducer_args::<player_queue_join_reducer::PlayerQueueJoinArgs>("player_queue_join", &value.args)?.into()),
            "player_queue_leave" => Ok(__sdk::parse_reducer_args::<player_queue_leave_reducer::PlayerQueueLeaveArgs>("player_queue_leave", &value.args)?.into()),
            "player_regen_agent_loop" => Ok(__sdk::parse_reducer_args::<player_regen_agent_loop_reducer::PlayerRegenAgentLoopArgs>("player_regen_agent_loop", &value.args)?.into()),
            "player_region_crossover" => Ok(__sdk::parse_reducer_args::<player_region_crossover_reducer::PlayerRegionCrossoverArgs>("player_region_crossover", &value.args)?.into()),
            "player_region_transfer_event_reducer" => Ok(__sdk::parse_reducer_args::<player_region_transfer_event_reducer_reducer::PlayerRegionTransferEventReducerArgs>("player_region_transfer_event_reducer", &value.args)?.into()),
            "player_respawn" => Ok(__sdk::parse_reducer_args::<player_respawn_reducer::PlayerRespawnArgs>("player_respawn", &value.args)?.into()),
            "player_set_default_deployable" => Ok(__sdk::parse_reducer_args::<player_set_default_deployable_reducer::PlayerSetDefaultDeployableArgs>("player_set_default_deployable", &value.args)?.into()),
            "player_set_name_outcome_event_reducer" => Ok(__sdk::parse_reducer_args::<player_set_name_outcome_event_reducer_reducer::PlayerSetNameOutcomeEventReducerArgs>("player_set_name_outcome_event_reducer", &value.args)?.into()),
            "player_teleport_home" => Ok(__sdk::parse_reducer_args::<player_teleport_home_reducer::PlayerTeleportHomeArgs>("player_teleport_home", &value.args)?.into()),
            "player_teleport_home_start" => Ok(__sdk::parse_reducer_args::<player_teleport_home_start_reducer::PlayerTeleportHomeStartArgs>("player_teleport_home_start", &value.args)?.into()),
            "player_teleport_waystone" => Ok(__sdk::parse_reducer_args::<player_teleport_waystone_reducer::PlayerTeleportWaystoneArgs>("player_teleport_waystone", &value.args)?.into()),
            "player_teleport_waystone_start" => Ok(__sdk::parse_reducer_args::<player_teleport_waystone_start_reducer::PlayerTeleportWaystoneStartArgs>("player_teleport_waystone_start", &value.args)?.into()),
            "player_use_elevator" => Ok(__sdk::parse_reducer_args::<player_use_elevator_reducer::PlayerUseElevatorArgs>("player_use_elevator", &value.args)?.into()),
            "player_vote_answer" => Ok(__sdk::parse_reducer_args::<player_vote_answer_reducer::PlayerVoteAnswerArgs>("player_vote_answer", &value.args)?.into()),
            "player_vote_conclude" => Ok(__sdk::parse_reducer_args::<player_vote_conclude_reducer::PlayerVoteConcludeArgs>("player_vote_conclude", &value.args)?.into()),
            "pocket_swap_contents" => Ok(__sdk::parse_reducer_args::<pocket_swap_contents_reducer::PocketSwapContentsArgs>("pocket_swap_contents", &value.args)?.into()),
            "portal_enter" => Ok(__sdk::parse_reducer_args::<portal_enter_reducer::PortalEnterArgs>("portal_enter", &value.args)?.into()),
            "process_inter_module_message" => Ok(__sdk::parse_reducer_args::<process_inter_module_message_reducer::ProcessInterModuleMessageArgs>("process_inter_module_message", &value.args)?.into()),
            "project_site_add_materials" => Ok(__sdk::parse_reducer_args::<project_site_add_materials_reducer::ProjectSiteAddMaterialsArgs>("project_site_add_materials", &value.args)?.into()),
            "project_site_advance_project" => Ok(__sdk::parse_reducer_args::<project_site_advance_project_reducer::ProjectSiteAdvanceProjectArgs>("project_site_advance_project", &value.args)?.into()),
            "project_site_advance_project_start" => Ok(__sdk::parse_reducer_args::<project_site_advance_project_start_reducer::ProjectSiteAdvanceProjectStartArgs>("project_site_advance_project_start", &value.args)?.into()),
            "project_site_cancel" => Ok(__sdk::parse_reducer_args::<project_site_cancel_reducer::ProjectSiteCancelArgs>("project_site_cancel", &value.args)?.into()),
            "project_site_place" => Ok(__sdk::parse_reducer_args::<project_site_place_reducer::ProjectSitePlaceArgs>("project_site_place", &value.args)?.into()),
            "region_popuplation_agent_loop" => Ok(__sdk::parse_reducer_args::<region_popuplation_agent_loop_reducer::RegionPopuplationAgentLoopArgs>("region_popuplation_agent_loop", &value.args)?.into()),
            "rent_add_listing" => Ok(__sdk::parse_reducer_args::<rent_add_listing_reducer::RentAddListingArgs>("rent_add_listing", &value.args)?.into()),
            "rent_add_tenant" => Ok(__sdk::parse_reducer_args::<rent_add_tenant_reducer::RentAddTenantArgs>("rent_add_tenant", &value.args)?.into()),
            "rent_collect_eviction_fee" => Ok(__sdk::parse_reducer_args::<rent_collect_eviction_fee_reducer::RentCollectEvictionFeeArgs>("rent_collect_eviction_fee", &value.args)?.into()),
            "rent_collector_agent_loop" => Ok(__sdk::parse_reducer_args::<rent_collector_agent_loop_reducer::RentCollectorAgentLoopArgs>("rent_collector_agent_loop", &value.args)?.into()),
            "rent_deposit_coins" => Ok(__sdk::parse_reducer_args::<rent_deposit_coins_reducer::RentDepositCoinsArgs>("rent_deposit_coins", &value.args)?.into()),
            "rent_evict" => Ok(__sdk::parse_reducer_args::<rent_evict_reducer::RentEvictArgs>("rent_evict", &value.args)?.into()),
            "rent_evict_term" => Ok(__sdk::parse_reducer_args::<rent_evict_term_reducer::RentEvictTermArgs>("rent_evict_term", &value.args)?.into()),
            "rent_purchase" => Ok(__sdk::parse_reducer_args::<rent_purchase_reducer::RentPurchaseArgs>("rent_purchase", &value.args)?.into()),
            "rent_remove_tenant" => Ok(__sdk::parse_reducer_args::<rent_remove_tenant_reducer::RentRemoveTenantArgs>("rent_remove_tenant", &value.args)?.into()),
            "rent_set_daily_rate" => Ok(__sdk::parse_reducer_args::<rent_set_daily_rate_reducer::RentSetDailyRateArgs>("rent_set_daily_rate", &value.args)?.into()),
            "rent_terminate" => Ok(__sdk::parse_reducer_args::<rent_terminate_reducer::RentTerminateArgs>("rent_terminate", &value.args)?.into()),
            "rent_unlist" => Ok(__sdk::parse_reducer_args::<rent_unlist_reducer::RentUnlistArgs>("rent_unlist", &value.args)?.into()),
            "report_chat_message" => Ok(__sdk::parse_reducer_args::<report_chat_message_reducer::ReportChatMessageArgs>("report_chat_message", &value.args)?.into()),
            "report_player" => Ok(__sdk::parse_reducer_args::<report_player_reducer::ReportPlayerArgs>("report_player", &value.args)?.into()),
            "reset_chunk_index" => Ok(__sdk::parse_reducer_args::<reset_chunk_index_reducer::ResetChunkIndexArgs>("reset_chunk_index", &value.args)?.into()),
            "reset_chunk_index_with_dimension" => Ok(__sdk::parse_reducer_args::<reset_chunk_index_with_dimension_reducer::ResetChunkIndexWithDimensionArgs>("reset_chunk_index_with_dimension", &value.args)?.into()),
            "reset_mobile_entity_position" => Ok(__sdk::parse_reducer_args::<reset_mobile_entity_position_reducer::ResetMobileEntityPositionArgs>("reset_mobile_entity_position", &value.args)?.into()),
            "reset_onboarding" => Ok(__sdk::parse_reducer_args::<reset_onboarding_reducer::ResetOnboardingArgs>("reset_onboarding", &value.args)?.into()),
            "resource_spawn_scheduled" => Ok(__sdk::parse_reducer_args::<resource_spawn_scheduled_reducer::ResourceSpawnScheduledArgs>("resource_spawn_scheduled", &value.args)?.into()),
            "resources_regen" => Ok(__sdk::parse_reducer_args::<resources_regen_reducer::ResourcesRegenArgs>("resources_regen", &value.args)?.into()),
            "respawn_interior_npcs" => Ok(__sdk::parse_reducer_args::<respawn_interior_npcs_reducer::RespawnInteriorNpcsArgs>("respawn_interior_npcs", &value.args)?.into()),
            "respawn_resource_in_chunk" => Ok(__sdk::parse_reducer_args::<respawn_resource_in_chunk_reducer::RespawnResourceInChunkArgs>("respawn_resource_in_chunk", &value.args)?.into()),
            "retrieve_lost_item" => Ok(__sdk::parse_reducer_args::<retrieve_lost_item_reducer::RetrieveLostItemArgs>("retrieve_lost_item", &value.args)?.into()),
            "scroll_read" => Ok(__sdk::parse_reducer_args::<scroll_read_reducer::ScrollReadArgs>("scroll_read", &value.args)?.into()),
            "search_for_closest_building" => Ok(__sdk::parse_reducer_args::<search_for_closest_building_reducer::SearchForClosestBuildingArgs>("search_for_closest_building", &value.args)?.into()),
            "search_for_closest_building_type" => Ok(__sdk::parse_reducer_args::<search_for_closest_building_type_reducer::SearchForClosestBuildingTypeArgs>("search_for_closest_building_type", &value.args)?.into()),
            "server_teleport_player" => Ok(__sdk::parse_reducer_args::<server_teleport_player_reducer::ServerTeleportPlayerArgs>("server_teleport_player", &value.args)?.into()),
            "set_home" => Ok(__sdk::parse_reducer_args::<set_home_reducer::SetHomeArgs>("set_home", &value.args)?.into()),
            "sign_in" => Ok(__sdk::parse_reducer_args::<sign_in_reducer::SignInArgs>("sign_in", &value.args)?.into()),
            "sign_out" => Ok(__sdk::parse_reducer_args::<sign_out_reducer::SignOutArgs>("sign_out", &value.args)?.into()),
            "sleep" => Ok(__sdk::parse_reducer_args::<sleep_reducer::SleepArgs>("sleep", &value.args)?.into()),
            "stage_achievement_desc" => Ok(__sdk::parse_reducer_args::<stage_achievement_desc_reducer::StageAchievementDescArgs>("stage_achievement_desc", &value.args)?.into()),
            "stage_alert_desc" => Ok(__sdk::parse_reducer_args::<stage_alert_desc_reducer::StageAlertDescArgs>("stage_alert_desc", &value.args)?.into()),
            "stage_biome_desc" => Ok(__sdk::parse_reducer_args::<stage_biome_desc_reducer::StageBiomeDescArgs>("stage_biome_desc", &value.args)?.into()),
            "stage_buff_desc" => Ok(__sdk::parse_reducer_args::<stage_buff_desc_reducer::StageBuffDescArgs>("stage_buff_desc", &value.args)?.into()),
            "stage_buff_type_desc" => Ok(__sdk::parse_reducer_args::<stage_buff_type_desc_reducer::StageBuffTypeDescArgs>("stage_buff_type_desc", &value.args)?.into()),
            "stage_building_claim_desc" => Ok(__sdk::parse_reducer_args::<stage_building_claim_desc_reducer::StageBuildingClaimDescArgs>("stage_building_claim_desc", &value.args)?.into()),
            "stage_building_desc" => Ok(__sdk::parse_reducer_args::<stage_building_desc_reducer::StageBuildingDescArgs>("stage_building_desc", &value.args)?.into()),
            "stage_building_portal_desc" => Ok(__sdk::parse_reducer_args::<stage_building_portal_desc_reducer::StageBuildingPortalDescArgs>("stage_building_portal_desc", &value.args)?.into()),
            "stage_building_repairs_desc" => Ok(__sdk::parse_reducer_args::<stage_building_repairs_desc_reducer::StageBuildingRepairsDescArgs>("stage_building_repairs_desc", &value.args)?.into()),
            "stage_building_spawn_desc" => Ok(__sdk::parse_reducer_args::<stage_building_spawn_desc_reducer::StageBuildingSpawnDescArgs>("stage_building_spawn_desc", &value.args)?.into()),
            "stage_building_type_desc" => Ok(__sdk::parse_reducer_args::<stage_building_type_desc_reducer::StageBuildingTypeDescArgs>("stage_building_type_desc", &value.args)?.into()),
            "stage_cargo_desc" => Ok(__sdk::parse_reducer_args::<stage_cargo_desc_reducer::StageCargoDescArgs>("stage_cargo_desc", &value.args)?.into()),
            "stage_character_stat_desc" => Ok(__sdk::parse_reducer_args::<stage_character_stat_desc_reducer::StageCharacterStatDescArgs>("stage_character_stat_desc", &value.args)?.into()),
            "stage_chest_rarity_desc" => Ok(__sdk::parse_reducer_args::<stage_chest_rarity_desc_reducer::StageChestRarityDescArgs>("stage_chest_rarity_desc", &value.args)?.into()),
            "stage_claim_tech_desc" => Ok(__sdk::parse_reducer_args::<stage_claim_tech_desc_reducer::StageClaimTechDescArgs>("stage_claim_tech_desc", &value.args)?.into()),
            "stage_claim_tile_cost" => Ok(__sdk::parse_reducer_args::<stage_claim_tile_cost_reducer::StageClaimTileCostArgs>("stage_claim_tile_cost", &value.args)?.into()),
            "stage_climb_requirement_desc" => Ok(__sdk::parse_reducer_args::<stage_climb_requirement_desc_reducer::StageClimbRequirementDescArgs>("stage_climb_requirement_desc", &value.args)?.into()),
            "stage_clothing_desc" => Ok(__sdk::parse_reducer_args::<stage_clothing_desc_reducer::StageClothingDescArgs>("stage_clothing_desc", &value.args)?.into()),
            "stage_collectible_desc" => Ok(__sdk::parse_reducer_args::<stage_collectible_desc_reducer::StageCollectibleDescArgs>("stage_collectible_desc", &value.args)?.into()),
            "stage_combat_action_desc" => Ok(__sdk::parse_reducer_args::<stage_combat_action_desc_reducer::StageCombatActionDescArgs>("stage_combat_action_desc", &value.args)?.into()),
            "stage_construction_recipe_desc" => Ok(__sdk::parse_reducer_args::<stage_construction_recipe_desc_reducer::StageConstructionRecipeDescArgs>("stage_construction_recipe_desc", &value.args)?.into()),
            "stage_crafting_recipe_desc" => Ok(__sdk::parse_reducer_args::<stage_crafting_recipe_desc_reducer::StageCraftingRecipeDescArgs>("stage_crafting_recipe_desc", &value.args)?.into()),
            "stage_deconstruction_recipe_desc" => Ok(__sdk::parse_reducer_args::<stage_deconstruction_recipe_desc_reducer::StageDeconstructionRecipeDescArgs>("stage_deconstruction_recipe_desc", &value.args)?.into()),
            "stage_deployable_desc" => Ok(__sdk::parse_reducer_args::<stage_deployable_desc_reducer::StageDeployableDescArgs>("stage_deployable_desc", &value.args)?.into()),
            "stage_distant_visible_entity_desc" => Ok(__sdk::parse_reducer_args::<stage_distant_visible_entity_desc_reducer::StageDistantVisibleEntityDescArgs>("stage_distant_visible_entity_desc", &value.args)?.into()),
            "stage_elevator_desc" => Ok(__sdk::parse_reducer_args::<stage_elevator_desc_reducer::StageElevatorDescArgs>("stage_elevator_desc", &value.args)?.into()),
            "stage_emote_desc" => Ok(__sdk::parse_reducer_args::<stage_emote_desc_reducer::StageEmoteDescArgs>("stage_emote_desc", &value.args)?.into()),
            "stage_empire_colors_desc" => Ok(__sdk::parse_reducer_args::<stage_empire_colors_desc_reducer::StageEmpireColorsDescArgs>("stage_empire_colors_desc", &value.args)?.into()),
            "stage_empire_icon_desc" => Ok(__sdk::parse_reducer_args::<stage_empire_icon_desc_reducer::StageEmpireIconDescArgs>("stage_empire_icon_desc", &value.args)?.into()),
            "stage_empire_notification_desc" => Ok(__sdk::parse_reducer_args::<stage_empire_notification_desc_reducer::StageEmpireNotificationDescArgs>("stage_empire_notification_desc", &value.args)?.into()),
            "stage_empire_rank_desc" => Ok(__sdk::parse_reducer_args::<stage_empire_rank_desc_reducer::StageEmpireRankDescArgs>("stage_empire_rank_desc", &value.args)?.into()),
            "stage_empire_supplies_desc" => Ok(__sdk::parse_reducer_args::<stage_empire_supplies_desc_reducer::StageEmpireSuppliesDescArgs>("stage_empire_supplies_desc", &value.args)?.into()),
            "stage_empire_territory_desc" => Ok(__sdk::parse_reducer_args::<stage_empire_territory_desc_reducer::StageEmpireTerritoryDescArgs>("stage_empire_territory_desc", &value.args)?.into()),
            "stage_enemy_ai_params_desc" => Ok(__sdk::parse_reducer_args::<stage_enemy_ai_params_desc_reducer::StageEnemyAiParamsDescArgs>("stage_enemy_ai_params_desc", &value.args)?.into()),
            "stage_enemy_desc" => Ok(__sdk::parse_reducer_args::<stage_enemy_desc_reducer::StageEnemyDescArgs>("stage_enemy_desc", &value.args)?.into()),
            "stage_environment_debuff_desc" => Ok(__sdk::parse_reducer_args::<stage_environment_debuff_desc_reducer::StageEnvironmentDebuffDescArgs>("stage_environment_debuff_desc", &value.args)?.into()),
            "stage_equipment_desc" => Ok(__sdk::parse_reducer_args::<stage_equipment_desc_reducer::StageEquipmentDescArgs>("stage_equipment_desc", &value.args)?.into()),
            "stage_extraction_recipe_desc" => Ok(__sdk::parse_reducer_args::<stage_extraction_recipe_desc_reducer::StageExtractionRecipeDescArgs>("stage_extraction_recipe_desc", &value.args)?.into()),
            "stage_food_desc" => Ok(__sdk::parse_reducer_args::<stage_food_desc_reducer::StageFoodDescArgs>("stage_food_desc", &value.args)?.into()),
            "stage_gate_desc" => Ok(__sdk::parse_reducer_args::<stage_gate_desc_reducer::StageGateDescArgs>("stage_gate_desc", &value.args)?.into()),
            "stage_hexite_exchange_entry_desc" => Ok(__sdk::parse_reducer_args::<stage_hexite_exchange_entry_desc_reducer::StageHexiteExchangeEntryDescArgs>("stage_hexite_exchange_entry_desc", &value.args)?.into()),
            "stage_interior_environment_desc" => Ok(__sdk::parse_reducer_args::<stage_interior_environment_desc_reducer::StageInteriorEnvironmentDescArgs>("stage_interior_environment_desc", &value.args)?.into()),
            "stage_interior_instance_desc" => Ok(__sdk::parse_reducer_args::<stage_interior_instance_desc_reducer::StageInteriorInstanceDescArgs>("stage_interior_instance_desc", &value.args)?.into()),
            "stage_interior_network_desc" => Ok(__sdk::parse_reducer_args::<stage_interior_network_desc_reducer::StageInteriorNetworkDescArgs>("stage_interior_network_desc", &value.args)?.into()),
            "stage_interior_portal_connections_desc" => Ok(__sdk::parse_reducer_args::<stage_interior_portal_connections_desc_reducer::StageInteriorPortalConnectionsDescArgs>("stage_interior_portal_connections_desc", &value.args)?.into()),
            "stage_interior_shape_desc" => Ok(__sdk::parse_reducer_args::<stage_interior_shape_desc_reducer::StageInteriorShapeDescArgs>("stage_interior_shape_desc", &value.args)?.into()),
            "stage_interior_spawn_desc" => Ok(__sdk::parse_reducer_args::<stage_interior_spawn_desc_reducer::StageInteriorSpawnDescArgs>("stage_interior_spawn_desc", &value.args)?.into()),
            "stage_item_conversion_recipe_desc" => Ok(__sdk::parse_reducer_args::<stage_item_conversion_recipe_desc_reducer::StageItemConversionRecipeDescArgs>("stage_item_conversion_recipe_desc", &value.args)?.into()),
            "stage_item_desc" => Ok(__sdk::parse_reducer_args::<stage_item_desc_reducer::StageItemDescArgs>("stage_item_desc", &value.args)?.into()),
            "stage_item_list_desc" => Ok(__sdk::parse_reducer_args::<stage_item_list_desc_reducer::StageItemListDescArgs>("stage_item_list_desc", &value.args)?.into()),
            "stage_knowledge_scroll_desc" => Ok(__sdk::parse_reducer_args::<stage_knowledge_scroll_desc_reducer::StageKnowledgeScrollDescArgs>("stage_knowledge_scroll_desc", &value.args)?.into()),
            "stage_knowledge_scroll_type_desc" => Ok(__sdk::parse_reducer_args::<stage_knowledge_scroll_type_desc_reducer::StageKnowledgeScrollTypeDescArgs>("stage_knowledge_scroll_type_desc", &value.args)?.into()),
            "stage_knowledge_stat_modifier_desc" => Ok(__sdk::parse_reducer_args::<stage_knowledge_stat_modifier_desc_reducer::StageKnowledgeStatModifierDescArgs>("stage_knowledge_stat_modifier_desc", &value.args)?.into()),
            "stage_loot_chest_desc" => Ok(__sdk::parse_reducer_args::<stage_loot_chest_desc_reducer::StageLootChestDescArgs>("stage_loot_chest_desc", &value.args)?.into()),
            "stage_loot_rarity_desc" => Ok(__sdk::parse_reducer_args::<stage_loot_rarity_desc_reducer::StageLootRarityDescArgs>("stage_loot_rarity_desc", &value.args)?.into()),
            "stage_loot_table_desc" => Ok(__sdk::parse_reducer_args::<stage_loot_table_desc_reducer::StageLootTableDescArgs>("stage_loot_table_desc", &value.args)?.into()),
            "stage_npc_desc" => Ok(__sdk::parse_reducer_args::<stage_npc_desc_reducer::StageNpcDescArgs>("stage_npc_desc", &value.args)?.into()),
            "stage_onboarding_reward_desc" => Ok(__sdk::parse_reducer_args::<stage_onboarding_reward_desc_reducer::StageOnboardingRewardDescArgs>("stage_onboarding_reward_desc", &value.args)?.into()),
            "stage_parameters_desc" => Ok(__sdk::parse_reducer_args::<stage_parameters_desc_reducer::StageParametersDescArgs>("stage_parameters_desc", &value.args)?.into()),
            "stage_pathfinding_desc" => Ok(__sdk::parse_reducer_args::<stage_pathfinding_desc_reducer::StagePathfindingDescArgs>("stage_pathfinding_desc", &value.args)?.into()),
            "stage_paving_tile_desc" => Ok(__sdk::parse_reducer_args::<stage_paving_tile_desc_reducer::StagePavingTileDescArgs>("stage_paving_tile_desc", &value.args)?.into()),
            "stage_pillar_shaping_desc" => Ok(__sdk::parse_reducer_args::<stage_pillar_shaping_desc_reducer::StagePillarShapingDescArgs>("stage_pillar_shaping_desc", &value.args)?.into()),
            "stage_player_action_desc" => Ok(__sdk::parse_reducer_args::<stage_player_action_desc_reducer::StagePlayerActionDescArgs>("stage_player_action_desc", &value.args)?.into()),
            "stage_player_housing_desc" => Ok(__sdk::parse_reducer_args::<stage_player_housing_desc_reducer::StagePlayerHousingDescArgs>("stage_player_housing_desc", &value.args)?.into()),
            "stage_private_parameters_desc" => Ok(__sdk::parse_reducer_args::<stage_private_parameters_desc_reducer::StagePrivateParametersDescArgs>("stage_private_parameters_desc", &value.args)?.into()),
            "stage_resource_clump_desc" => Ok(__sdk::parse_reducer_args::<stage_resource_clump_desc_reducer::StageResourceClumpDescArgs>("stage_resource_clump_desc", &value.args)?.into()),
            "stage_resource_desc" => Ok(__sdk::parse_reducer_args::<stage_resource_desc_reducer::StageResourceDescArgs>("stage_resource_desc", &value.args)?.into()),
            "stage_resource_growth_recipe_desc" => Ok(__sdk::parse_reducer_args::<stage_resource_growth_recipe_desc_reducer::StageResourceGrowthRecipeDescArgs>("stage_resource_growth_recipe_desc", &value.args)?.into()),
            "stage_resource_placement_recipe_desc" => Ok(__sdk::parse_reducer_args::<stage_resource_placement_recipe_desc_reducer::StageResourcePlacementRecipeDescArgs>("stage_resource_placement_recipe_desc", &value.args)?.into()),
            "stage_secondary_knowledge_desc" => Ok(__sdk::parse_reducer_args::<stage_secondary_knowledge_desc_reducer::StageSecondaryKnowledgeDescArgs>("stage_secondary_knowledge_desc", &value.args)?.into()),
            "stage_skill_desc" => Ok(__sdk::parse_reducer_args::<stage_skill_desc_reducer::StageSkillDescArgs>("stage_skill_desc", &value.args)?.into()),
            "stage_targeting_matrix_desc" => Ok(__sdk::parse_reducer_args::<stage_targeting_matrix_desc_reducer::StageTargetingMatrixDescArgs>("stage_targeting_matrix_desc", &value.args)?.into()),
            "stage_teleport_item_desc" => Ok(__sdk::parse_reducer_args::<stage_teleport_item_desc_reducer::StageTeleportItemDescArgs>("stage_teleport_item_desc", &value.args)?.into()),
            "stage_terraform_recipe_desc" => Ok(__sdk::parse_reducer_args::<stage_terraform_recipe_desc_reducer::StageTerraformRecipeDescArgs>("stage_terraform_recipe_desc", &value.args)?.into()),
            "stage_tool_desc" => Ok(__sdk::parse_reducer_args::<stage_tool_desc_reducer::StageToolDescArgs>("stage_tool_desc", &value.args)?.into()),
            "stage_tool_type_desc" => Ok(__sdk::parse_reducer_args::<stage_tool_type_desc_reducer::StageToolTypeDescArgs>("stage_tool_type_desc", &value.args)?.into()),
            "stage_traveler_task_desc" => Ok(__sdk::parse_reducer_args::<stage_traveler_task_desc_reducer::StageTravelerTaskDescArgs>("stage_traveler_task_desc", &value.args)?.into()),
            "stage_traveler_trade_order_desc" => Ok(__sdk::parse_reducer_args::<stage_traveler_trade_order_desc_reducer::StageTravelerTradeOrderDescArgs>("stage_traveler_trade_order_desc", &value.args)?.into()),
            "stage_wall_desc" => Ok(__sdk::parse_reducer_args::<stage_wall_desc_reducer::StageWallDescArgs>("stage_wall_desc", &value.args)?.into()),
            "stage_weapon_desc" => Ok(__sdk::parse_reducer_args::<stage_weapon_desc_reducer::StageWeaponDescArgs>("stage_weapon_desc", &value.args)?.into()),
            "stage_weapon_type_desc" => Ok(__sdk::parse_reducer_args::<stage_weapon_type_desc_reducer::StageWeaponTypeDescArgs>("stage_weapon_type_desc", &value.args)?.into()),
            "start_agents" => Ok(__sdk::parse_reducer_args::<start_agents_reducer::StartAgentsArgs>("start_agents", &value.args)?.into()),
            "start_generating_world" => Ok(__sdk::parse_reducer_args::<start_generating_world_reducer::StartGeneratingWorldArgs>("start_generating_world", &value.args)?.into()),
            "start_onboarding_quest" => Ok(__sdk::parse_reducer_args::<start_onboarding_quest_reducer::StartOnboardingQuestArgs>("start_onboarding_quest", &value.args)?.into()),
            "starving_agent_loop" => Ok(__sdk::parse_reducer_args::<starving_agent_loop_reducer::StarvingAgentLoopArgs>("starving_agent_loop", &value.args)?.into()),
            "stop_agents" => Ok(__sdk::parse_reducer_args::<stop_agents_reducer::StopAgentsArgs>("stop_agents", &value.args)?.into()),
            "synchronize_time" => Ok(__sdk::parse_reducer_args::<synchronize_time_reducer::SynchronizeTimeArgs>("synchronize_time", &value.args)?.into()),
            "target_update" => Ok(__sdk::parse_reducer_args::<target_update_reducer::TargetUpdateArgs>("target_update", &value.args)?.into()),
            "teleportation_energy_regen_agent_loop" => Ok(__sdk::parse_reducer_args::<teleportation_energy_regen_agent_loop_reducer::TeleportationEnergyRegenAgentLoopArgs>("teleportation_energy_regen_agent_loop", &value.args)?.into()),
            "terraform" => Ok(__sdk::parse_reducer_args::<terraform_reducer::TerraformArgs>("terraform", &value.args)?.into()),
            "terraform_cancel" => Ok(__sdk::parse_reducer_args::<terraform_cancel_reducer::TerraformCancelArgs>("terraform_cancel", &value.args)?.into()),
            "terraform_set_final_target" => Ok(__sdk::parse_reducer_args::<terraform_set_final_target_reducer::TerraformSetFinalTargetArgs>("terraform_set_final_target", &value.args)?.into()),
            "terraform_start" => Ok(__sdk::parse_reducer_args::<terraform_start_reducer::TerraformStartArgs>("terraform_start", &value.args)?.into()),
            "trade_accept" => Ok(__sdk::parse_reducer_args::<trade_accept_reducer::TradeAcceptArgs>("trade_accept", &value.args)?.into()),
            "trade_accept_session" => Ok(__sdk::parse_reducer_args::<trade_accept_session_reducer::TradeAcceptSessionArgs>("trade_accept_session", &value.args)?.into()),
            "trade_add_item" => Ok(__sdk::parse_reducer_args::<trade_add_item_reducer::TradeAddItemArgs>("trade_add_item", &value.args)?.into()),
            "trade_cancel_server" => Ok(__sdk::parse_reducer_args::<trade_cancel_server_reducer::TradeCancelServerArgs>("trade_cancel_server", &value.args)?.into()),
            "trade_decline" => Ok(__sdk::parse_reducer_args::<trade_decline_reducer::TradeDeclineArgs>("trade_decline", &value.args)?.into()),
            "trade_decline_session" => Ok(__sdk::parse_reducer_args::<trade_decline_session_reducer::TradeDeclineSessionArgs>("trade_decline_session", &value.args)?.into()),
            "trade_initiate_session" => Ok(__sdk::parse_reducer_args::<trade_initiate_session_reducer::TradeInitiateSessionArgs>("trade_initiate_session", &value.args)?.into()),
            "trade_remove_item" => Ok(__sdk::parse_reducer_args::<trade_remove_item_reducer::TradeRemoveItemArgs>("trade_remove_item", &value.args)?.into()),
            "trade_sessions_agent_loop" => Ok(__sdk::parse_reducer_args::<trade_sessions_agent_loop_reducer::TradeSessionsAgentLoopArgs>("trade_sessions_agent_loop", &value.args)?.into()),
            "trade_swap_pockets" => Ok(__sdk::parse_reducer_args::<trade_swap_pockets_reducer::TradeSwapPocketsArgs>("trade_swap_pockets", &value.args)?.into()),
            "transfer_player_delayed" => Ok(__sdk::parse_reducer_args::<transfer_player_delayed_reducer::TransferPlayerDelayedArgs>("transfer_player_delayed", &value.args)?.into()),
            "traveler_task_agent_loop" => Ok(__sdk::parse_reducer_args::<traveler_task_agent_loop_reducer::TravelerTaskAgentLoopArgs>("traveler_task_agent_loop", &value.args)?.into()),
            "update_scheduled_timers_from_static_data" => Ok(__sdk::parse_reducer_args::<update_scheduled_timers_from_static_data_reducer::UpdateScheduledTimersFromStaticDataArgs>("update_scheduled_timers_from_static_data", &value.args)?.into()),
            unknown => Err(__sdk::InternalError::unknown_name("reducer", unknown, "ReducerCallInfo").into()),
}
    }
}

#[derive(Default)]
#[allow(non_snake_case)]
#[doc(hidden)]
pub struct DbUpdate {
    a_i_debug_state: __sdk::TableUpdate<AiDebugState>,
    achievement_desc: __sdk::TableUpdate<AchievementDesc>,
    action_state: __sdk::TableUpdate<ActionState>,
    active_buff_state: __sdk::TableUpdate<ActiveBuffState>,
    admin_broadcast: __sdk::TableUpdate<AdminBroadcast>,
    admin_restore_player_state_timer: __sdk::TableUpdate<AdminRestorePlayerStateTimer>,
    alert_desc: __sdk::TableUpdate<AlertDesc>,
    alert_state: __sdk::TableUpdate<AlertState>,
    attached_herds_state: __sdk::TableUpdate<AttachedHerdsState>,
    attack_impact_timer: __sdk::TableUpdate<AttackImpactTimer>,
    attack_outcome_state: __sdk::TableUpdate<AttackOutcomeState>,
    attack_timer: __sdk::TableUpdate<AttackTimer>,
    auto_claim_state: __sdk::TableUpdate<AutoClaimState>,
    auto_logout_loop_timer: __sdk::TableUpdate<AutoLogoutLoopTimer>,
    barter_stall_state: __sdk::TableUpdate<BarterStallState>,
    biome_desc: __sdk::TableUpdate<BiomeDesc>,
    buff_desc: __sdk::TableUpdate<BuffDesc>,
    buff_type_desc: __sdk::TableUpdate<BuffTypeDesc>,
    building_claim_desc: __sdk::TableUpdate<BuildingClaimDesc>,
    building_decay_loop_timer: __sdk::TableUpdate<BuildingDecayLoopTimer>,
    building_desc: __sdk::TableUpdate<BuildingDesc>,
    building_despawn_timer: __sdk::TableUpdate<BuildingDespawnTimer>,
    building_function_type_mapping_desc: __sdk::TableUpdate<BuildingFunctionTypeMappingDesc>,
    building_nickname_state: __sdk::TableUpdate<BuildingNicknameState>,
    building_portal_desc: __sdk::TableUpdate<BuildingPortalDesc>,
    building_repairs_desc: __sdk::TableUpdate<BuildingRepairsDesc>,
    building_spawn_desc: __sdk::TableUpdate<BuildingSpawnDesc>,
    building_state: __sdk::TableUpdate<BuildingState>,
    building_type_desc: __sdk::TableUpdate<BuildingTypeDesc>,
    buy_order_state: __sdk::TableUpdate<AuctionListingState>,
    cargo_desc: __sdk::TableUpdate<CargoDesc>,
    character_stat_desc: __sdk::TableUpdate<CharacterStatDesc>,
    character_stats_state: __sdk::TableUpdate<CharacterStatsState>,
    chat_message_state: __sdk::TableUpdate<ChatMessageState>,
    chest_rarity_desc: __sdk::TableUpdate<ChestRarityDesc>,
    claim_local_state: __sdk::TableUpdate<ClaimLocalState>,
    claim_member_state: __sdk::TableUpdate<ClaimMemberState>,
    claim_recruitment_state: __sdk::TableUpdate<ClaimRecruitmentState>,
    claim_state: __sdk::TableUpdate<ClaimState>,
    claim_tech_desc: __sdk::TableUpdate<ClaimTechDesc>,
    claim_tech_state: __sdk::TableUpdate<ClaimTechState>,
    claim_tech_unlock_timer: __sdk::TableUpdate<ClaimTechUnlockTimer>,
    claim_tile_cost: __sdk::TableUpdate<ClaimTileCost>,
    claim_tile_state: __sdk::TableUpdate<ClaimTileState>,
    climb_requirement_desc: __sdk::TableUpdate<ClimbRequirementDesc>,
    closed_listing_state: __sdk::TableUpdate<ClosedListingState>,
    clothing_desc: __sdk::TableUpdate<ClothingDesc>,
    collect_stats_timer: __sdk::TableUpdate<CollectStatsTimer>,
    collectible_desc: __sdk::TableUpdate<CollectibleDesc>,
    combat_action_desc: __sdk::TableUpdate<CombatActionDesc>,
    combat_state: __sdk::TableUpdate<CombatState>,
    config: __sdk::TableUpdate<Config>,
    construction_recipe_desc: __sdk::TableUpdate<ConstructionRecipeDesc>,
    crafting_recipe_desc: __sdk::TableUpdate<CraftingRecipeDesc>,
    day_night_loop_timer: __sdk::TableUpdate<DayNightLoopTimer>,
    deconstruction_recipe_desc: __sdk::TableUpdate<DeconstructionRecipeDesc>,
    deployable_collectible_state: __sdk::TableUpdate<DeployableCollectibleState>,
    deployable_desc: __sdk::TableUpdate<DeployableDesc>,
    deployable_dismount_timer: __sdk::TableUpdate<DeployableDismountTimer>,
    deployable_state: __sdk::TableUpdate<DeployableState>,
    destroy_dimension_network_timer: __sdk::TableUpdate<DestroyDimensionNetworkTimer>,
    dimension_description_state: __sdk::TableUpdate<DimensionDescriptionState>,
    dimension_network_state: __sdk::TableUpdate<DimensionNetworkState>,
    distant_visible_entity: __sdk::TableUpdate<DistantVisibleEntity>,
    distant_visible_entity_desc: __sdk::TableUpdate<DistantVisibleEntityDesc>,
    dropped_inventory_despawn_timer: __sdk::TableUpdate<DroppedInventoryDespawnTimer>,
    dropped_inventory_ownership_timer: __sdk::TableUpdate<DroppedInventoryOwnershipTimer>,
    dropped_inventory_state: __sdk::TableUpdate<DroppedInventoryState>,
    duel_agent_timer: __sdk::TableUpdate<DuelAgentTimer>,
    duel_despawn_timer: __sdk::TableUpdate<DuelDespawnTimer>,
    duel_state: __sdk::TableUpdate<DuelState>,
    elevator_desc: __sdk::TableUpdate<ElevatorDesc>,
    emote_desc: __sdk::TableUpdate<EmoteDesc>,
    empire_chunk_state: __sdk::TableUpdate<EmpireChunkState>,
    empire_color_desc: __sdk::TableUpdate<EmpireColorDesc>,
    empire_expansion_state: __sdk::TableUpdate<EmpireExpansionState>,
    empire_icon_desc: __sdk::TableUpdate<EmpireIconDesc>,
    empire_node_siege_state: __sdk::TableUpdate<EmpireNodeSiegeState>,
    empire_node_state: __sdk::TableUpdate<EmpireNodeState>,
    empire_notification_desc: __sdk::TableUpdate<EmpireNotificationDesc>,
    empire_player_data_state: __sdk::TableUpdate<EmpirePlayerDataState>,
    empire_rank_desc: __sdk::TableUpdate<EmpireRankDesc>,
    empire_rank_state: __sdk::TableUpdate<EmpireRankState>,
    empire_settlement_state: __sdk::TableUpdate<EmpireSettlementState>,
    empire_state: __sdk::TableUpdate<EmpireState>,
    empire_supplies_desc: __sdk::TableUpdate<EmpireSuppliesDesc>,
    empire_territory_desc: __sdk::TableUpdate<EmpireTerritoryDesc>,
    end_grace_period_timer: __sdk::TableUpdate<EndGracePeriodTimer>,
    enemy_ai_params_desc: __sdk::TableUpdate<EnemyAiParamsDesc>,
    enemy_desc: __sdk::TableUpdate<EnemyDesc>,
    enemy_despawn_timer: __sdk::TableUpdate<EnemyDespawnTimer>,
    enemy_mob_monitor_state: __sdk::TableUpdate<EnemyMobMonitorState>,
    enemy_regen_loop_timer: __sdk::TableUpdate<EnemyRegenLoopTimer>,
    enemy_state: __sdk::TableUpdate<EnemyState>,
    environment_debuff_desc: __sdk::TableUpdate<EnvironmentDebuffDesc>,
    environment_debuff_loop_timer: __sdk::TableUpdate<EnvironmentDebuffLoopTimer>,
    equipment_desc: __sdk::TableUpdate<EquipmentDesc>,
    equipment_state: __sdk::TableUpdate<EquipmentState>,
    experience_state: __sdk::TableUpdate<ExperienceState>,
    exploration_chunks_state: __sdk::TableUpdate<ExplorationChunksState>,
    extract_outcome_state: __sdk::TableUpdate<ExtractOutcomeState>,
    extraction_recipe_desc: __sdk::TableUpdate<ExtractionRecipeDesc>,
    food_desc: __sdk::TableUpdate<FoodDesc>,
    footprint_tile_state: __sdk::TableUpdate<FootprintTileState>,
    force_generate_types: __sdk::TableUpdate<ForceGenerateTypes>,
    gate_desc: __sdk::TableUpdate<GateDesc>,
    global_search_state: __sdk::TableUpdate<GlobalSearchState>,
    globals: __sdk::TableUpdate<Globals>,
    growth_loop_timer: __sdk::TableUpdate<GrowthLoopTimer>,
    growth_state: __sdk::TableUpdate<GrowthState>,
    health_state: __sdk::TableUpdate<HealthState>,
    herd_state: __sdk::TableUpdate<HerdState>,
    hexite_exchange_entry_desc: __sdk::TableUpdate<HexiteExchangeEntryDesc>,
    hide_deployable_timer: __sdk::TableUpdate<HideDeployableTimer>,
    identity_role: __sdk::TableUpdate<IdentityRole>,
    inter_module_message: __sdk::TableUpdate<InterModuleMessage>,
    inter_module_message_counter: __sdk::TableUpdate<InterModuleMessageCounter>,
    inter_module_response_message_counter: __sdk::TableUpdate<InterModuleResponseMessageCounter>,
    interior_collapse_trigger_state: __sdk::TableUpdate<InteriorCollapseTriggerState>,
    interior_environment_desc: __sdk::TableUpdate<InteriorEnvironmentDesc>,
    interior_instance_desc: __sdk::TableUpdate<InteriorInstanceDesc>,
    interior_network_desc: __sdk::TableUpdate<InteriorNetworkDesc>,
    interior_portal_connections_desc: __sdk::TableUpdate<InteriorPortalConnectionsDesc>,
    interior_set_collapsed_timer: __sdk::TableUpdate<InteriorSetCollapsedTimer>,
    interior_shape_desc: __sdk::TableUpdate<InteriorShapeDesc>,
    interior_spawn_desc: __sdk::TableUpdate<InteriorSpawnDesc>,
    inventory_state: __sdk::TableUpdate<InventoryState>,
    item_conversion_recipe_desc: __sdk::TableUpdate<ItemConversionRecipeDesc>,
    item_desc: __sdk::TableUpdate<ItemDesc>,
    item_list_desc: __sdk::TableUpdate<ItemListDesc>,
    knowledge_achievement_state: __sdk::TableUpdate<KnowledgeAchievementState>,
    knowledge_battle_action_state: __sdk::TableUpdate<KnowledgeBattleActionState>,
    knowledge_building_state: __sdk::TableUpdate<KnowledgeBuildingState>,
    knowledge_cargo_state: __sdk::TableUpdate<KnowledgeCargoState>,
    knowledge_claim_state: __sdk::TableUpdate<KnowledgeClaimState>,
    knowledge_construction_state: __sdk::TableUpdate<KnowledgeConstructionState>,
    knowledge_craft_state: __sdk::TableUpdate<KnowledgeCraftState>,
    knowledge_deployable_state: __sdk::TableUpdate<KnowledgeDeployableState>,
    knowledge_enemy_state: __sdk::TableUpdate<KnowledgeEnemyState>,
    knowledge_extract_state: __sdk::TableUpdate<KnowledgeExtractState>,
    knowledge_item_state: __sdk::TableUpdate<KnowledgeItemState>,
    knowledge_lore_state: __sdk::TableUpdate<KnowledgeLoreState>,
    knowledge_npc_state: __sdk::TableUpdate<KnowledgeNpcState>,
    knowledge_paving_state: __sdk::TableUpdate<KnowledgePavingState>,
    knowledge_pillar_shaping_state: __sdk::TableUpdate<KnowledgePillarShapingState>,
    knowledge_resource_placement_state: __sdk::TableUpdate<KnowledgeResourcePlacementState>,
    knowledge_resource_state: __sdk::TableUpdate<KnowledgeResourceState>,
    knowledge_ruins_state: __sdk::TableUpdate<KnowledgeRuinsState>,
    knowledge_scroll_desc: __sdk::TableUpdate<KnowledgeScrollDesc>,
    knowledge_scroll_type_desc: __sdk::TableUpdate<KnowledgeScrollTypeDesc>,
    knowledge_secondary_state: __sdk::TableUpdate<KnowledgeSecondaryState>,
    knowledge_stat_modifier_desc: __sdk::TableUpdate<KnowledgeStatModifierDesc>,
    knowledge_vault_state: __sdk::TableUpdate<KnowledgeVaultState>,
    light_source_state: __sdk::TableUpdate<LightSourceState>,
    location_cache: __sdk::TableUpdate<LocationCache>,
    location_state: __sdk::TableUpdate<LocationState>,
    loot_chest_desc: __sdk::TableUpdate<LootChestDesc>,
    loot_chest_despawn_timer: __sdk::TableUpdate<LootChestDespawnTimer>,
    loot_chest_spawn_timer: __sdk::TableUpdate<LootChestSpawnTimer>,
    loot_chest_state: __sdk::TableUpdate<LootChestState>,
    loot_rarity_desc: __sdk::TableUpdate<LootRarityDesc>,
    loot_table_desc: __sdk::TableUpdate<LootTableDesc>,
    lost_items_state: __sdk::TableUpdate<LostItemsState>,
    mobile_entity_state: __sdk::TableUpdate<MobileEntityState>,
    mounting_state: __sdk::TableUpdate<MountingState>,
    move_validation_strike_counter_state: __sdk::TableUpdate<MoveValidationStrikeCounterState>,
    npc_ai_loop_timer: __sdk::TableUpdate<NpcAiLoopTimer>,
    npc_desc: __sdk::TableUpdate<NpcDesc>,
    npc_state: __sdk::TableUpdate<NpcState>,
    on_durability_zero_timer: __sdk::TableUpdate<OnDurabilityZeroTimer>,
    onboarding_reward_desc: __sdk::TableUpdate<OnboardingRewardDesc>,
    onboarding_state: __sdk::TableUpdate<OnboardingState>,
    parameters_desc: __sdk::TableUpdate<ParametersDesc>,
    parameters_player_move_desc: __sdk::TableUpdate<ParametersPlayerMoveDesc>,
    passive_craft_state: __sdk::TableUpdate<PassiveCraftState>,
    passive_craft_timer: __sdk::TableUpdate<PassiveCraftTimer>,
    pathfinding_desc: __sdk::TableUpdate<PathfindingDesc>,
    paved_tile_state: __sdk::TableUpdate<PavedTileState>,
    paving_tile_desc: __sdk::TableUpdate<PavingTileDesc>,
    permission_state: __sdk::TableUpdate<PermissionState>,
    pillar_shaping_desc: __sdk::TableUpdate<PillarShapingDesc>,
    pillar_shaping_state: __sdk::TableUpdate<PillarShapingState>,
    player_action_desc: __sdk::TableUpdate<PlayerActionDesc>,
    player_action_state: __sdk::TableUpdate<PlayerActionState>,
    player_death_timer: __sdk::TableUpdate<PlayerDeathTimer>,
    player_housing_desc: __sdk::TableUpdate<PlayerHousingDesc>,
    player_housing_evict_player_timer: __sdk::TableUpdate<PlayerHousingEvictPlayerTimer>,
    player_housing_income_loop_timer: __sdk::TableUpdate<PlayerHousingIncomeLoopTimer>,
    player_housing_state: __sdk::TableUpdate<PlayerHousingState>,
    player_lowercase_username_state: __sdk::TableUpdate<PlayerLowercaseUsernameState>,
    player_note_state: __sdk::TableUpdate<PlayerNoteState>,
    player_notification_event: __sdk::TableUpdate<PlayerNotificationEvent>,
    player_prefs_state: __sdk::TableUpdate<PlayerPrefsState>,
    player_queue_state: __sdk::TableUpdate<PlayerQueueState>,
    player_regen_loop_timer: __sdk::TableUpdate<PlayerRegenLoopTimer>,
    player_region_transfer_event: __sdk::TableUpdate<PlayerRegionTransferEvent>,
    player_report_state: __sdk::TableUpdate<PlayerReportState>,
    player_set_name_outcome_event: __sdk::TableUpdate<PlayerSetNameOutcomeEvent>,
    player_state: __sdk::TableUpdate<PlayerState>,
    player_timestamp_state: __sdk::TableUpdate<PlayerTimestampState>,
    player_use_elevator_timer: __sdk::TableUpdate<PlayerUseElevatorTimer>,
    player_username_state: __sdk::TableUpdate<PlayerUsernameState>,
    player_vote_conclude_timer: __sdk::TableUpdate<PlayerVoteConcludeTimer>,
    player_vote_state: __sdk::TableUpdate<PlayerVoteState>,
    portal_state: __sdk::TableUpdate<PortalState>,
    private_parameters_desc: __sdk::TableUpdate<PrivateParametersDesc>,
    progressive_action_state: __sdk::TableUpdate<ProgressiveActionState>,
    project_site_state: __sdk::TableUpdate<ProjectSiteState>,
    region_connection_info: __sdk::TableUpdate<RegionConnectionInfo>,
    region_population_info: __sdk::TableUpdate<RegionPopulationInfo>,
    region_popuplation_loop_timer: __sdk::TableUpdate<RegionPopulationLoopTimer>,
    region_sign_in_parameters: __sdk::TableUpdate<RegionSignInParameters>,
    rent_collector_loop_timer: __sdk::TableUpdate<RentCollectorLoopTimer>,
    rent_evict_timer: __sdk::TableUpdate<RentEvictTimer>,
    rent_state: __sdk::TableUpdate<RentState>,
    reset_chunk_index_timer: __sdk::TableUpdate<ResetChunkIndexTimer>,
    reset_mobile_entity_timer: __sdk::TableUpdate<ResetMobileEntityTimer>,
    resource_clump_desc: __sdk::TableUpdate<ResourceClumpDesc>,
    resource_count: __sdk::TableUpdate<ResourceCount>,
    resource_desc: __sdk::TableUpdate<ResourceDesc>,
    resource_growth_recipe_desc: __sdk::TableUpdate<ResourceGrowthRecipeDesc>,
    resource_health_state: __sdk::TableUpdate<ResourceHealthState>,
    resource_placement_recipe_desc: __sdk::TableUpdate<ResourcePlacementRecipeDesc>,
    resource_spawn_timer: __sdk::TableUpdate<ResourceSpawnTimer>,
    resource_state: __sdk::TableUpdate<ResourceState>,
    resources_log: __sdk::TableUpdate<ResourcesLog>,
    resources_regen_loop_timer: __sdk::TableUpdate<ResourcesRegenLoopTimer>,
    respawn_resource_in_chunk_timer: __sdk::TableUpdate<RespawnResourceInChunkTimer>,
    rez_sick_long_term_state: __sdk::TableUpdate<RezSickLongTermState>,
    satiation_state: __sdk::TableUpdate<SatiationState>,
    secondary_knowledge_desc: __sdk::TableUpdate<SecondaryKnowledgeDesc>,
    sell_order_state: __sdk::TableUpdate<AuctionListingState>,
    server_identity: __sdk::TableUpdate<ServerIdentity>,
    signed_in_player_state: __sdk::TableUpdate<SignedInPlayerState>,
    single_resource_clump_info: __sdk::TableUpdate<SingleResourceClumpInfo>,
    single_resource_to_clump_desc: __sdk::TableUpdate<SingleResourceToClumpDesc>,
    skill_desc: __sdk::TableUpdate<SkillDesc>,
    staged_static_data: __sdk::TableUpdate<StagedStaticData>,
    stamina_state: __sdk::TableUpdate<StaminaState>,
    starving_loop_timer: __sdk::TableUpdate<StarvingLoopTimer>,
    starving_player_state: __sdk::TableUpdate<StarvingPlayerState>,
    target_state: __sdk::TableUpdate<TargetState>,
    targetable_state: __sdk::TableUpdate<TargetableState>,
    targeting_matrix_desc: __sdk::TableUpdate<TargetingMatrixDesc>,
    teleport_item_desc: __sdk::TableUpdate<TeleportItemDesc>,
    teleport_player_timer: __sdk::TableUpdate<TeleportPlayerTimer>,
    teleportation_energy_regen_loop_timer: __sdk::TableUpdate<TeleportationEnergyRegenLoopTimer>,
    teleportation_energy_state: __sdk::TableUpdate<TeleportationEnergyState>,
    terraform_progress_state: __sdk::TableUpdate<TerraformProgressState>,
    terraform_recipe_desc: __sdk::TableUpdate<TerraformRecipeDesc>,
    terrain_chunk_state: __sdk::TableUpdate<TerrainChunkState>,
    the_great_placeholder_table: __sdk::TableUpdate<TheGreatPlaceHolderTable>,
    threat_state: __sdk::TableUpdate<ThreatState>,
    tool_desc: __sdk::TableUpdate<ToolDesc>,
    tool_type_desc: __sdk::TableUpdate<ToolTypeDesc>,
    toolbar_state: __sdk::TableUpdate<ToolbarState>,
    trade_order_state: __sdk::TableUpdate<TradeOrderState>,
    trade_session_loop_timer: __sdk::TableUpdate<TradeSessionLoopTimer>,
    trade_session_state: __sdk::TableUpdate<TradeSessionState>,
    transfer_player_timer: __sdk::TableUpdate<TransferPlayerTimer>,
    traveler_task_desc: __sdk::TableUpdate<TravelerTaskDesc>,
    traveler_task_loop_timer: __sdk::TableUpdate<TravelerTaskLoopTimer>,
    traveler_task_state: __sdk::TableUpdate<TravelerTaskState>,
    traveler_trade_order_desc: __sdk::TableUpdate<TravelerTradeOrderDesc>,
    unclaimed_collectibles_state: __sdk::TableUpdate<UnclaimedCollectiblesState>,
    unclaimed_shards_state: __sdk::TableUpdate<UnclaimedShardsState>,
    user_authentication_state: __sdk::TableUpdate<UserAuthenticationState>,
    user_moderation_state: __sdk::TableUpdate<UserModerationState>,
    user_previous_region_state: __sdk::TableUpdate<UserPreviousRegionState>,
    user_state: __sdk::TableUpdate<UserState>,
    vault_state: __sdk::TableUpdate<VaultState>,
    wall_desc: __sdk::TableUpdate<WallDesc>,
    weapon_desc: __sdk::TableUpdate<WeaponDesc>,
    weapon_type_desc: __sdk::TableUpdate<WeaponTypeDesc>,
    world_region_name_state: __sdk::TableUpdate<WorldRegionNameState>,
    world_region_state: __sdk::TableUpdate<WorldRegionState>,
}

impl TryFrom<__ws::DatabaseUpdate<__ws::BsatnFormat>> for DbUpdate {
    type Error = __sdk::Error;
    fn try_from(raw: __ws::DatabaseUpdate<__ws::BsatnFormat>) -> Result<Self, Self::Error> {
        let mut db_update = DbUpdate::default();
        for table_update in raw.tables {
            match &table_update.table_name[..] {
                "a_i_debug_state" => db_update
                    .a_i_debug_state
                    .append(a_i_debug_state_table::parse_table_update(table_update)?),
                "achievement_desc" => db_update
                    .achievement_desc
                    .append(achievement_desc_table::parse_table_update(table_update)?),
                "action_state" => db_update
                    .action_state
                    .append(action_state_table::parse_table_update(table_update)?),
                "active_buff_state" => db_update
                    .active_buff_state
                    .append(active_buff_state_table::parse_table_update(table_update)?),
                "admin_broadcast" => db_update
                    .admin_broadcast
                    .append(admin_broadcast_table::parse_table_update(table_update)?),
                "admin_restore_player_state_timer" => {
                    db_update.admin_restore_player_state_timer.append(
                        admin_restore_player_state_timer_table::parse_table_update(table_update)?,
                    )
                }
                "alert_desc" => db_update
                    .alert_desc
                    .append(alert_desc_table::parse_table_update(table_update)?),
                "alert_state" => db_update
                    .alert_state
                    .append(alert_state_table::parse_table_update(table_update)?),
                "attached_herds_state" => db_update.attached_herds_state.append(
                    attached_herds_state_table::parse_table_update(table_update)?,
                ),
                "attack_impact_timer" => db_update
                    .attack_impact_timer
                    .append(attack_impact_timer_table::parse_table_update(table_update)?),
                "attack_outcome_state" => db_update.attack_outcome_state.append(
                    attack_outcome_state_table::parse_table_update(table_update)?,
                ),
                "attack_timer" => db_update
                    .attack_timer
                    .append(attack_timer_table::parse_table_update(table_update)?),
                "auto_claim_state" => db_update
                    .auto_claim_state
                    .append(auto_claim_state_table::parse_table_update(table_update)?),
                "auto_logout_loop_timer" => db_update.auto_logout_loop_timer.append(
                    auto_logout_loop_timer_table::parse_table_update(table_update)?,
                ),
                "barter_stall_state" => db_update
                    .barter_stall_state
                    .append(barter_stall_state_table::parse_table_update(table_update)?),
                "biome_desc" => db_update
                    .biome_desc
                    .append(biome_desc_table::parse_table_update(table_update)?),
                "buff_desc" => db_update
                    .buff_desc
                    .append(buff_desc_table::parse_table_update(table_update)?),
                "buff_type_desc" => db_update
                    .buff_type_desc
                    .append(buff_type_desc_table::parse_table_update(table_update)?),
                "building_claim_desc" => db_update
                    .building_claim_desc
                    .append(building_claim_desc_table::parse_table_update(table_update)?),
                "building_decay_loop_timer" => db_update.building_decay_loop_timer.append(
                    building_decay_loop_timer_table::parse_table_update(table_update)?,
                ),
                "building_desc" => db_update
                    .building_desc
                    .append(building_desc_table::parse_table_update(table_update)?),
                "building_despawn_timer" => db_update.building_despawn_timer.append(
                    building_despawn_timer_table::parse_table_update(table_update)?,
                ),
                "building_function_type_mapping_desc" => {
                    db_update.building_function_type_mapping_desc.append(
                        building_function_type_mapping_desc_table::parse_table_update(
                            table_update,
                        )?,
                    )
                }
                "building_nickname_state" => db_update.building_nickname_state.append(
                    building_nickname_state_table::parse_table_update(table_update)?,
                ),
                "building_portal_desc" => db_update.building_portal_desc.append(
                    building_portal_desc_table::parse_table_update(table_update)?,
                ),
                "building_repairs_desc" => db_update.building_repairs_desc.append(
                    building_repairs_desc_table::parse_table_update(table_update)?,
                ),
                "building_spawn_desc" => db_update
                    .building_spawn_desc
                    .append(building_spawn_desc_table::parse_table_update(table_update)?),
                "building_state" => db_update
                    .building_state
                    .append(building_state_table::parse_table_update(table_update)?),
                "building_type_desc" => db_update
                    .building_type_desc
                    .append(building_type_desc_table::parse_table_update(table_update)?),
                "buy_order_state" => db_update
                    .buy_order_state
                    .append(buy_order_state_table::parse_table_update(table_update)?),
                "cargo_desc" => db_update
                    .cargo_desc
                    .append(cargo_desc_table::parse_table_update(table_update)?),
                "character_stat_desc" => db_update
                    .character_stat_desc
                    .append(character_stat_desc_table::parse_table_update(table_update)?),
                "character_stats_state" => db_update.character_stats_state.append(
                    character_stats_state_table::parse_table_update(table_update)?,
                ),
                "chat_message_state" => db_update
                    .chat_message_state
                    .append(chat_message_state_table::parse_table_update(table_update)?),
                "chest_rarity_desc" => db_update
                    .chest_rarity_desc
                    .append(chest_rarity_desc_table::parse_table_update(table_update)?),
                "claim_local_state" => db_update
                    .claim_local_state
                    .append(claim_local_state_table::parse_table_update(table_update)?),
                "claim_member_state" => db_update
                    .claim_member_state
                    .append(claim_member_state_table::parse_table_update(table_update)?),
                "claim_recruitment_state" => db_update.claim_recruitment_state.append(
                    claim_recruitment_state_table::parse_table_update(table_update)?,
                ),
                "claim_state" => db_update
                    .claim_state
                    .append(claim_state_table::parse_table_update(table_update)?),
                "claim_tech_desc" => db_update
                    .claim_tech_desc
                    .append(claim_tech_desc_table::parse_table_update(table_update)?),
                "claim_tech_state" => db_update
                    .claim_tech_state
                    .append(claim_tech_state_table::parse_table_update(table_update)?),
                "claim_tech_unlock_timer" => db_update.claim_tech_unlock_timer.append(
                    claim_tech_unlock_timer_table::parse_table_update(table_update)?,
                ),
                "claim_tile_cost" => db_update
                    .claim_tile_cost
                    .append(claim_tile_cost_table::parse_table_update(table_update)?),
                "claim_tile_state" => db_update
                    .claim_tile_state
                    .append(claim_tile_state_table::parse_table_update(table_update)?),
                "climb_requirement_desc" => db_update.climb_requirement_desc.append(
                    climb_requirement_desc_table::parse_table_update(table_update)?,
                ),
                "closed_listing_state" => db_update.closed_listing_state.append(
                    closed_listing_state_table::parse_table_update(table_update)?,
                ),
                "clothing_desc" => db_update
                    .clothing_desc
                    .append(clothing_desc_table::parse_table_update(table_update)?),
                "collect_stats_timer" => db_update
                    .collect_stats_timer
                    .append(collect_stats_timer_table::parse_table_update(table_update)?),
                "collectible_desc" => db_update
                    .collectible_desc
                    .append(collectible_desc_table::parse_table_update(table_update)?),
                "combat_action_desc" => db_update
                    .combat_action_desc
                    .append(combat_action_desc_table::parse_table_update(table_update)?),
                "combat_state" => db_update
                    .combat_state
                    .append(combat_state_table::parse_table_update(table_update)?),
                "config" => db_update
                    .config
                    .append(config_table::parse_table_update(table_update)?),
                "construction_recipe_desc" => db_update.construction_recipe_desc.append(
                    construction_recipe_desc_table::parse_table_update(table_update)?,
                ),
                "crafting_recipe_desc" => db_update.crafting_recipe_desc.append(
                    crafting_recipe_desc_table::parse_table_update(table_update)?,
                ),
                "day_night_loop_timer" => db_update.day_night_loop_timer.append(
                    day_night_loop_timer_table::parse_table_update(table_update)?,
                ),
                "deconstruction_recipe_desc" => db_update.deconstruction_recipe_desc.append(
                    deconstruction_recipe_desc_table::parse_table_update(table_update)?,
                ),
                "deployable_collectible_state" => db_update.deployable_collectible_state.append(
                    deployable_collectible_state_table::parse_table_update(table_update)?,
                ),
                "deployable_desc" => db_update
                    .deployable_desc
                    .append(deployable_desc_table::parse_table_update(table_update)?),
                "deployable_dismount_timer" => db_update.deployable_dismount_timer.append(
                    deployable_dismount_timer_table::parse_table_update(table_update)?,
                ),
                "deployable_state" => db_update
                    .deployable_state
                    .append(deployable_state_table::parse_table_update(table_update)?),
                "destroy_dimension_network_timer" => {
                    db_update.destroy_dimension_network_timer.append(
                        destroy_dimension_network_timer_table::parse_table_update(table_update)?,
                    )
                }
                "dimension_description_state" => db_update.dimension_description_state.append(
                    dimension_description_state_table::parse_table_update(table_update)?,
                ),
                "dimension_network_state" => db_update.dimension_network_state.append(
                    dimension_network_state_table::parse_table_update(table_update)?,
                ),
                "distant_visible_entity" => db_update.distant_visible_entity.append(
                    distant_visible_entity_table::parse_table_update(table_update)?,
                ),
                "distant_visible_entity_desc" => db_update.distant_visible_entity_desc.append(
                    distant_visible_entity_desc_table::parse_table_update(table_update)?,
                ),
                "dropped_inventory_despawn_timer" => {
                    db_update.dropped_inventory_despawn_timer.append(
                        dropped_inventory_despawn_timer_table::parse_table_update(table_update)?,
                    )
                }
                "dropped_inventory_ownership_timer" => {
                    db_update.dropped_inventory_ownership_timer.append(
                        dropped_inventory_ownership_timer_table::parse_table_update(table_update)?,
                    )
                }
                "dropped_inventory_state" => db_update.dropped_inventory_state.append(
                    dropped_inventory_state_table::parse_table_update(table_update)?,
                ),
                "duel_agent_timer" => db_update
                    .duel_agent_timer
                    .append(duel_agent_timer_table::parse_table_update(table_update)?),
                "duel_despawn_timer" => db_update
                    .duel_despawn_timer
                    .append(duel_despawn_timer_table::parse_table_update(table_update)?),
                "duel_state" => db_update
                    .duel_state
                    .append(duel_state_table::parse_table_update(table_update)?),
                "elevator_desc" => db_update
                    .elevator_desc
                    .append(elevator_desc_table::parse_table_update(table_update)?),
                "emote_desc" => db_update
                    .emote_desc
                    .append(emote_desc_table::parse_table_update(table_update)?),
                "empire_chunk_state" => db_update
                    .empire_chunk_state
                    .append(empire_chunk_state_table::parse_table_update(table_update)?),
                "empire_color_desc" => db_update
                    .empire_color_desc
                    .append(empire_color_desc_table::parse_table_update(table_update)?),
                "empire_expansion_state" => db_update.empire_expansion_state.append(
                    empire_expansion_state_table::parse_table_update(table_update)?,
                ),
                "empire_icon_desc" => db_update
                    .empire_icon_desc
                    .append(empire_icon_desc_table::parse_table_update(table_update)?),
                "empire_node_siege_state" => db_update.empire_node_siege_state.append(
                    empire_node_siege_state_table::parse_table_update(table_update)?,
                ),
                "empire_node_state" => db_update
                    .empire_node_state
                    .append(empire_node_state_table::parse_table_update(table_update)?),
                "empire_notification_desc" => db_update.empire_notification_desc.append(
                    empire_notification_desc_table::parse_table_update(table_update)?,
                ),
                "empire_player_data_state" => db_update.empire_player_data_state.append(
                    empire_player_data_state_table::parse_table_update(table_update)?,
                ),
                "empire_rank_desc" => db_update
                    .empire_rank_desc
                    .append(empire_rank_desc_table::parse_table_update(table_update)?),
                "empire_rank_state" => db_update
                    .empire_rank_state
                    .append(empire_rank_state_table::parse_table_update(table_update)?),
                "empire_settlement_state" => db_update.empire_settlement_state.append(
                    empire_settlement_state_table::parse_table_update(table_update)?,
                ),
                "empire_state" => db_update
                    .empire_state
                    .append(empire_state_table::parse_table_update(table_update)?),
                "empire_supplies_desc" => db_update.empire_supplies_desc.append(
                    empire_supplies_desc_table::parse_table_update(table_update)?,
                ),
                "empire_territory_desc" => db_update.empire_territory_desc.append(
                    empire_territory_desc_table::parse_table_update(table_update)?,
                ),
                "end_grace_period_timer" => db_update.end_grace_period_timer.append(
                    end_grace_period_timer_table::parse_table_update(table_update)?,
                ),
                "enemy_ai_params_desc" => db_update.enemy_ai_params_desc.append(
                    enemy_ai_params_desc_table::parse_table_update(table_update)?,
                ),
                "enemy_desc" => db_update
                    .enemy_desc
                    .append(enemy_desc_table::parse_table_update(table_update)?),
                "enemy_despawn_timer" => db_update
                    .enemy_despawn_timer
                    .append(enemy_despawn_timer_table::parse_table_update(table_update)?),
                "enemy_mob_monitor_state" => db_update.enemy_mob_monitor_state.append(
                    enemy_mob_monitor_state_table::parse_table_update(table_update)?,
                ),
                "enemy_regen_loop_timer" => db_update.enemy_regen_loop_timer.append(
                    enemy_regen_loop_timer_table::parse_table_update(table_update)?,
                ),
                "enemy_state" => db_update
                    .enemy_state
                    .append(enemy_state_table::parse_table_update(table_update)?),
                "environment_debuff_desc" => db_update.environment_debuff_desc.append(
                    environment_debuff_desc_table::parse_table_update(table_update)?,
                ),
                "environment_debuff_loop_timer" => db_update.environment_debuff_loop_timer.append(
                    environment_debuff_loop_timer_table::parse_table_update(table_update)?,
                ),
                "equipment_desc" => db_update
                    .equipment_desc
                    .append(equipment_desc_table::parse_table_update(table_update)?),
                "equipment_state" => db_update
                    .equipment_state
                    .append(equipment_state_table::parse_table_update(table_update)?),
                "experience_state" => db_update
                    .experience_state
                    .append(experience_state_table::parse_table_update(table_update)?),
                "exploration_chunks_state" => db_update.exploration_chunks_state.append(
                    exploration_chunks_state_table::parse_table_update(table_update)?,
                ),
                "extract_outcome_state" => db_update.extract_outcome_state.append(
                    extract_outcome_state_table::parse_table_update(table_update)?,
                ),
                "extraction_recipe_desc" => db_update.extraction_recipe_desc.append(
                    extraction_recipe_desc_table::parse_table_update(table_update)?,
                ),
                "food_desc" => db_update
                    .food_desc
                    .append(food_desc_table::parse_table_update(table_update)?),
                "footprint_tile_state" => db_update.footprint_tile_state.append(
                    footprint_tile_state_table::parse_table_update(table_update)?,
                ),
                "force_generate_types" => db_update.force_generate_types.append(
                    force_generate_types_table::parse_table_update(table_update)?,
                ),
                "gate_desc" => db_update
                    .gate_desc
                    .append(gate_desc_table::parse_table_update(table_update)?),
                "global_search_state" => db_update
                    .global_search_state
                    .append(global_search_state_table::parse_table_update(table_update)?),
                "globals" => db_update
                    .globals
                    .append(globals_table::parse_table_update(table_update)?),
                "growth_loop_timer" => db_update
                    .growth_loop_timer
                    .append(growth_loop_timer_table::parse_table_update(table_update)?),
                "growth_state" => db_update
                    .growth_state
                    .append(growth_state_table::parse_table_update(table_update)?),
                "health_state" => db_update
                    .health_state
                    .append(health_state_table::parse_table_update(table_update)?),
                "herd_state" => db_update
                    .herd_state
                    .append(herd_state_table::parse_table_update(table_update)?),
                "hexite_exchange_entry_desc" => db_update.hexite_exchange_entry_desc.append(
                    hexite_exchange_entry_desc_table::parse_table_update(table_update)?,
                ),
                "hide_deployable_timer" => db_update.hide_deployable_timer.append(
                    hide_deployable_timer_table::parse_table_update(table_update)?,
                ),
                "identity_role" => db_update
                    .identity_role
                    .append(identity_role_table::parse_table_update(table_update)?),
                "inter_module_message" => db_update.inter_module_message.append(
                    inter_module_message_table::parse_table_update(table_update)?,
                ),
                "inter_module_message_counter" => db_update.inter_module_message_counter.append(
                    inter_module_message_counter_table::parse_table_update(table_update)?,
                ),
                "inter_module_response_message_counter" => {
                    db_update.inter_module_response_message_counter.append(
                        inter_module_response_message_counter_table::parse_table_update(
                            table_update,
                        )?,
                    )
                }
                "interior_collapse_trigger_state" => {
                    db_update.interior_collapse_trigger_state.append(
                        interior_collapse_trigger_state_table::parse_table_update(table_update)?,
                    )
                }
                "interior_environment_desc" => db_update.interior_environment_desc.append(
                    interior_environment_desc_table::parse_table_update(table_update)?,
                ),
                "interior_instance_desc" => db_update.interior_instance_desc.append(
                    interior_instance_desc_table::parse_table_update(table_update)?,
                ),
                "interior_network_desc" => db_update.interior_network_desc.append(
                    interior_network_desc_table::parse_table_update(table_update)?,
                ),
                "interior_portal_connections_desc" => {
                    db_update.interior_portal_connections_desc.append(
                        interior_portal_connections_desc_table::parse_table_update(table_update)?,
                    )
                }
                "interior_set_collapsed_timer" => db_update.interior_set_collapsed_timer.append(
                    interior_set_collapsed_timer_table::parse_table_update(table_update)?,
                ),
                "interior_shape_desc" => db_update
                    .interior_shape_desc
                    .append(interior_shape_desc_table::parse_table_update(table_update)?),
                "interior_spawn_desc" => db_update
                    .interior_spawn_desc
                    .append(interior_spawn_desc_table::parse_table_update(table_update)?),
                "inventory_state" => db_update
                    .inventory_state
                    .append(inventory_state_table::parse_table_update(table_update)?),
                "item_conversion_recipe_desc" => db_update.item_conversion_recipe_desc.append(
                    item_conversion_recipe_desc_table::parse_table_update(table_update)?,
                ),
                "item_desc" => db_update
                    .item_desc
                    .append(item_desc_table::parse_table_update(table_update)?),
                "item_list_desc" => db_update
                    .item_list_desc
                    .append(item_list_desc_table::parse_table_update(table_update)?),
                "knowledge_achievement_state" => db_update.knowledge_achievement_state.append(
                    knowledge_achievement_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_battle_action_state" => db_update.knowledge_battle_action_state.append(
                    knowledge_battle_action_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_building_state" => db_update.knowledge_building_state.append(
                    knowledge_building_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_cargo_state" => db_update.knowledge_cargo_state.append(
                    knowledge_cargo_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_claim_state" => db_update.knowledge_claim_state.append(
                    knowledge_claim_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_construction_state" => db_update.knowledge_construction_state.append(
                    knowledge_construction_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_craft_state" => db_update.knowledge_craft_state.append(
                    knowledge_craft_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_deployable_state" => db_update.knowledge_deployable_state.append(
                    knowledge_deployable_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_enemy_state" => db_update.knowledge_enemy_state.append(
                    knowledge_enemy_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_extract_state" => db_update.knowledge_extract_state.append(
                    knowledge_extract_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_item_state" => db_update.knowledge_item_state.append(
                    knowledge_item_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_lore_state" => db_update.knowledge_lore_state.append(
                    knowledge_lore_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_npc_state" => db_update
                    .knowledge_npc_state
                    .append(knowledge_npc_state_table::parse_table_update(table_update)?),
                "knowledge_paving_state" => db_update.knowledge_paving_state.append(
                    knowledge_paving_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_pillar_shaping_state" => {
                    db_update.knowledge_pillar_shaping_state.append(
                        knowledge_pillar_shaping_state_table::parse_table_update(table_update)?,
                    )
                }
                "knowledge_resource_placement_state" => {
                    db_update.knowledge_resource_placement_state.append(
                        knowledge_resource_placement_state_table::parse_table_update(table_update)?,
                    )
                }
                "knowledge_resource_state" => db_update.knowledge_resource_state.append(
                    knowledge_resource_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_ruins_state" => db_update.knowledge_ruins_state.append(
                    knowledge_ruins_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_scroll_desc" => db_update.knowledge_scroll_desc.append(
                    knowledge_scroll_desc_table::parse_table_update(table_update)?,
                ),
                "knowledge_scroll_type_desc" => db_update.knowledge_scroll_type_desc.append(
                    knowledge_scroll_type_desc_table::parse_table_update(table_update)?,
                ),
                "knowledge_secondary_state" => db_update.knowledge_secondary_state.append(
                    knowledge_secondary_state_table::parse_table_update(table_update)?,
                ),
                "knowledge_stat_modifier_desc" => db_update.knowledge_stat_modifier_desc.append(
                    knowledge_stat_modifier_desc_table::parse_table_update(table_update)?,
                ),
                "knowledge_vault_state" => db_update.knowledge_vault_state.append(
                    knowledge_vault_state_table::parse_table_update(table_update)?,
                ),
                "light_source_state" => db_update
                    .light_source_state
                    .append(light_source_state_table::parse_table_update(table_update)?),
                "location_cache" => db_update
                    .location_cache
                    .append(location_cache_table::parse_table_update(table_update)?),
                "location_state" => db_update
                    .location_state
                    .append(location_state_table::parse_table_update(table_update)?),
                "loot_chest_desc" => db_update
                    .loot_chest_desc
                    .append(loot_chest_desc_table::parse_table_update(table_update)?),
                "loot_chest_despawn_timer" => db_update.loot_chest_despawn_timer.append(
                    loot_chest_despawn_timer_table::parse_table_update(table_update)?,
                ),
                "loot_chest_spawn_timer" => db_update.loot_chest_spawn_timer.append(
                    loot_chest_spawn_timer_table::parse_table_update(table_update)?,
                ),
                "loot_chest_state" => db_update
                    .loot_chest_state
                    .append(loot_chest_state_table::parse_table_update(table_update)?),
                "loot_rarity_desc" => db_update
                    .loot_rarity_desc
                    .append(loot_rarity_desc_table::parse_table_update(table_update)?),
                "loot_table_desc" => db_update
                    .loot_table_desc
                    .append(loot_table_desc_table::parse_table_update(table_update)?),
                "lost_items_state" => db_update
                    .lost_items_state
                    .append(lost_items_state_table::parse_table_update(table_update)?),
                "mobile_entity_state" => db_update
                    .mobile_entity_state
                    .append(mobile_entity_state_table::parse_table_update(table_update)?),
                "mounting_state" => db_update
                    .mounting_state
                    .append(mounting_state_table::parse_table_update(table_update)?),
                "move_validation_strike_counter_state" => {
                    db_update.move_validation_strike_counter_state.append(
                        move_validation_strike_counter_state_table::parse_table_update(
                            table_update,
                        )?,
                    )
                }
                "npc_ai_loop_timer" => db_update
                    .npc_ai_loop_timer
                    .append(npc_ai_loop_timer_table::parse_table_update(table_update)?),
                "npc_desc" => db_update
                    .npc_desc
                    .append(npc_desc_table::parse_table_update(table_update)?),
                "npc_state" => db_update
                    .npc_state
                    .append(npc_state_table::parse_table_update(table_update)?),
                "on_durability_zero_timer" => db_update.on_durability_zero_timer.append(
                    on_durability_zero_timer_table::parse_table_update(table_update)?,
                ),
                "onboarding_reward_desc" => db_update.onboarding_reward_desc.append(
                    onboarding_reward_desc_table::parse_table_update(table_update)?,
                ),
                "onboarding_state" => db_update
                    .onboarding_state
                    .append(onboarding_state_table::parse_table_update(table_update)?),
                "parameters_desc" => db_update
                    .parameters_desc
                    .append(parameters_desc_table::parse_table_update(table_update)?),
                "parameters_player_move_desc" => db_update.parameters_player_move_desc.append(
                    parameters_player_move_desc_table::parse_table_update(table_update)?,
                ),
                "passive_craft_state" => db_update
                    .passive_craft_state
                    .append(passive_craft_state_table::parse_table_update(table_update)?),
                "passive_craft_timer" => db_update
                    .passive_craft_timer
                    .append(passive_craft_timer_table::parse_table_update(table_update)?),
                "pathfinding_desc" => db_update
                    .pathfinding_desc
                    .append(pathfinding_desc_table::parse_table_update(table_update)?),
                "paved_tile_state" => db_update
                    .paved_tile_state
                    .append(paved_tile_state_table::parse_table_update(table_update)?),
                "paving_tile_desc" => db_update
                    .paving_tile_desc
                    .append(paving_tile_desc_table::parse_table_update(table_update)?),
                "permission_state" => db_update
                    .permission_state
                    .append(permission_state_table::parse_table_update(table_update)?),
                "pillar_shaping_desc" => db_update
                    .pillar_shaping_desc
                    .append(pillar_shaping_desc_table::parse_table_update(table_update)?),
                "pillar_shaping_state" => db_update.pillar_shaping_state.append(
                    pillar_shaping_state_table::parse_table_update(table_update)?,
                ),
                "player_action_desc" => db_update
                    .player_action_desc
                    .append(player_action_desc_table::parse_table_update(table_update)?),
                "player_action_state" => db_update
                    .player_action_state
                    .append(player_action_state_table::parse_table_update(table_update)?),
                "player_death_timer" => db_update
                    .player_death_timer
                    .append(player_death_timer_table::parse_table_update(table_update)?),
                "player_housing_desc" => db_update
                    .player_housing_desc
                    .append(player_housing_desc_table::parse_table_update(table_update)?),
                "player_housing_evict_player_timer" => {
                    db_update.player_housing_evict_player_timer.append(
                        player_housing_evict_player_timer_table::parse_table_update(table_update)?,
                    )
                }
                "player_housing_income_loop_timer" => {
                    db_update.player_housing_income_loop_timer.append(
                        player_housing_income_loop_timer_table::parse_table_update(table_update)?,
                    )
                }
                "player_housing_state" => db_update.player_housing_state.append(
                    player_housing_state_table::parse_table_update(table_update)?,
                ),
                "player_lowercase_username_state" => {
                    db_update.player_lowercase_username_state.append(
                        player_lowercase_username_state_table::parse_table_update(table_update)?,
                    )
                }
                "player_note_state" => db_update
                    .player_note_state
                    .append(player_note_state_table::parse_table_update(table_update)?),
                "player_notification_event" => db_update.player_notification_event.append(
                    player_notification_event_table::parse_table_update(table_update)?,
                ),
                "player_prefs_state" => db_update
                    .player_prefs_state
                    .append(player_prefs_state_table::parse_table_update(table_update)?),
                "player_queue_state" => db_update
                    .player_queue_state
                    .append(player_queue_state_table::parse_table_update(table_update)?),
                "player_regen_loop_timer" => db_update.player_regen_loop_timer.append(
                    player_regen_loop_timer_table::parse_table_update(table_update)?,
                ),
                "player_region_transfer_event" => db_update.player_region_transfer_event.append(
                    player_region_transfer_event_table::parse_table_update(table_update)?,
                ),
                "player_report_state" => db_update
                    .player_report_state
                    .append(player_report_state_table::parse_table_update(table_update)?),
                "player_set_name_outcome_event" => db_update.player_set_name_outcome_event.append(
                    player_set_name_outcome_event_table::parse_table_update(table_update)?,
                ),
                "player_state" => db_update
                    .player_state
                    .append(player_state_table::parse_table_update(table_update)?),
                "player_timestamp_state" => db_update.player_timestamp_state.append(
                    player_timestamp_state_table::parse_table_update(table_update)?,
                ),
                "player_use_elevator_timer" => db_update.player_use_elevator_timer.append(
                    player_use_elevator_timer_table::parse_table_update(table_update)?,
                ),
                "player_username_state" => db_update.player_username_state.append(
                    player_username_state_table::parse_table_update(table_update)?,
                ),
                "player_vote_conclude_timer" => db_update.player_vote_conclude_timer.append(
                    player_vote_conclude_timer_table::parse_table_update(table_update)?,
                ),
                "player_vote_state" => db_update
                    .player_vote_state
                    .append(player_vote_state_table::parse_table_update(table_update)?),
                "portal_state" => db_update
                    .portal_state
                    .append(portal_state_table::parse_table_update(table_update)?),
                "private_parameters_desc" => db_update.private_parameters_desc.append(
                    private_parameters_desc_table::parse_table_update(table_update)?,
                ),
                "progressive_action_state" => db_update.progressive_action_state.append(
                    progressive_action_state_table::parse_table_update(table_update)?,
                ),
                "project_site_state" => db_update
                    .project_site_state
                    .append(project_site_state_table::parse_table_update(table_update)?),
                "region_connection_info" => db_update.region_connection_info.append(
                    region_connection_info_table::parse_table_update(table_update)?,
                ),
                "region_population_info" => db_update.region_population_info.append(
                    region_population_info_table::parse_table_update(table_update)?,
                ),
                "region_popuplation_loop_timer" => db_update.region_popuplation_loop_timer.append(
                    region_popuplation_loop_timer_table::parse_table_update(table_update)?,
                ),
                "region_sign_in_parameters" => db_update.region_sign_in_parameters.append(
                    region_sign_in_parameters_table::parse_table_update(table_update)?,
                ),
                "rent_collector_loop_timer" => db_update.rent_collector_loop_timer.append(
                    rent_collector_loop_timer_table::parse_table_update(table_update)?,
                ),
                "rent_evict_timer" => db_update
                    .rent_evict_timer
                    .append(rent_evict_timer_table::parse_table_update(table_update)?),
                "rent_state" => db_update
                    .rent_state
                    .append(rent_state_table::parse_table_update(table_update)?),
                "reset_chunk_index_timer" => db_update.reset_chunk_index_timer.append(
                    reset_chunk_index_timer_table::parse_table_update(table_update)?,
                ),
                "reset_mobile_entity_timer" => db_update.reset_mobile_entity_timer.append(
                    reset_mobile_entity_timer_table::parse_table_update(table_update)?,
                ),
                "resource_clump_desc" => db_update
                    .resource_clump_desc
                    .append(resource_clump_desc_table::parse_table_update(table_update)?),
                "resource_count" => db_update
                    .resource_count
                    .append(resource_count_table::parse_table_update(table_update)?),
                "resource_desc" => db_update
                    .resource_desc
                    .append(resource_desc_table::parse_table_update(table_update)?),
                "resource_growth_recipe_desc" => db_update.resource_growth_recipe_desc.append(
                    resource_growth_recipe_desc_table::parse_table_update(table_update)?,
                ),
                "resource_health_state" => db_update.resource_health_state.append(
                    resource_health_state_table::parse_table_update(table_update)?,
                ),
                "resource_placement_recipe_desc" => {
                    db_update.resource_placement_recipe_desc.append(
                        resource_placement_recipe_desc_table::parse_table_update(table_update)?,
                    )
                }
                "resource_spawn_timer" => db_update.resource_spawn_timer.append(
                    resource_spawn_timer_table::parse_table_update(table_update)?,
                ),
                "resource_state" => db_update
                    .resource_state
                    .append(resource_state_table::parse_table_update(table_update)?),
                "resources_log" => db_update
                    .resources_log
                    .append(resources_log_table::parse_table_update(table_update)?),
                "resources_regen_loop_timer" => db_update.resources_regen_loop_timer.append(
                    resources_regen_loop_timer_table::parse_table_update(table_update)?,
                ),
                "respawn_resource_in_chunk_timer" => {
                    db_update.respawn_resource_in_chunk_timer.append(
                        respawn_resource_in_chunk_timer_table::parse_table_update(table_update)?,
                    )
                }
                "rez_sick_long_term_state" => db_update.rez_sick_long_term_state.append(
                    rez_sick_long_term_state_table::parse_table_update(table_update)?,
                ),
                "satiation_state" => db_update
                    .satiation_state
                    .append(satiation_state_table::parse_table_update(table_update)?),
                "secondary_knowledge_desc" => db_update.secondary_knowledge_desc.append(
                    secondary_knowledge_desc_table::parse_table_update(table_update)?,
                ),
                "sell_order_state" => db_update
                    .sell_order_state
                    .append(sell_order_state_table::parse_table_update(table_update)?),
                "server_identity" => db_update
                    .server_identity
                    .append(server_identity_table::parse_table_update(table_update)?),
                "signed_in_player_state" => db_update.signed_in_player_state.append(
                    signed_in_player_state_table::parse_table_update(table_update)?,
                ),
                "single_resource_clump_info" => db_update.single_resource_clump_info.append(
                    single_resource_clump_info_table::parse_table_update(table_update)?,
                ),
                "single_resource_to_clump_desc" => db_update.single_resource_to_clump_desc.append(
                    single_resource_to_clump_desc_table::parse_table_update(table_update)?,
                ),
                "skill_desc" => db_update
                    .skill_desc
                    .append(skill_desc_table::parse_table_update(table_update)?),
                "staged_static_data" => db_update
                    .staged_static_data
                    .append(staged_static_data_table::parse_table_update(table_update)?),
                "stamina_state" => db_update
                    .stamina_state
                    .append(stamina_state_table::parse_table_update(table_update)?),
                "starving_loop_timer" => db_update
                    .starving_loop_timer
                    .append(starving_loop_timer_table::parse_table_update(table_update)?),
                "starving_player_state" => db_update.starving_player_state.append(
                    starving_player_state_table::parse_table_update(table_update)?,
                ),
                "target_state" => db_update
                    .target_state
                    .append(target_state_table::parse_table_update(table_update)?),
                "targetable_state" => db_update
                    .targetable_state
                    .append(targetable_state_table::parse_table_update(table_update)?),
                "targeting_matrix_desc" => db_update.targeting_matrix_desc.append(
                    targeting_matrix_desc_table::parse_table_update(table_update)?,
                ),
                "teleport_item_desc" => db_update
                    .teleport_item_desc
                    .append(teleport_item_desc_table::parse_table_update(table_update)?),
                "teleport_player_timer" => db_update.teleport_player_timer.append(
                    teleport_player_timer_table::parse_table_update(table_update)?,
                ),
                "teleportation_energy_regen_loop_timer" => {
                    db_update.teleportation_energy_regen_loop_timer.append(
                        teleportation_energy_regen_loop_timer_table::parse_table_update(
                            table_update,
                        )?,
                    )
                }
                "teleportation_energy_state" => db_update.teleportation_energy_state.append(
                    teleportation_energy_state_table::parse_table_update(table_update)?,
                ),
                "terraform_progress_state" => db_update.terraform_progress_state.append(
                    terraform_progress_state_table::parse_table_update(table_update)?,
                ),
                "terraform_recipe_desc" => db_update.terraform_recipe_desc.append(
                    terraform_recipe_desc_table::parse_table_update(table_update)?,
                ),
                "terrain_chunk_state" => db_update
                    .terrain_chunk_state
                    .append(terrain_chunk_state_table::parse_table_update(table_update)?),
                "the_great_placeholder_table" => db_update.the_great_placeholder_table.append(
                    the_great_placeholder_table_table::parse_table_update(table_update)?,
                ),
                "threat_state" => db_update
                    .threat_state
                    .append(threat_state_table::parse_table_update(table_update)?),
                "tool_desc" => db_update
                    .tool_desc
                    .append(tool_desc_table::parse_table_update(table_update)?),
                "tool_type_desc" => db_update
                    .tool_type_desc
                    .append(tool_type_desc_table::parse_table_update(table_update)?),
                "toolbar_state" => db_update
                    .toolbar_state
                    .append(toolbar_state_table::parse_table_update(table_update)?),
                "trade_order_state" => db_update
                    .trade_order_state
                    .append(trade_order_state_table::parse_table_update(table_update)?),
                "trade_session_loop_timer" => db_update.trade_session_loop_timer.append(
                    trade_session_loop_timer_table::parse_table_update(table_update)?,
                ),
                "trade_session_state" => db_update
                    .trade_session_state
                    .append(trade_session_state_table::parse_table_update(table_update)?),
                "transfer_player_timer" => db_update.transfer_player_timer.append(
                    transfer_player_timer_table::parse_table_update(table_update)?,
                ),
                "traveler_task_desc" => db_update
                    .traveler_task_desc
                    .append(traveler_task_desc_table::parse_table_update(table_update)?),
                "traveler_task_loop_timer" => db_update.traveler_task_loop_timer.append(
                    traveler_task_loop_timer_table::parse_table_update(table_update)?,
                ),
                "traveler_task_state" => db_update
                    .traveler_task_state
                    .append(traveler_task_state_table::parse_table_update(table_update)?),
                "traveler_trade_order_desc" => db_update.traveler_trade_order_desc.append(
                    traveler_trade_order_desc_table::parse_table_update(table_update)?,
                ),
                "unclaimed_collectibles_state" => db_update.unclaimed_collectibles_state.append(
                    unclaimed_collectibles_state_table::parse_table_update(table_update)?,
                ),
                "unclaimed_shards_state" => db_update.unclaimed_shards_state.append(
                    unclaimed_shards_state_table::parse_table_update(table_update)?,
                ),
                "user_authentication_state" => db_update.user_authentication_state.append(
                    user_authentication_state_table::parse_table_update(table_update)?,
                ),
                "user_moderation_state" => db_update.user_moderation_state.append(
                    user_moderation_state_table::parse_table_update(table_update)?,
                ),
                "user_previous_region_state" => db_update.user_previous_region_state.append(
                    user_previous_region_state_table::parse_table_update(table_update)?,
                ),
                "user_state" => db_update
                    .user_state
                    .append(user_state_table::parse_table_update(table_update)?),
                "vault_state" => db_update
                    .vault_state
                    .append(vault_state_table::parse_table_update(table_update)?),
                "wall_desc" => db_update
                    .wall_desc
                    .append(wall_desc_table::parse_table_update(table_update)?),
                "weapon_desc" => db_update
                    .weapon_desc
                    .append(weapon_desc_table::parse_table_update(table_update)?),
                "weapon_type_desc" => db_update
                    .weapon_type_desc
                    .append(weapon_type_desc_table::parse_table_update(table_update)?),
                "world_region_name_state" => db_update.world_region_name_state.append(
                    world_region_name_state_table::parse_table_update(table_update)?,
                ),
                "world_region_state" => db_update
                    .world_region_state
                    .append(world_region_state_table::parse_table_update(table_update)?),

                unknown => {
                    return Err(__sdk::InternalError::unknown_name(
                        "table",
                        unknown,
                        "DatabaseUpdate",
                    )
                    .into());
                }
            }
        }
        Ok(db_update)
    }
}

impl __sdk::InModule for DbUpdate {
    type Module = RemoteModule;
}

impl __sdk::DbUpdate for DbUpdate {
    fn apply_to_client_cache(
        &self,
        cache: &mut __sdk::ClientCache<RemoteModule>,
    ) -> AppliedDiff<'_> {
        let mut diff = AppliedDiff::default();

        diff.a_i_debug_state = cache
            .apply_diff_to_table::<AiDebugState>("a_i_debug_state", &self.a_i_debug_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.achievement_desc = cache
            .apply_diff_to_table::<AchievementDesc>("achievement_desc", &self.achievement_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.action_state = cache
            .apply_diff_to_table::<ActionState>("action_state", &self.action_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.active_buff_state = cache
            .apply_diff_to_table::<ActiveBuffState>("active_buff_state", &self.active_buff_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.admin_broadcast = cache
            .apply_diff_to_table::<AdminBroadcast>("admin_broadcast", &self.admin_broadcast)
            .with_updates_by_pk(|row| &row.version);
        diff.admin_restore_player_state_timer = cache
            .apply_diff_to_table::<AdminRestorePlayerStateTimer>(
                "admin_restore_player_state_timer",
                &self.admin_restore_player_state_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.alert_desc = cache
            .apply_diff_to_table::<AlertDesc>("alert_desc", &self.alert_desc)
            .with_updates_by_pk(|row| &row.alert_type);
        diff.alert_state = cache
            .apply_diff_to_table::<AlertState>("alert_state", &self.alert_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.attached_herds_state = cache
            .apply_diff_to_table::<AttachedHerdsState>(
                "attached_herds_state",
                &self.attached_herds_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.attack_impact_timer = cache
            .apply_diff_to_table::<AttackImpactTimer>(
                "attack_impact_timer",
                &self.attack_impact_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.attack_outcome_state = cache
            .apply_diff_to_table::<AttackOutcomeState>(
                "attack_outcome_state",
                &self.attack_outcome_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.attack_timer = cache
            .apply_diff_to_table::<AttackTimer>("attack_timer", &self.attack_timer)
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.auto_claim_state = cache
            .apply_diff_to_table::<AutoClaimState>("auto_claim_state", &self.auto_claim_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.auto_logout_loop_timer = cache
            .apply_diff_to_table::<AutoLogoutLoopTimer>(
                "auto_logout_loop_timer",
                &self.auto_logout_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.barter_stall_state = cache
            .apply_diff_to_table::<BarterStallState>("barter_stall_state", &self.barter_stall_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.biome_desc = cache
            .apply_diff_to_table::<BiomeDesc>("biome_desc", &self.biome_desc)
            .with_updates_by_pk(|row| &row.biome_type);
        diff.buff_desc = cache
            .apply_diff_to_table::<BuffDesc>("buff_desc", &self.buff_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.buff_type_desc = cache
            .apply_diff_to_table::<BuffTypeDesc>("buff_type_desc", &self.buff_type_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.building_claim_desc = cache
            .apply_diff_to_table::<BuildingClaimDesc>(
                "building_claim_desc",
                &self.building_claim_desc,
            )
            .with_updates_by_pk(|row| &row.building_id);
        diff.building_decay_loop_timer = cache
            .apply_diff_to_table::<BuildingDecayLoopTimer>(
                "building_decay_loop_timer",
                &self.building_decay_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.building_desc = cache
            .apply_diff_to_table::<BuildingDesc>("building_desc", &self.building_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.building_despawn_timer = cache
            .apply_diff_to_table::<BuildingDespawnTimer>(
                "building_despawn_timer",
                &self.building_despawn_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.building_function_type_mapping_desc = cache
            .apply_diff_to_table::<BuildingFunctionTypeMappingDesc>(
                "building_function_type_mapping_desc",
                &self.building_function_type_mapping_desc,
            )
            .with_updates_by_pk(|row| &row.type_id);
        diff.building_nickname_state = cache
            .apply_diff_to_table::<BuildingNicknameState>(
                "building_nickname_state",
                &self.building_nickname_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.building_portal_desc = cache
            .apply_diff_to_table::<BuildingPortalDesc>(
                "building_portal_desc",
                &self.building_portal_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.building_repairs_desc = cache
            .apply_diff_to_table::<BuildingRepairsDesc>(
                "building_repairs_desc",
                &self.building_repairs_desc,
            )
            .with_updates_by_pk(|row| &row.cargo_id);
        diff.building_spawn_desc = cache
            .apply_diff_to_table::<BuildingSpawnDesc>(
                "building_spawn_desc",
                &self.building_spawn_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.building_state = cache
            .apply_diff_to_table::<BuildingState>("building_state", &self.building_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.building_type_desc = cache
            .apply_diff_to_table::<BuildingTypeDesc>("building_type_desc", &self.building_type_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.buy_order_state = cache
            .apply_diff_to_table::<AuctionListingState>("buy_order_state", &self.buy_order_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.cargo_desc = cache
            .apply_diff_to_table::<CargoDesc>("cargo_desc", &self.cargo_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.character_stat_desc = cache
            .apply_diff_to_table::<CharacterStatDesc>(
                "character_stat_desc",
                &self.character_stat_desc,
            )
            .with_updates_by_pk(|row| &row.stat_type);
        diff.character_stats_state = cache
            .apply_diff_to_table::<CharacterStatsState>(
                "character_stats_state",
                &self.character_stats_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.chat_message_state = cache
            .apply_diff_to_table::<ChatMessageState>("chat_message_state", &self.chat_message_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.chest_rarity_desc = cache
            .apply_diff_to_table::<ChestRarityDesc>("chest_rarity_desc", &self.chest_rarity_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.claim_local_state = cache
            .apply_diff_to_table::<ClaimLocalState>("claim_local_state", &self.claim_local_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.claim_member_state = cache
            .apply_diff_to_table::<ClaimMemberState>("claim_member_state", &self.claim_member_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.claim_recruitment_state = cache
            .apply_diff_to_table::<ClaimRecruitmentState>(
                "claim_recruitment_state",
                &self.claim_recruitment_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.claim_state = cache
            .apply_diff_to_table::<ClaimState>("claim_state", &self.claim_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.claim_tech_desc = cache
            .apply_diff_to_table::<ClaimTechDesc>("claim_tech_desc", &self.claim_tech_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.claim_tech_state = cache
            .apply_diff_to_table::<ClaimTechState>("claim_tech_state", &self.claim_tech_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.claim_tech_unlock_timer = cache
            .apply_diff_to_table::<ClaimTechUnlockTimer>(
                "claim_tech_unlock_timer",
                &self.claim_tech_unlock_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.claim_tile_cost = cache
            .apply_diff_to_table::<ClaimTileCost>("claim_tile_cost", &self.claim_tile_cost)
            .with_updates_by_pk(|row| &row.tile_count);
        diff.claim_tile_state = cache
            .apply_diff_to_table::<ClaimTileState>("claim_tile_state", &self.claim_tile_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.climb_requirement_desc = cache
            .apply_diff_to_table::<ClimbRequirementDesc>(
                "climb_requirement_desc",
                &self.climb_requirement_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.closed_listing_state = cache
            .apply_diff_to_table::<ClosedListingState>(
                "closed_listing_state",
                &self.closed_listing_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.clothing_desc = cache
            .apply_diff_to_table::<ClothingDesc>("clothing_desc", &self.clothing_desc)
            .with_updates_by_pk(|row| &row.item_id);
        diff.collect_stats_timer = cache
            .apply_diff_to_table::<CollectStatsTimer>(
                "collect_stats_timer",
                &self.collect_stats_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.collectible_desc = cache
            .apply_diff_to_table::<CollectibleDesc>("collectible_desc", &self.collectible_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.combat_action_desc = cache
            .apply_diff_to_table::<CombatActionDesc>("combat_action_desc", &self.combat_action_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.combat_state = cache
            .apply_diff_to_table::<CombatState>("combat_state", &self.combat_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.config = cache
            .apply_diff_to_table::<Config>("config", &self.config)
            .with_updates_by_pk(|row| &row.version);
        diff.construction_recipe_desc = cache
            .apply_diff_to_table::<ConstructionRecipeDesc>(
                "construction_recipe_desc",
                &self.construction_recipe_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.crafting_recipe_desc = cache
            .apply_diff_to_table::<CraftingRecipeDesc>(
                "crafting_recipe_desc",
                &self.crafting_recipe_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.day_night_loop_timer = cache
            .apply_diff_to_table::<DayNightLoopTimer>(
                "day_night_loop_timer",
                &self.day_night_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.deconstruction_recipe_desc = cache
            .apply_diff_to_table::<DeconstructionRecipeDesc>(
                "deconstruction_recipe_desc",
                &self.deconstruction_recipe_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.deployable_collectible_state = cache
            .apply_diff_to_table::<DeployableCollectibleState>(
                "deployable_collectible_state",
                &self.deployable_collectible_state,
            )
            .with_updates_by_pk(|row| &row.deployable_entity_id);
        diff.deployable_desc = cache
            .apply_diff_to_table::<DeployableDesc>("deployable_desc", &self.deployable_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.deployable_dismount_timer = cache
            .apply_diff_to_table::<DeployableDismountTimer>(
                "deployable_dismount_timer",
                &self.deployable_dismount_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.deployable_state = cache
            .apply_diff_to_table::<DeployableState>("deployable_state", &self.deployable_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.destroy_dimension_network_timer = cache
            .apply_diff_to_table::<DestroyDimensionNetworkTimer>(
                "destroy_dimension_network_timer",
                &self.destroy_dimension_network_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.dimension_description_state = cache
            .apply_diff_to_table::<DimensionDescriptionState>(
                "dimension_description_state",
                &self.dimension_description_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.dimension_network_state = cache
            .apply_diff_to_table::<DimensionNetworkState>(
                "dimension_network_state",
                &self.dimension_network_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.distant_visible_entity = cache
            .apply_diff_to_table::<DistantVisibleEntity>(
                "distant_visible_entity",
                &self.distant_visible_entity,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.distant_visible_entity_desc = cache
            .apply_diff_to_table::<DistantVisibleEntityDesc>(
                "distant_visible_entity_desc",
                &self.distant_visible_entity_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.dropped_inventory_despawn_timer = cache
            .apply_diff_to_table::<DroppedInventoryDespawnTimer>(
                "dropped_inventory_despawn_timer",
                &self.dropped_inventory_despawn_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.dropped_inventory_ownership_timer = cache
            .apply_diff_to_table::<DroppedInventoryOwnershipTimer>(
                "dropped_inventory_ownership_timer",
                &self.dropped_inventory_ownership_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.dropped_inventory_state = cache
            .apply_diff_to_table::<DroppedInventoryState>(
                "dropped_inventory_state",
                &self.dropped_inventory_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.duel_agent_timer = cache
            .apply_diff_to_table::<DuelAgentTimer>("duel_agent_timer", &self.duel_agent_timer)
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.duel_despawn_timer = cache
            .apply_diff_to_table::<DuelDespawnTimer>("duel_despawn_timer", &self.duel_despawn_timer)
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.duel_state = cache
            .apply_diff_to_table::<DuelState>("duel_state", &self.duel_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.elevator_desc = cache
            .apply_diff_to_table::<ElevatorDesc>("elevator_desc", &self.elevator_desc)
            .with_updates_by_pk(|row| &row.building_id);
        diff.emote_desc = cache
            .apply_diff_to_table::<EmoteDesc>("emote_desc", &self.emote_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.empire_chunk_state = cache
            .apply_diff_to_table::<EmpireChunkState>("empire_chunk_state", &self.empire_chunk_state)
            .with_updates_by_pk(|row| &row.chunk_index);
        diff.empire_color_desc = cache
            .apply_diff_to_table::<EmpireColorDesc>("empire_color_desc", &self.empire_color_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.empire_expansion_state = cache
            .apply_diff_to_table::<EmpireExpansionState>(
                "empire_expansion_state",
                &self.empire_expansion_state,
            )
            .with_updates_by_pk(|row| &row.chunk_index);
        diff.empire_icon_desc = cache
            .apply_diff_to_table::<EmpireIconDesc>("empire_icon_desc", &self.empire_icon_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.empire_node_siege_state = cache
            .apply_diff_to_table::<EmpireNodeSiegeState>(
                "empire_node_siege_state",
                &self.empire_node_siege_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.empire_node_state = cache
            .apply_diff_to_table::<EmpireNodeState>("empire_node_state", &self.empire_node_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.empire_notification_desc = cache
            .apply_diff_to_table::<EmpireNotificationDesc>(
                "empire_notification_desc",
                &self.empire_notification_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.empire_player_data_state = cache
            .apply_diff_to_table::<EmpirePlayerDataState>(
                "empire_player_data_state",
                &self.empire_player_data_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.empire_rank_desc = cache
            .apply_diff_to_table::<EmpireRankDesc>("empire_rank_desc", &self.empire_rank_desc)
            .with_updates_by_pk(|row| &row.rank);
        diff.empire_rank_state = cache
            .apply_diff_to_table::<EmpireRankState>("empire_rank_state", &self.empire_rank_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.empire_settlement_state = cache
            .apply_diff_to_table::<EmpireSettlementState>(
                "empire_settlement_state",
                &self.empire_settlement_state,
            )
            .with_updates_by_pk(|row| &row.building_entity_id);
        diff.empire_state = cache
            .apply_diff_to_table::<EmpireState>("empire_state", &self.empire_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.empire_supplies_desc = cache
            .apply_diff_to_table::<EmpireSuppliesDesc>(
                "empire_supplies_desc",
                &self.empire_supplies_desc,
            )
            .with_updates_by_pk(|row| &row.cargo_id);
        diff.empire_territory_desc = cache
            .apply_diff_to_table::<EmpireTerritoryDesc>(
                "empire_territory_desc",
                &self.empire_territory_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.end_grace_period_timer = cache
            .apply_diff_to_table::<EndGracePeriodTimer>(
                "end_grace_period_timer",
                &self.end_grace_period_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.enemy_ai_params_desc = cache
            .apply_diff_to_table::<EnemyAiParamsDesc>(
                "enemy_ai_params_desc",
                &self.enemy_ai_params_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.enemy_desc = cache
            .apply_diff_to_table::<EnemyDesc>("enemy_desc", &self.enemy_desc)
            .with_updates_by_pk(|row| &row.enemy_type);
        diff.enemy_despawn_timer = cache
            .apply_diff_to_table::<EnemyDespawnTimer>(
                "enemy_despawn_timer",
                &self.enemy_despawn_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.enemy_mob_monitor_state = cache
            .apply_diff_to_table::<EnemyMobMonitorState>(
                "enemy_mob_monitor_state",
                &self.enemy_mob_monitor_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.enemy_regen_loop_timer = cache
            .apply_diff_to_table::<EnemyRegenLoopTimer>(
                "enemy_regen_loop_timer",
                &self.enemy_regen_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.enemy_state = cache
            .apply_diff_to_table::<EnemyState>("enemy_state", &self.enemy_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.environment_debuff_desc = cache
            .apply_diff_to_table::<EnvironmentDebuffDesc>(
                "environment_debuff_desc",
                &self.environment_debuff_desc,
            )
            .with_updates_by_pk(|row| &row.buff_id);
        diff.environment_debuff_loop_timer = cache
            .apply_diff_to_table::<EnvironmentDebuffLoopTimer>(
                "environment_debuff_loop_timer",
                &self.environment_debuff_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.equipment_desc = cache
            .apply_diff_to_table::<EquipmentDesc>("equipment_desc", &self.equipment_desc)
            .with_updates_by_pk(|row| &row.item_id);
        diff.equipment_state = cache
            .apply_diff_to_table::<EquipmentState>("equipment_state", &self.equipment_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.experience_state = cache
            .apply_diff_to_table::<ExperienceState>("experience_state", &self.experience_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.exploration_chunks_state = cache
            .apply_diff_to_table::<ExplorationChunksState>(
                "exploration_chunks_state",
                &self.exploration_chunks_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.extract_outcome_state = cache
            .apply_diff_to_table::<ExtractOutcomeState>(
                "extract_outcome_state",
                &self.extract_outcome_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.extraction_recipe_desc = cache
            .apply_diff_to_table::<ExtractionRecipeDesc>(
                "extraction_recipe_desc",
                &self.extraction_recipe_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.food_desc = cache
            .apply_diff_to_table::<FoodDesc>("food_desc", &self.food_desc)
            .with_updates_by_pk(|row| &row.item_id);
        diff.footprint_tile_state = cache
            .apply_diff_to_table::<FootprintTileState>(
                "footprint_tile_state",
                &self.footprint_tile_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.force_generate_types = cache.apply_diff_to_table::<ForceGenerateTypes>(
            "force_generate_types",
            &self.force_generate_types,
        );
        diff.gate_desc = cache
            .apply_diff_to_table::<GateDesc>("gate_desc", &self.gate_desc)
            .with_updates_by_pk(|row| &row.building_id);
        diff.global_search_state = cache
            .apply_diff_to_table::<GlobalSearchState>(
                "global_search_state",
                &self.global_search_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.globals = cache
            .apply_diff_to_table::<Globals>("globals", &self.globals)
            .with_updates_by_pk(|row| &row.version);
        diff.growth_loop_timer = cache
            .apply_diff_to_table::<GrowthLoopTimer>("growth_loop_timer", &self.growth_loop_timer)
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.growth_state = cache
            .apply_diff_to_table::<GrowthState>("growth_state", &self.growth_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.health_state = cache
            .apply_diff_to_table::<HealthState>("health_state", &self.health_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.herd_state = cache
            .apply_diff_to_table::<HerdState>("herd_state", &self.herd_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.hexite_exchange_entry_desc = cache
            .apply_diff_to_table::<HexiteExchangeEntryDesc>(
                "hexite_exchange_entry_desc",
                &self.hexite_exchange_entry_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.hide_deployable_timer = cache
            .apply_diff_to_table::<HideDeployableTimer>(
                "hide_deployable_timer",
                &self.hide_deployable_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.identity_role = cache
            .apply_diff_to_table::<IdentityRole>("identity_role", &self.identity_role)
            .with_updates_by_pk(|row| &row.identity);
        diff.inter_module_message = cache
            .apply_diff_to_table::<InterModuleMessage>(
                "inter_module_message",
                &self.inter_module_message,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.inter_module_message_counter = cache
            .apply_diff_to_table::<InterModuleMessageCounter>(
                "inter_module_message_counter",
                &self.inter_module_message_counter,
            )
            .with_updates_by_pk(|row| &row.module_id);
        diff.inter_module_response_message_counter = cache
            .apply_diff_to_table::<InterModuleResponseMessageCounter>(
                "inter_module_response_message_counter",
                &self.inter_module_response_message_counter,
            )
            .with_updates_by_pk(|row| &row.dst_module_id);
        diff.interior_collapse_trigger_state = cache
            .apply_diff_to_table::<InteriorCollapseTriggerState>(
                "interior_collapse_trigger_state",
                &self.interior_collapse_trigger_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.interior_environment_desc = cache
            .apply_diff_to_table::<InteriorEnvironmentDesc>(
                "interior_environment_desc",
                &self.interior_environment_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.interior_instance_desc = cache
            .apply_diff_to_table::<InteriorInstanceDesc>(
                "interior_instance_desc",
                &self.interior_instance_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.interior_network_desc = cache
            .apply_diff_to_table::<InteriorNetworkDesc>(
                "interior_network_desc",
                &self.interior_network_desc,
            )
            .with_updates_by_pk(|row| &row.building_id);
        diff.interior_portal_connections_desc = cache
            .apply_diff_to_table::<InteriorPortalConnectionsDesc>(
                "interior_portal_connections_desc",
                &self.interior_portal_connections_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.interior_set_collapsed_timer = cache
            .apply_diff_to_table::<InteriorSetCollapsedTimer>(
                "interior_set_collapsed_timer",
                &self.interior_set_collapsed_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.interior_shape_desc = cache
            .apply_diff_to_table::<InteriorShapeDesc>(
                "interior_shape_desc",
                &self.interior_shape_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.interior_spawn_desc = cache
            .apply_diff_to_table::<InteriorSpawnDesc>(
                "interior_spawn_desc",
                &self.interior_spawn_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.inventory_state = cache
            .apply_diff_to_table::<InventoryState>("inventory_state", &self.inventory_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.item_conversion_recipe_desc = cache
            .apply_diff_to_table::<ItemConversionRecipeDesc>(
                "item_conversion_recipe_desc",
                &self.item_conversion_recipe_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.item_desc = cache
            .apply_diff_to_table::<ItemDesc>("item_desc", &self.item_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.item_list_desc = cache
            .apply_diff_to_table::<ItemListDesc>("item_list_desc", &self.item_list_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.knowledge_achievement_state = cache
            .apply_diff_to_table::<KnowledgeAchievementState>(
                "knowledge_achievement_state",
                &self.knowledge_achievement_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_battle_action_state = cache
            .apply_diff_to_table::<KnowledgeBattleActionState>(
                "knowledge_battle_action_state",
                &self.knowledge_battle_action_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_building_state = cache
            .apply_diff_to_table::<KnowledgeBuildingState>(
                "knowledge_building_state",
                &self.knowledge_building_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_cargo_state = cache
            .apply_diff_to_table::<KnowledgeCargoState>(
                "knowledge_cargo_state",
                &self.knowledge_cargo_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_claim_state = cache
            .apply_diff_to_table::<KnowledgeClaimState>(
                "knowledge_claim_state",
                &self.knowledge_claim_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_construction_state = cache
            .apply_diff_to_table::<KnowledgeConstructionState>(
                "knowledge_construction_state",
                &self.knowledge_construction_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_craft_state = cache
            .apply_diff_to_table::<KnowledgeCraftState>(
                "knowledge_craft_state",
                &self.knowledge_craft_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_deployable_state = cache
            .apply_diff_to_table::<KnowledgeDeployableState>(
                "knowledge_deployable_state",
                &self.knowledge_deployable_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_enemy_state = cache
            .apply_diff_to_table::<KnowledgeEnemyState>(
                "knowledge_enemy_state",
                &self.knowledge_enemy_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_extract_state = cache
            .apply_diff_to_table::<KnowledgeExtractState>(
                "knowledge_extract_state",
                &self.knowledge_extract_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_item_state = cache
            .apply_diff_to_table::<KnowledgeItemState>(
                "knowledge_item_state",
                &self.knowledge_item_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_lore_state = cache
            .apply_diff_to_table::<KnowledgeLoreState>(
                "knowledge_lore_state",
                &self.knowledge_lore_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_npc_state = cache
            .apply_diff_to_table::<KnowledgeNpcState>(
                "knowledge_npc_state",
                &self.knowledge_npc_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_paving_state = cache
            .apply_diff_to_table::<KnowledgePavingState>(
                "knowledge_paving_state",
                &self.knowledge_paving_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_pillar_shaping_state = cache
            .apply_diff_to_table::<KnowledgePillarShapingState>(
                "knowledge_pillar_shaping_state",
                &self.knowledge_pillar_shaping_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_resource_placement_state = cache
            .apply_diff_to_table::<KnowledgeResourcePlacementState>(
                "knowledge_resource_placement_state",
                &self.knowledge_resource_placement_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_resource_state = cache
            .apply_diff_to_table::<KnowledgeResourceState>(
                "knowledge_resource_state",
                &self.knowledge_resource_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_ruins_state = cache
            .apply_diff_to_table::<KnowledgeRuinsState>(
                "knowledge_ruins_state",
                &self.knowledge_ruins_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_scroll_desc = cache
            .apply_diff_to_table::<KnowledgeScrollDesc>(
                "knowledge_scroll_desc",
                &self.knowledge_scroll_desc,
            )
            .with_updates_by_pk(|row| &row.item_id);
        diff.knowledge_scroll_type_desc = cache
            .apply_diff_to_table::<KnowledgeScrollTypeDesc>(
                "knowledge_scroll_type_desc",
                &self.knowledge_scroll_type_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.knowledge_secondary_state = cache
            .apply_diff_to_table::<KnowledgeSecondaryState>(
                "knowledge_secondary_state",
                &self.knowledge_secondary_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.knowledge_stat_modifier_desc = cache
            .apply_diff_to_table::<KnowledgeStatModifierDesc>(
                "knowledge_stat_modifier_desc",
                &self.knowledge_stat_modifier_desc,
            )
            .with_updates_by_pk(|row| &row.secondary_knowledge_id);
        diff.knowledge_vault_state = cache
            .apply_diff_to_table::<KnowledgeVaultState>(
                "knowledge_vault_state",
                &self.knowledge_vault_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.light_source_state = cache
            .apply_diff_to_table::<LightSourceState>("light_source_state", &self.light_source_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.location_cache = cache
            .apply_diff_to_table::<LocationCache>("location_cache", &self.location_cache)
            .with_updates_by_pk(|row| &row.version);
        diff.location_state = cache
            .apply_diff_to_table::<LocationState>("location_state", &self.location_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.loot_chest_desc = cache
            .apply_diff_to_table::<LootChestDesc>("loot_chest_desc", &self.loot_chest_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.loot_chest_despawn_timer = cache
            .apply_diff_to_table::<LootChestDespawnTimer>(
                "loot_chest_despawn_timer",
                &self.loot_chest_despawn_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.loot_chest_spawn_timer = cache
            .apply_diff_to_table::<LootChestSpawnTimer>(
                "loot_chest_spawn_timer",
                &self.loot_chest_spawn_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.loot_chest_state = cache
            .apply_diff_to_table::<LootChestState>("loot_chest_state", &self.loot_chest_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.loot_rarity_desc = cache
            .apply_diff_to_table::<LootRarityDesc>("loot_rarity_desc", &self.loot_rarity_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.loot_table_desc = cache
            .apply_diff_to_table::<LootTableDesc>("loot_table_desc", &self.loot_table_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.lost_items_state = cache
            .apply_diff_to_table::<LostItemsState>("lost_items_state", &self.lost_items_state)
            .with_updates_by_pk(|row| &row.inventory_entity_id);
        diff.mobile_entity_state = cache
            .apply_diff_to_table::<MobileEntityState>(
                "mobile_entity_state",
                &self.mobile_entity_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.mounting_state = cache
            .apply_diff_to_table::<MountingState>("mounting_state", &self.mounting_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.move_validation_strike_counter_state = cache
            .apply_diff_to_table::<MoveValidationStrikeCounterState>(
                "move_validation_strike_counter_state",
                &self.move_validation_strike_counter_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.npc_ai_loop_timer = cache
            .apply_diff_to_table::<NpcAiLoopTimer>("npc_ai_loop_timer", &self.npc_ai_loop_timer)
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.npc_desc = cache
            .apply_diff_to_table::<NpcDesc>("npc_desc", &self.npc_desc)
            .with_updates_by_pk(|row| &row.npc_type);
        diff.npc_state = cache
            .apply_diff_to_table::<NpcState>("npc_state", &self.npc_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.on_durability_zero_timer = cache
            .apply_diff_to_table::<OnDurabilityZeroTimer>(
                "on_durability_zero_timer",
                &self.on_durability_zero_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.onboarding_reward_desc = cache
            .apply_diff_to_table::<OnboardingRewardDesc>(
                "onboarding_reward_desc",
                &self.onboarding_reward_desc,
            )
            .with_updates_by_pk(|row| &row.state_id);
        diff.onboarding_state = cache
            .apply_diff_to_table::<OnboardingState>("onboarding_state", &self.onboarding_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.parameters_desc = cache
            .apply_diff_to_table::<ParametersDesc>("parameters_desc", &self.parameters_desc)
            .with_updates_by_pk(|row| &row.version);
        diff.parameters_player_move_desc = cache
            .apply_diff_to_table::<ParametersPlayerMoveDesc>(
                "parameters_player_move_desc",
                &self.parameters_player_move_desc,
            )
            .with_updates_by_pk(|row| &row.version);
        diff.passive_craft_state = cache
            .apply_diff_to_table::<PassiveCraftState>(
                "passive_craft_state",
                &self.passive_craft_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.passive_craft_timer = cache
            .apply_diff_to_table::<PassiveCraftTimer>(
                "passive_craft_timer",
                &self.passive_craft_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.pathfinding_desc = cache
            .apply_diff_to_table::<PathfindingDesc>("pathfinding_desc", &self.pathfinding_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.paved_tile_state = cache
            .apply_diff_to_table::<PavedTileState>("paved_tile_state", &self.paved_tile_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.paving_tile_desc = cache
            .apply_diff_to_table::<PavingTileDesc>("paving_tile_desc", &self.paving_tile_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.permission_state = cache
            .apply_diff_to_table::<PermissionState>("permission_state", &self.permission_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.pillar_shaping_desc = cache
            .apply_diff_to_table::<PillarShapingDesc>(
                "pillar_shaping_desc",
                &self.pillar_shaping_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.pillar_shaping_state = cache
            .apply_diff_to_table::<PillarShapingState>(
                "pillar_shaping_state",
                &self.pillar_shaping_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.player_action_desc = cache
            .apply_diff_to_table::<PlayerActionDesc>("player_action_desc", &self.player_action_desc)
            .with_updates_by_pk(|row| &row.action_type_id);
        diff.player_action_state = cache
            .apply_diff_to_table::<PlayerActionState>(
                "player_action_state",
                &self.player_action_state,
            )
            .with_updates_by_pk(|row| &row.auto_id);
        diff.player_death_timer = cache
            .apply_diff_to_table::<PlayerDeathTimer>("player_death_timer", &self.player_death_timer)
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.player_housing_desc = cache
            .apply_diff_to_table::<PlayerHousingDesc>(
                "player_housing_desc",
                &self.player_housing_desc,
            )
            .with_updates_by_pk(|row| &row.secondary_knowledge_id);
        diff.player_housing_evict_player_timer = cache
            .apply_diff_to_table::<PlayerHousingEvictPlayerTimer>(
                "player_housing_evict_player_timer",
                &self.player_housing_evict_player_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.player_housing_income_loop_timer = cache
            .apply_diff_to_table::<PlayerHousingIncomeLoopTimer>(
                "player_housing_income_loop_timer",
                &self.player_housing_income_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.player_housing_state = cache
            .apply_diff_to_table::<PlayerHousingState>(
                "player_housing_state",
                &self.player_housing_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.player_lowercase_username_state = cache
            .apply_diff_to_table::<PlayerLowercaseUsernameState>(
                "player_lowercase_username_state",
                &self.player_lowercase_username_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.player_note_state = cache
            .apply_diff_to_table::<PlayerNoteState>("player_note_state", &self.player_note_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.player_notification_event = cache
            .apply_diff_to_table::<PlayerNotificationEvent>(
                "player_notification_event",
                &self.player_notification_event,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.player_prefs_state = cache
            .apply_diff_to_table::<PlayerPrefsState>("player_prefs_state", &self.player_prefs_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.player_queue_state = cache
            .apply_diff_to_table::<PlayerQueueState>("player_queue_state", &self.player_queue_state)
            .with_updates_by_pk(|row| &row.index);
        diff.player_regen_loop_timer = cache
            .apply_diff_to_table::<PlayerRegenLoopTimer>(
                "player_regen_loop_timer",
                &self.player_regen_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.player_region_transfer_event = cache
            .apply_diff_to_table::<PlayerRegionTransferEvent>(
                "player_region_transfer_event",
                &self.player_region_transfer_event,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.player_report_state = cache
            .apply_diff_to_table::<PlayerReportState>(
                "player_report_state",
                &self.player_report_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.player_set_name_outcome_event = cache
            .apply_diff_to_table::<PlayerSetNameOutcomeEvent>(
                "player_set_name_outcome_event",
                &self.player_set_name_outcome_event,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.player_state = cache
            .apply_diff_to_table::<PlayerState>("player_state", &self.player_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.player_timestamp_state = cache
            .apply_diff_to_table::<PlayerTimestampState>(
                "player_timestamp_state",
                &self.player_timestamp_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.player_use_elevator_timer = cache
            .apply_diff_to_table::<PlayerUseElevatorTimer>(
                "player_use_elevator_timer",
                &self.player_use_elevator_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.player_username_state = cache
            .apply_diff_to_table::<PlayerUsernameState>(
                "player_username_state",
                &self.player_username_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.player_vote_conclude_timer = cache
            .apply_diff_to_table::<PlayerVoteConcludeTimer>(
                "player_vote_conclude_timer",
                &self.player_vote_conclude_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.player_vote_state = cache
            .apply_diff_to_table::<PlayerVoteState>("player_vote_state", &self.player_vote_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.portal_state = cache
            .apply_diff_to_table::<PortalState>("portal_state", &self.portal_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.private_parameters_desc = cache
            .apply_diff_to_table::<PrivateParametersDesc>(
                "private_parameters_desc",
                &self.private_parameters_desc,
            )
            .with_updates_by_pk(|row| &row.version);
        diff.progressive_action_state = cache
            .apply_diff_to_table::<ProgressiveActionState>(
                "progressive_action_state",
                &self.progressive_action_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.project_site_state = cache
            .apply_diff_to_table::<ProjectSiteState>("project_site_state", &self.project_site_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.region_connection_info = cache
            .apply_diff_to_table::<RegionConnectionInfo>(
                "region_connection_info",
                &self.region_connection_info,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.region_population_info = cache
            .apply_diff_to_table::<RegionPopulationInfo>(
                "region_population_info",
                &self.region_population_info,
            )
            .with_updates_by_pk(|row| &row.region_id);
        diff.region_popuplation_loop_timer = cache
            .apply_diff_to_table::<RegionPopulationLoopTimer>(
                "region_popuplation_loop_timer",
                &self.region_popuplation_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.region_sign_in_parameters = cache
            .apply_diff_to_table::<RegionSignInParameters>(
                "region_sign_in_parameters",
                &self.region_sign_in_parameters,
            )
            .with_updates_by_pk(|row| &row.region_id);
        diff.rent_collector_loop_timer = cache
            .apply_diff_to_table::<RentCollectorLoopTimer>(
                "rent_collector_loop_timer",
                &self.rent_collector_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.rent_evict_timer = cache
            .apply_diff_to_table::<RentEvictTimer>("rent_evict_timer", &self.rent_evict_timer)
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.rent_state = cache
            .apply_diff_to_table::<RentState>("rent_state", &self.rent_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.reset_chunk_index_timer = cache
            .apply_diff_to_table::<ResetChunkIndexTimer>(
                "reset_chunk_index_timer",
                &self.reset_chunk_index_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.reset_mobile_entity_timer = cache
            .apply_diff_to_table::<ResetMobileEntityTimer>(
                "reset_mobile_entity_timer",
                &self.reset_mobile_entity_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.resource_clump_desc = cache
            .apply_diff_to_table::<ResourceClumpDesc>(
                "resource_clump_desc",
                &self.resource_clump_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.resource_count = cache
            .apply_diff_to_table::<ResourceCount>("resource_count", &self.resource_count)
            .with_updates_by_pk(|row| &row.resource_id);
        diff.resource_desc = cache
            .apply_diff_to_table::<ResourceDesc>("resource_desc", &self.resource_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.resource_growth_recipe_desc = cache
            .apply_diff_to_table::<ResourceGrowthRecipeDesc>(
                "resource_growth_recipe_desc",
                &self.resource_growth_recipe_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.resource_health_state = cache
            .apply_diff_to_table::<ResourceHealthState>(
                "resource_health_state",
                &self.resource_health_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.resource_placement_recipe_desc = cache
            .apply_diff_to_table::<ResourcePlacementRecipeDesc>(
                "resource_placement_recipe_desc",
                &self.resource_placement_recipe_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.resource_spawn_timer = cache
            .apply_diff_to_table::<ResourceSpawnTimer>(
                "resource_spawn_timer",
                &self.resource_spawn_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.resource_state = cache
            .apply_diff_to_table::<ResourceState>("resource_state", &self.resource_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.resources_log = cache
            .apply_diff_to_table::<ResourcesLog>("resources_log", &self.resources_log)
            .with_updates_by_pk(|row| &row.version);
        diff.resources_regen_loop_timer = cache
            .apply_diff_to_table::<ResourcesRegenLoopTimer>(
                "resources_regen_loop_timer",
                &self.resources_regen_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.respawn_resource_in_chunk_timer = cache
            .apply_diff_to_table::<RespawnResourceInChunkTimer>(
                "respawn_resource_in_chunk_timer",
                &self.respawn_resource_in_chunk_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.rez_sick_long_term_state = cache
            .apply_diff_to_table::<RezSickLongTermState>(
                "rez_sick_long_term_state",
                &self.rez_sick_long_term_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.satiation_state = cache
            .apply_diff_to_table::<SatiationState>("satiation_state", &self.satiation_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.secondary_knowledge_desc = cache
            .apply_diff_to_table::<SecondaryKnowledgeDesc>(
                "secondary_knowledge_desc",
                &self.secondary_knowledge_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.sell_order_state = cache
            .apply_diff_to_table::<AuctionListingState>("sell_order_state", &self.sell_order_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.server_identity = cache
            .apply_diff_to_table::<ServerIdentity>("server_identity", &self.server_identity)
            .with_updates_by_pk(|row| &row.version);
        diff.signed_in_player_state = cache
            .apply_diff_to_table::<SignedInPlayerState>(
                "signed_in_player_state",
                &self.signed_in_player_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.single_resource_clump_info = cache
            .apply_diff_to_table::<SingleResourceClumpInfo>(
                "single_resource_clump_info",
                &self.single_resource_clump_info,
            )
            .with_updates_by_pk(|row| &row.clump_id);
        diff.single_resource_to_clump_desc = cache
            .apply_diff_to_table::<SingleResourceToClumpDesc>(
                "single_resource_to_clump_desc",
                &self.single_resource_to_clump_desc,
            )
            .with_updates_by_pk(|row| &row.resource_id);
        diff.skill_desc = cache
            .apply_diff_to_table::<SkillDesc>("skill_desc", &self.skill_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.staged_static_data = cache
            .apply_diff_to_table::<StagedStaticData>("staged_static_data", &self.staged_static_data)
            .with_updates_by_pk(|row| &row.version);
        diff.stamina_state = cache
            .apply_diff_to_table::<StaminaState>("stamina_state", &self.stamina_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.starving_loop_timer = cache
            .apply_diff_to_table::<StarvingLoopTimer>(
                "starving_loop_timer",
                &self.starving_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.starving_player_state = cache
            .apply_diff_to_table::<StarvingPlayerState>(
                "starving_player_state",
                &self.starving_player_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.target_state = cache
            .apply_diff_to_table::<TargetState>("target_state", &self.target_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.targetable_state = cache
            .apply_diff_to_table::<TargetableState>("targetable_state", &self.targetable_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.targeting_matrix_desc = cache
            .apply_diff_to_table::<TargetingMatrixDesc>(
                "targeting_matrix_desc",
                &self.targeting_matrix_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.teleport_item_desc = cache
            .apply_diff_to_table::<TeleportItemDesc>("teleport_item_desc", &self.teleport_item_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.teleport_player_timer = cache
            .apply_diff_to_table::<TeleportPlayerTimer>(
                "teleport_player_timer",
                &self.teleport_player_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.teleportation_energy_regen_loop_timer = cache
            .apply_diff_to_table::<TeleportationEnergyRegenLoopTimer>(
                "teleportation_energy_regen_loop_timer",
                &self.teleportation_energy_regen_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.teleportation_energy_state = cache
            .apply_diff_to_table::<TeleportationEnergyState>(
                "teleportation_energy_state",
                &self.teleportation_energy_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.terraform_progress_state = cache
            .apply_diff_to_table::<TerraformProgressState>(
                "terraform_progress_state",
                &self.terraform_progress_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.terraform_recipe_desc = cache
            .apply_diff_to_table::<TerraformRecipeDesc>(
                "terraform_recipe_desc",
                &self.terraform_recipe_desc,
            )
            .with_updates_by_pk(|row| &row.difference);
        diff.terrain_chunk_state = cache
            .apply_diff_to_table::<TerrainChunkState>(
                "terrain_chunk_state",
                &self.terrain_chunk_state,
            )
            .with_updates_by_pk(|row| &row.chunk_index);
        diff.the_great_placeholder_table = cache
            .apply_diff_to_table::<TheGreatPlaceHolderTable>(
                "the_great_placeholder_table",
                &self.the_great_placeholder_table,
            )
            .with_updates_by_pk(|row| &row.placeholder_id);
        diff.threat_state = cache
            .apply_diff_to_table::<ThreatState>("threat_state", &self.threat_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.tool_desc = cache
            .apply_diff_to_table::<ToolDesc>("tool_desc", &self.tool_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.tool_type_desc = cache
            .apply_diff_to_table::<ToolTypeDesc>("tool_type_desc", &self.tool_type_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.toolbar_state = cache
            .apply_diff_to_table::<ToolbarState>("toolbar_state", &self.toolbar_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.trade_order_state = cache
            .apply_diff_to_table::<TradeOrderState>("trade_order_state", &self.trade_order_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.trade_session_loop_timer = cache
            .apply_diff_to_table::<TradeSessionLoopTimer>(
                "trade_session_loop_timer",
                &self.trade_session_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.trade_session_state = cache
            .apply_diff_to_table::<TradeSessionState>(
                "trade_session_state",
                &self.trade_session_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.transfer_player_timer = cache
            .apply_diff_to_table::<TransferPlayerTimer>(
                "transfer_player_timer",
                &self.transfer_player_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.traveler_task_desc = cache
            .apply_diff_to_table::<TravelerTaskDesc>("traveler_task_desc", &self.traveler_task_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.traveler_task_loop_timer = cache
            .apply_diff_to_table::<TravelerTaskLoopTimer>(
                "traveler_task_loop_timer",
                &self.traveler_task_loop_timer,
            )
            .with_updates_by_pk(|row| &row.scheduled_id);
        diff.traveler_task_state = cache
            .apply_diff_to_table::<TravelerTaskState>(
                "traveler_task_state",
                &self.traveler_task_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.traveler_trade_order_desc = cache
            .apply_diff_to_table::<TravelerTradeOrderDesc>(
                "traveler_trade_order_desc",
                &self.traveler_trade_order_desc,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.unclaimed_collectibles_state = cache
            .apply_diff_to_table::<UnclaimedCollectiblesState>(
                "unclaimed_collectibles_state",
                &self.unclaimed_collectibles_state,
            )
            .with_updates_by_pk(|row| &row.identity);
        diff.unclaimed_shards_state = cache
            .apply_diff_to_table::<UnclaimedShardsState>(
                "unclaimed_shards_state",
                &self.unclaimed_shards_state,
            )
            .with_updates_by_pk(|row| &row.identity);
        diff.user_authentication_state = cache
            .apply_diff_to_table::<UserAuthenticationState>(
                "user_authentication_state",
                &self.user_authentication_state,
            )
            .with_updates_by_pk(|row| &row.identity);
        diff.user_moderation_state = cache
            .apply_diff_to_table::<UserModerationState>(
                "user_moderation_state",
                &self.user_moderation_state,
            )
            .with_updates_by_pk(|row| &row.entity_id);
        diff.user_previous_region_state = cache
            .apply_diff_to_table::<UserPreviousRegionState>(
                "user_previous_region_state",
                &self.user_previous_region_state,
            )
            .with_updates_by_pk(|row| &row.identity);
        diff.user_state = cache
            .apply_diff_to_table::<UserState>("user_state", &self.user_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.vault_state = cache
            .apply_diff_to_table::<VaultState>("vault_state", &self.vault_state)
            .with_updates_by_pk(|row| &row.entity_id);
        diff.wall_desc = cache
            .apply_diff_to_table::<WallDesc>("wall_desc", &self.wall_desc)
            .with_updates_by_pk(|row| &row.building_id);
        diff.weapon_desc = cache
            .apply_diff_to_table::<WeaponDesc>("weapon_desc", &self.weapon_desc)
            .with_updates_by_pk(|row| &row.item_id);
        diff.weapon_type_desc = cache
            .apply_diff_to_table::<WeaponTypeDesc>("weapon_type_desc", &self.weapon_type_desc)
            .with_updates_by_pk(|row| &row.id);
        diff.world_region_name_state = cache
            .apply_diff_to_table::<WorldRegionNameState>(
                "world_region_name_state",
                &self.world_region_name_state,
            )
            .with_updates_by_pk(|row| &row.id);
        diff.world_region_state = cache
            .apply_diff_to_table::<WorldRegionState>("world_region_state", &self.world_region_state)
            .with_updates_by_pk(|row| &row.id);

        diff
    }
}

#[derive(Default)]
#[allow(non_snake_case)]
#[doc(hidden)]
pub struct AppliedDiff<'r> {
    a_i_debug_state: __sdk::TableAppliedDiff<'r, AiDebugState>,
    achievement_desc: __sdk::TableAppliedDiff<'r, AchievementDesc>,
    action_state: __sdk::TableAppliedDiff<'r, ActionState>,
    active_buff_state: __sdk::TableAppliedDiff<'r, ActiveBuffState>,
    admin_broadcast: __sdk::TableAppliedDiff<'r, AdminBroadcast>,
    admin_restore_player_state_timer: __sdk::TableAppliedDiff<'r, AdminRestorePlayerStateTimer>,
    alert_desc: __sdk::TableAppliedDiff<'r, AlertDesc>,
    alert_state: __sdk::TableAppliedDiff<'r, AlertState>,
    attached_herds_state: __sdk::TableAppliedDiff<'r, AttachedHerdsState>,
    attack_impact_timer: __sdk::TableAppliedDiff<'r, AttackImpactTimer>,
    attack_outcome_state: __sdk::TableAppliedDiff<'r, AttackOutcomeState>,
    attack_timer: __sdk::TableAppliedDiff<'r, AttackTimer>,
    auto_claim_state: __sdk::TableAppliedDiff<'r, AutoClaimState>,
    auto_logout_loop_timer: __sdk::TableAppliedDiff<'r, AutoLogoutLoopTimer>,
    barter_stall_state: __sdk::TableAppliedDiff<'r, BarterStallState>,
    biome_desc: __sdk::TableAppliedDiff<'r, BiomeDesc>,
    buff_desc: __sdk::TableAppliedDiff<'r, BuffDesc>,
    buff_type_desc: __sdk::TableAppliedDiff<'r, BuffTypeDesc>,
    building_claim_desc: __sdk::TableAppliedDiff<'r, BuildingClaimDesc>,
    building_decay_loop_timer: __sdk::TableAppliedDiff<'r, BuildingDecayLoopTimer>,
    building_desc: __sdk::TableAppliedDiff<'r, BuildingDesc>,
    building_despawn_timer: __sdk::TableAppliedDiff<'r, BuildingDespawnTimer>,
    building_function_type_mapping_desc:
        __sdk::TableAppliedDiff<'r, BuildingFunctionTypeMappingDesc>,
    building_nickname_state: __sdk::TableAppliedDiff<'r, BuildingNicknameState>,
    building_portal_desc: __sdk::TableAppliedDiff<'r, BuildingPortalDesc>,
    building_repairs_desc: __sdk::TableAppliedDiff<'r, BuildingRepairsDesc>,
    building_spawn_desc: __sdk::TableAppliedDiff<'r, BuildingSpawnDesc>,
    building_state: __sdk::TableAppliedDiff<'r, BuildingState>,
    building_type_desc: __sdk::TableAppliedDiff<'r, BuildingTypeDesc>,
    buy_order_state: __sdk::TableAppliedDiff<'r, AuctionListingState>,
    cargo_desc: __sdk::TableAppliedDiff<'r, CargoDesc>,
    character_stat_desc: __sdk::TableAppliedDiff<'r, CharacterStatDesc>,
    character_stats_state: __sdk::TableAppliedDiff<'r, CharacterStatsState>,
    chat_message_state: __sdk::TableAppliedDiff<'r, ChatMessageState>,
    chest_rarity_desc: __sdk::TableAppliedDiff<'r, ChestRarityDesc>,
    claim_local_state: __sdk::TableAppliedDiff<'r, ClaimLocalState>,
    claim_member_state: __sdk::TableAppliedDiff<'r, ClaimMemberState>,
    claim_recruitment_state: __sdk::TableAppliedDiff<'r, ClaimRecruitmentState>,
    claim_state: __sdk::TableAppliedDiff<'r, ClaimState>,
    claim_tech_desc: __sdk::TableAppliedDiff<'r, ClaimTechDesc>,
    claim_tech_state: __sdk::TableAppliedDiff<'r, ClaimTechState>,
    claim_tech_unlock_timer: __sdk::TableAppliedDiff<'r, ClaimTechUnlockTimer>,
    claim_tile_cost: __sdk::TableAppliedDiff<'r, ClaimTileCost>,
    claim_tile_state: __sdk::TableAppliedDiff<'r, ClaimTileState>,
    climb_requirement_desc: __sdk::TableAppliedDiff<'r, ClimbRequirementDesc>,
    closed_listing_state: __sdk::TableAppliedDiff<'r, ClosedListingState>,
    clothing_desc: __sdk::TableAppliedDiff<'r, ClothingDesc>,
    collect_stats_timer: __sdk::TableAppliedDiff<'r, CollectStatsTimer>,
    collectible_desc: __sdk::TableAppliedDiff<'r, CollectibleDesc>,
    combat_action_desc: __sdk::TableAppliedDiff<'r, CombatActionDesc>,
    combat_state: __sdk::TableAppliedDiff<'r, CombatState>,
    config: __sdk::TableAppliedDiff<'r, Config>,
    construction_recipe_desc: __sdk::TableAppliedDiff<'r, ConstructionRecipeDesc>,
    crafting_recipe_desc: __sdk::TableAppliedDiff<'r, CraftingRecipeDesc>,
    day_night_loop_timer: __sdk::TableAppliedDiff<'r, DayNightLoopTimer>,
    deconstruction_recipe_desc: __sdk::TableAppliedDiff<'r, DeconstructionRecipeDesc>,
    deployable_collectible_state: __sdk::TableAppliedDiff<'r, DeployableCollectibleState>,
    deployable_desc: __sdk::TableAppliedDiff<'r, DeployableDesc>,
    deployable_dismount_timer: __sdk::TableAppliedDiff<'r, DeployableDismountTimer>,
    deployable_state: __sdk::TableAppliedDiff<'r, DeployableState>,
    destroy_dimension_network_timer: __sdk::TableAppliedDiff<'r, DestroyDimensionNetworkTimer>,
    dimension_description_state: __sdk::TableAppliedDiff<'r, DimensionDescriptionState>,
    dimension_network_state: __sdk::TableAppliedDiff<'r, DimensionNetworkState>,
    distant_visible_entity: __sdk::TableAppliedDiff<'r, DistantVisibleEntity>,
    distant_visible_entity_desc: __sdk::TableAppliedDiff<'r, DistantVisibleEntityDesc>,
    dropped_inventory_despawn_timer: __sdk::TableAppliedDiff<'r, DroppedInventoryDespawnTimer>,
    dropped_inventory_ownership_timer: __sdk::TableAppliedDiff<'r, DroppedInventoryOwnershipTimer>,
    dropped_inventory_state: __sdk::TableAppliedDiff<'r, DroppedInventoryState>,
    duel_agent_timer: __sdk::TableAppliedDiff<'r, DuelAgentTimer>,
    duel_despawn_timer: __sdk::TableAppliedDiff<'r, DuelDespawnTimer>,
    duel_state: __sdk::TableAppliedDiff<'r, DuelState>,
    elevator_desc: __sdk::TableAppliedDiff<'r, ElevatorDesc>,
    emote_desc: __sdk::TableAppliedDiff<'r, EmoteDesc>,
    empire_chunk_state: __sdk::TableAppliedDiff<'r, EmpireChunkState>,
    empire_color_desc: __sdk::TableAppliedDiff<'r, EmpireColorDesc>,
    empire_expansion_state: __sdk::TableAppliedDiff<'r, EmpireExpansionState>,
    empire_icon_desc: __sdk::TableAppliedDiff<'r, EmpireIconDesc>,
    empire_node_siege_state: __sdk::TableAppliedDiff<'r, EmpireNodeSiegeState>,
    empire_node_state: __sdk::TableAppliedDiff<'r, EmpireNodeState>,
    empire_notification_desc: __sdk::TableAppliedDiff<'r, EmpireNotificationDesc>,
    empire_player_data_state: __sdk::TableAppliedDiff<'r, EmpirePlayerDataState>,
    empire_rank_desc: __sdk::TableAppliedDiff<'r, EmpireRankDesc>,
    empire_rank_state: __sdk::TableAppliedDiff<'r, EmpireRankState>,
    empire_settlement_state: __sdk::TableAppliedDiff<'r, EmpireSettlementState>,
    empire_state: __sdk::TableAppliedDiff<'r, EmpireState>,
    empire_supplies_desc: __sdk::TableAppliedDiff<'r, EmpireSuppliesDesc>,
    empire_territory_desc: __sdk::TableAppliedDiff<'r, EmpireTerritoryDesc>,
    end_grace_period_timer: __sdk::TableAppliedDiff<'r, EndGracePeriodTimer>,
    enemy_ai_params_desc: __sdk::TableAppliedDiff<'r, EnemyAiParamsDesc>,
    enemy_desc: __sdk::TableAppliedDiff<'r, EnemyDesc>,
    enemy_despawn_timer: __sdk::TableAppliedDiff<'r, EnemyDespawnTimer>,
    enemy_mob_monitor_state: __sdk::TableAppliedDiff<'r, EnemyMobMonitorState>,
    enemy_regen_loop_timer: __sdk::TableAppliedDiff<'r, EnemyRegenLoopTimer>,
    enemy_state: __sdk::TableAppliedDiff<'r, EnemyState>,
    environment_debuff_desc: __sdk::TableAppliedDiff<'r, EnvironmentDebuffDesc>,
    environment_debuff_loop_timer: __sdk::TableAppliedDiff<'r, EnvironmentDebuffLoopTimer>,
    equipment_desc: __sdk::TableAppliedDiff<'r, EquipmentDesc>,
    equipment_state: __sdk::TableAppliedDiff<'r, EquipmentState>,
    experience_state: __sdk::TableAppliedDiff<'r, ExperienceState>,
    exploration_chunks_state: __sdk::TableAppliedDiff<'r, ExplorationChunksState>,
    extract_outcome_state: __sdk::TableAppliedDiff<'r, ExtractOutcomeState>,
    extraction_recipe_desc: __sdk::TableAppliedDiff<'r, ExtractionRecipeDesc>,
    food_desc: __sdk::TableAppliedDiff<'r, FoodDesc>,
    footprint_tile_state: __sdk::TableAppliedDiff<'r, FootprintTileState>,
    force_generate_types: __sdk::TableAppliedDiff<'r, ForceGenerateTypes>,
    gate_desc: __sdk::TableAppliedDiff<'r, GateDesc>,
    global_search_state: __sdk::TableAppliedDiff<'r, GlobalSearchState>,
    globals: __sdk::TableAppliedDiff<'r, Globals>,
    growth_loop_timer: __sdk::TableAppliedDiff<'r, GrowthLoopTimer>,
    growth_state: __sdk::TableAppliedDiff<'r, GrowthState>,
    health_state: __sdk::TableAppliedDiff<'r, HealthState>,
    herd_state: __sdk::TableAppliedDiff<'r, HerdState>,
    hexite_exchange_entry_desc: __sdk::TableAppliedDiff<'r, HexiteExchangeEntryDesc>,
    hide_deployable_timer: __sdk::TableAppliedDiff<'r, HideDeployableTimer>,
    identity_role: __sdk::TableAppliedDiff<'r, IdentityRole>,
    inter_module_message: __sdk::TableAppliedDiff<'r, InterModuleMessage>,
    inter_module_message_counter: __sdk::TableAppliedDiff<'r, InterModuleMessageCounter>,
    inter_module_response_message_counter:
        __sdk::TableAppliedDiff<'r, InterModuleResponseMessageCounter>,
    interior_collapse_trigger_state: __sdk::TableAppliedDiff<'r, InteriorCollapseTriggerState>,
    interior_environment_desc: __sdk::TableAppliedDiff<'r, InteriorEnvironmentDesc>,
    interior_instance_desc: __sdk::TableAppliedDiff<'r, InteriorInstanceDesc>,
    interior_network_desc: __sdk::TableAppliedDiff<'r, InteriorNetworkDesc>,
    interior_portal_connections_desc: __sdk::TableAppliedDiff<'r, InteriorPortalConnectionsDesc>,
    interior_set_collapsed_timer: __sdk::TableAppliedDiff<'r, InteriorSetCollapsedTimer>,
    interior_shape_desc: __sdk::TableAppliedDiff<'r, InteriorShapeDesc>,
    interior_spawn_desc: __sdk::TableAppliedDiff<'r, InteriorSpawnDesc>,
    inventory_state: __sdk::TableAppliedDiff<'r, InventoryState>,
    item_conversion_recipe_desc: __sdk::TableAppliedDiff<'r, ItemConversionRecipeDesc>,
    item_desc: __sdk::TableAppliedDiff<'r, ItemDesc>,
    item_list_desc: __sdk::TableAppliedDiff<'r, ItemListDesc>,
    knowledge_achievement_state: __sdk::TableAppliedDiff<'r, KnowledgeAchievementState>,
    knowledge_battle_action_state: __sdk::TableAppliedDiff<'r, KnowledgeBattleActionState>,
    knowledge_building_state: __sdk::TableAppliedDiff<'r, KnowledgeBuildingState>,
    knowledge_cargo_state: __sdk::TableAppliedDiff<'r, KnowledgeCargoState>,
    knowledge_claim_state: __sdk::TableAppliedDiff<'r, KnowledgeClaimState>,
    knowledge_construction_state: __sdk::TableAppliedDiff<'r, KnowledgeConstructionState>,
    knowledge_craft_state: __sdk::TableAppliedDiff<'r, KnowledgeCraftState>,
    knowledge_deployable_state: __sdk::TableAppliedDiff<'r, KnowledgeDeployableState>,
    knowledge_enemy_state: __sdk::TableAppliedDiff<'r, KnowledgeEnemyState>,
    knowledge_extract_state: __sdk::TableAppliedDiff<'r, KnowledgeExtractState>,
    knowledge_item_state: __sdk::TableAppliedDiff<'r, KnowledgeItemState>,
    knowledge_lore_state: __sdk::TableAppliedDiff<'r, KnowledgeLoreState>,
    knowledge_npc_state: __sdk::TableAppliedDiff<'r, KnowledgeNpcState>,
    knowledge_paving_state: __sdk::TableAppliedDiff<'r, KnowledgePavingState>,
    knowledge_pillar_shaping_state: __sdk::TableAppliedDiff<'r, KnowledgePillarShapingState>,
    knowledge_resource_placement_state:
        __sdk::TableAppliedDiff<'r, KnowledgeResourcePlacementState>,
    knowledge_resource_state: __sdk::TableAppliedDiff<'r, KnowledgeResourceState>,
    knowledge_ruins_state: __sdk::TableAppliedDiff<'r, KnowledgeRuinsState>,
    knowledge_scroll_desc: __sdk::TableAppliedDiff<'r, KnowledgeScrollDesc>,
    knowledge_scroll_type_desc: __sdk::TableAppliedDiff<'r, KnowledgeScrollTypeDesc>,
    knowledge_secondary_state: __sdk::TableAppliedDiff<'r, KnowledgeSecondaryState>,
    knowledge_stat_modifier_desc: __sdk::TableAppliedDiff<'r, KnowledgeStatModifierDesc>,
    knowledge_vault_state: __sdk::TableAppliedDiff<'r, KnowledgeVaultState>,
    light_source_state: __sdk::TableAppliedDiff<'r, LightSourceState>,
    location_cache: __sdk::TableAppliedDiff<'r, LocationCache>,
    location_state: __sdk::TableAppliedDiff<'r, LocationState>,
    loot_chest_desc: __sdk::TableAppliedDiff<'r, LootChestDesc>,
    loot_chest_despawn_timer: __sdk::TableAppliedDiff<'r, LootChestDespawnTimer>,
    loot_chest_spawn_timer: __sdk::TableAppliedDiff<'r, LootChestSpawnTimer>,
    loot_chest_state: __sdk::TableAppliedDiff<'r, LootChestState>,
    loot_rarity_desc: __sdk::TableAppliedDiff<'r, LootRarityDesc>,
    loot_table_desc: __sdk::TableAppliedDiff<'r, LootTableDesc>,
    lost_items_state: __sdk::TableAppliedDiff<'r, LostItemsState>,
    mobile_entity_state: __sdk::TableAppliedDiff<'r, MobileEntityState>,
    mounting_state: __sdk::TableAppliedDiff<'r, MountingState>,
    move_validation_strike_counter_state:
        __sdk::TableAppliedDiff<'r, MoveValidationStrikeCounterState>,
    npc_ai_loop_timer: __sdk::TableAppliedDiff<'r, NpcAiLoopTimer>,
    npc_desc: __sdk::TableAppliedDiff<'r, NpcDesc>,
    npc_state: __sdk::TableAppliedDiff<'r, NpcState>,
    on_durability_zero_timer: __sdk::TableAppliedDiff<'r, OnDurabilityZeroTimer>,
    onboarding_reward_desc: __sdk::TableAppliedDiff<'r, OnboardingRewardDesc>,
    onboarding_state: __sdk::TableAppliedDiff<'r, OnboardingState>,
    parameters_desc: __sdk::TableAppliedDiff<'r, ParametersDesc>,
    parameters_player_move_desc: __sdk::TableAppliedDiff<'r, ParametersPlayerMoveDesc>,
    passive_craft_state: __sdk::TableAppliedDiff<'r, PassiveCraftState>,
    passive_craft_timer: __sdk::TableAppliedDiff<'r, PassiveCraftTimer>,
    pathfinding_desc: __sdk::TableAppliedDiff<'r, PathfindingDesc>,
    paved_tile_state: __sdk::TableAppliedDiff<'r, PavedTileState>,
    paving_tile_desc: __sdk::TableAppliedDiff<'r, PavingTileDesc>,
    permission_state: __sdk::TableAppliedDiff<'r, PermissionState>,
    pillar_shaping_desc: __sdk::TableAppliedDiff<'r, PillarShapingDesc>,
    pillar_shaping_state: __sdk::TableAppliedDiff<'r, PillarShapingState>,
    player_action_desc: __sdk::TableAppliedDiff<'r, PlayerActionDesc>,
    player_action_state: __sdk::TableAppliedDiff<'r, PlayerActionState>,
    player_death_timer: __sdk::TableAppliedDiff<'r, PlayerDeathTimer>,
    player_housing_desc: __sdk::TableAppliedDiff<'r, PlayerHousingDesc>,
    player_housing_evict_player_timer: __sdk::TableAppliedDiff<'r, PlayerHousingEvictPlayerTimer>,
    player_housing_income_loop_timer: __sdk::TableAppliedDiff<'r, PlayerHousingIncomeLoopTimer>,
    player_housing_state: __sdk::TableAppliedDiff<'r, PlayerHousingState>,
    player_lowercase_username_state: __sdk::TableAppliedDiff<'r, PlayerLowercaseUsernameState>,
    player_note_state: __sdk::TableAppliedDiff<'r, PlayerNoteState>,
    player_notification_event: __sdk::TableAppliedDiff<'r, PlayerNotificationEvent>,
    player_prefs_state: __sdk::TableAppliedDiff<'r, PlayerPrefsState>,
    player_queue_state: __sdk::TableAppliedDiff<'r, PlayerQueueState>,
    player_regen_loop_timer: __sdk::TableAppliedDiff<'r, PlayerRegenLoopTimer>,
    player_region_transfer_event: __sdk::TableAppliedDiff<'r, PlayerRegionTransferEvent>,
    player_report_state: __sdk::TableAppliedDiff<'r, PlayerReportState>,
    player_set_name_outcome_event: __sdk::TableAppliedDiff<'r, PlayerSetNameOutcomeEvent>,
    player_state: __sdk::TableAppliedDiff<'r, PlayerState>,
    player_timestamp_state: __sdk::TableAppliedDiff<'r, PlayerTimestampState>,
    player_use_elevator_timer: __sdk::TableAppliedDiff<'r, PlayerUseElevatorTimer>,
    player_username_state: __sdk::TableAppliedDiff<'r, PlayerUsernameState>,
    player_vote_conclude_timer: __sdk::TableAppliedDiff<'r, PlayerVoteConcludeTimer>,
    player_vote_state: __sdk::TableAppliedDiff<'r, PlayerVoteState>,
    portal_state: __sdk::TableAppliedDiff<'r, PortalState>,
    private_parameters_desc: __sdk::TableAppliedDiff<'r, PrivateParametersDesc>,
    progressive_action_state: __sdk::TableAppliedDiff<'r, ProgressiveActionState>,
    project_site_state: __sdk::TableAppliedDiff<'r, ProjectSiteState>,
    region_connection_info: __sdk::TableAppliedDiff<'r, RegionConnectionInfo>,
    region_population_info: __sdk::TableAppliedDiff<'r, RegionPopulationInfo>,
    region_popuplation_loop_timer: __sdk::TableAppliedDiff<'r, RegionPopulationLoopTimer>,
    region_sign_in_parameters: __sdk::TableAppliedDiff<'r, RegionSignInParameters>,
    rent_collector_loop_timer: __sdk::TableAppliedDiff<'r, RentCollectorLoopTimer>,
    rent_evict_timer: __sdk::TableAppliedDiff<'r, RentEvictTimer>,
    rent_state: __sdk::TableAppliedDiff<'r, RentState>,
    reset_chunk_index_timer: __sdk::TableAppliedDiff<'r, ResetChunkIndexTimer>,
    reset_mobile_entity_timer: __sdk::TableAppliedDiff<'r, ResetMobileEntityTimer>,
    resource_clump_desc: __sdk::TableAppliedDiff<'r, ResourceClumpDesc>,
    resource_count: __sdk::TableAppliedDiff<'r, ResourceCount>,
    resource_desc: __sdk::TableAppliedDiff<'r, ResourceDesc>,
    resource_growth_recipe_desc: __sdk::TableAppliedDiff<'r, ResourceGrowthRecipeDesc>,
    resource_health_state: __sdk::TableAppliedDiff<'r, ResourceHealthState>,
    resource_placement_recipe_desc: __sdk::TableAppliedDiff<'r, ResourcePlacementRecipeDesc>,
    resource_spawn_timer: __sdk::TableAppliedDiff<'r, ResourceSpawnTimer>,
    resource_state: __sdk::TableAppliedDiff<'r, ResourceState>,
    resources_log: __sdk::TableAppliedDiff<'r, ResourcesLog>,
    resources_regen_loop_timer: __sdk::TableAppliedDiff<'r, ResourcesRegenLoopTimer>,
    respawn_resource_in_chunk_timer: __sdk::TableAppliedDiff<'r, RespawnResourceInChunkTimer>,
    rez_sick_long_term_state: __sdk::TableAppliedDiff<'r, RezSickLongTermState>,
    satiation_state: __sdk::TableAppliedDiff<'r, SatiationState>,
    secondary_knowledge_desc: __sdk::TableAppliedDiff<'r, SecondaryKnowledgeDesc>,
    sell_order_state: __sdk::TableAppliedDiff<'r, AuctionListingState>,
    server_identity: __sdk::TableAppliedDiff<'r, ServerIdentity>,
    signed_in_player_state: __sdk::TableAppliedDiff<'r, SignedInPlayerState>,
    single_resource_clump_info: __sdk::TableAppliedDiff<'r, SingleResourceClumpInfo>,
    single_resource_to_clump_desc: __sdk::TableAppliedDiff<'r, SingleResourceToClumpDesc>,
    skill_desc: __sdk::TableAppliedDiff<'r, SkillDesc>,
    staged_static_data: __sdk::TableAppliedDiff<'r, StagedStaticData>,
    stamina_state: __sdk::TableAppliedDiff<'r, StaminaState>,
    starving_loop_timer: __sdk::TableAppliedDiff<'r, StarvingLoopTimer>,
    starving_player_state: __sdk::TableAppliedDiff<'r, StarvingPlayerState>,
    target_state: __sdk::TableAppliedDiff<'r, TargetState>,
    targetable_state: __sdk::TableAppliedDiff<'r, TargetableState>,
    targeting_matrix_desc: __sdk::TableAppliedDiff<'r, TargetingMatrixDesc>,
    teleport_item_desc: __sdk::TableAppliedDiff<'r, TeleportItemDesc>,
    teleport_player_timer: __sdk::TableAppliedDiff<'r, TeleportPlayerTimer>,
    teleportation_energy_regen_loop_timer:
        __sdk::TableAppliedDiff<'r, TeleportationEnergyRegenLoopTimer>,
    teleportation_energy_state: __sdk::TableAppliedDiff<'r, TeleportationEnergyState>,
    terraform_progress_state: __sdk::TableAppliedDiff<'r, TerraformProgressState>,
    terraform_recipe_desc: __sdk::TableAppliedDiff<'r, TerraformRecipeDesc>,
    terrain_chunk_state: __sdk::TableAppliedDiff<'r, TerrainChunkState>,
    the_great_placeholder_table: __sdk::TableAppliedDiff<'r, TheGreatPlaceHolderTable>,
    threat_state: __sdk::TableAppliedDiff<'r, ThreatState>,
    tool_desc: __sdk::TableAppliedDiff<'r, ToolDesc>,
    tool_type_desc: __sdk::TableAppliedDiff<'r, ToolTypeDesc>,
    toolbar_state: __sdk::TableAppliedDiff<'r, ToolbarState>,
    trade_order_state: __sdk::TableAppliedDiff<'r, TradeOrderState>,
    trade_session_loop_timer: __sdk::TableAppliedDiff<'r, TradeSessionLoopTimer>,
    trade_session_state: __sdk::TableAppliedDiff<'r, TradeSessionState>,
    transfer_player_timer: __sdk::TableAppliedDiff<'r, TransferPlayerTimer>,
    traveler_task_desc: __sdk::TableAppliedDiff<'r, TravelerTaskDesc>,
    traveler_task_loop_timer: __sdk::TableAppliedDiff<'r, TravelerTaskLoopTimer>,
    traveler_task_state: __sdk::TableAppliedDiff<'r, TravelerTaskState>,
    traveler_trade_order_desc: __sdk::TableAppliedDiff<'r, TravelerTradeOrderDesc>,
    unclaimed_collectibles_state: __sdk::TableAppliedDiff<'r, UnclaimedCollectiblesState>,
    unclaimed_shards_state: __sdk::TableAppliedDiff<'r, UnclaimedShardsState>,
    user_authentication_state: __sdk::TableAppliedDiff<'r, UserAuthenticationState>,
    user_moderation_state: __sdk::TableAppliedDiff<'r, UserModerationState>,
    user_previous_region_state: __sdk::TableAppliedDiff<'r, UserPreviousRegionState>,
    user_state: __sdk::TableAppliedDiff<'r, UserState>,
    vault_state: __sdk::TableAppliedDiff<'r, VaultState>,
    wall_desc: __sdk::TableAppliedDiff<'r, WallDesc>,
    weapon_desc: __sdk::TableAppliedDiff<'r, WeaponDesc>,
    weapon_type_desc: __sdk::TableAppliedDiff<'r, WeaponTypeDesc>,
    world_region_name_state: __sdk::TableAppliedDiff<'r, WorldRegionNameState>,
    world_region_state: __sdk::TableAppliedDiff<'r, WorldRegionState>,
}

impl __sdk::InModule for AppliedDiff<'_> {
    type Module = RemoteModule;
}

impl<'r> __sdk::AppliedDiff<'r> for AppliedDiff<'r> {
    fn invoke_row_callbacks(
        &self,
        event: &EventContext,
        callbacks: &mut __sdk::DbCallbacks<RemoteModule>,
    ) {
        callbacks.invoke_table_row_callbacks::<AiDebugState>(
            "a_i_debug_state",
            &self.a_i_debug_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AchievementDesc>(
            "achievement_desc",
            &self.achievement_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ActionState>(
            "action_state",
            &self.action_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ActiveBuffState>(
            "active_buff_state",
            &self.active_buff_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AdminBroadcast>(
            "admin_broadcast",
            &self.admin_broadcast,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AdminRestorePlayerStateTimer>(
            "admin_restore_player_state_timer",
            &self.admin_restore_player_state_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AlertDesc>("alert_desc", &self.alert_desc, event);
        callbacks.invoke_table_row_callbacks::<AlertState>("alert_state", &self.alert_state, event);
        callbacks.invoke_table_row_callbacks::<AttachedHerdsState>(
            "attached_herds_state",
            &self.attached_herds_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AttackImpactTimer>(
            "attack_impact_timer",
            &self.attack_impact_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AttackOutcomeState>(
            "attack_outcome_state",
            &self.attack_outcome_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AttackTimer>(
            "attack_timer",
            &self.attack_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AutoClaimState>(
            "auto_claim_state",
            &self.auto_claim_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AutoLogoutLoopTimer>(
            "auto_logout_loop_timer",
            &self.auto_logout_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BarterStallState>(
            "barter_stall_state",
            &self.barter_stall_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BiomeDesc>("biome_desc", &self.biome_desc, event);
        callbacks.invoke_table_row_callbacks::<BuffDesc>("buff_desc", &self.buff_desc, event);
        callbacks.invoke_table_row_callbacks::<BuffTypeDesc>(
            "buff_type_desc",
            &self.buff_type_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingClaimDesc>(
            "building_claim_desc",
            &self.building_claim_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingDecayLoopTimer>(
            "building_decay_loop_timer",
            &self.building_decay_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingDesc>(
            "building_desc",
            &self.building_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingDespawnTimer>(
            "building_despawn_timer",
            &self.building_despawn_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingFunctionTypeMappingDesc>(
            "building_function_type_mapping_desc",
            &self.building_function_type_mapping_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingNicknameState>(
            "building_nickname_state",
            &self.building_nickname_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingPortalDesc>(
            "building_portal_desc",
            &self.building_portal_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingRepairsDesc>(
            "building_repairs_desc",
            &self.building_repairs_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingSpawnDesc>(
            "building_spawn_desc",
            &self.building_spawn_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingState>(
            "building_state",
            &self.building_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<BuildingTypeDesc>(
            "building_type_desc",
            &self.building_type_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AuctionListingState>(
            "buy_order_state",
            &self.buy_order_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<CargoDesc>("cargo_desc", &self.cargo_desc, event);
        callbacks.invoke_table_row_callbacks::<CharacterStatDesc>(
            "character_stat_desc",
            &self.character_stat_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<CharacterStatsState>(
            "character_stats_state",
            &self.character_stats_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ChatMessageState>(
            "chat_message_state",
            &self.chat_message_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ChestRarityDesc>(
            "chest_rarity_desc",
            &self.chest_rarity_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClaimLocalState>(
            "claim_local_state",
            &self.claim_local_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClaimMemberState>(
            "claim_member_state",
            &self.claim_member_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClaimRecruitmentState>(
            "claim_recruitment_state",
            &self.claim_recruitment_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClaimState>("claim_state", &self.claim_state, event);
        callbacks.invoke_table_row_callbacks::<ClaimTechDesc>(
            "claim_tech_desc",
            &self.claim_tech_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClaimTechState>(
            "claim_tech_state",
            &self.claim_tech_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClaimTechUnlockTimer>(
            "claim_tech_unlock_timer",
            &self.claim_tech_unlock_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClaimTileCost>(
            "claim_tile_cost",
            &self.claim_tile_cost,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClaimTileState>(
            "claim_tile_state",
            &self.claim_tile_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClimbRequirementDesc>(
            "climb_requirement_desc",
            &self.climb_requirement_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClosedListingState>(
            "closed_listing_state",
            &self.closed_listing_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ClothingDesc>(
            "clothing_desc",
            &self.clothing_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<CollectStatsTimer>(
            "collect_stats_timer",
            &self.collect_stats_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<CollectibleDesc>(
            "collectible_desc",
            &self.collectible_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<CombatActionDesc>(
            "combat_action_desc",
            &self.combat_action_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<CombatState>(
            "combat_state",
            &self.combat_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<Config>("config", &self.config, event);
        callbacks.invoke_table_row_callbacks::<ConstructionRecipeDesc>(
            "construction_recipe_desc",
            &self.construction_recipe_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<CraftingRecipeDesc>(
            "crafting_recipe_desc",
            &self.crafting_recipe_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DayNightLoopTimer>(
            "day_night_loop_timer",
            &self.day_night_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DeconstructionRecipeDesc>(
            "deconstruction_recipe_desc",
            &self.deconstruction_recipe_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DeployableCollectibleState>(
            "deployable_collectible_state",
            &self.deployable_collectible_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DeployableDesc>(
            "deployable_desc",
            &self.deployable_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DeployableDismountTimer>(
            "deployable_dismount_timer",
            &self.deployable_dismount_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DeployableState>(
            "deployable_state",
            &self.deployable_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DestroyDimensionNetworkTimer>(
            "destroy_dimension_network_timer",
            &self.destroy_dimension_network_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DimensionDescriptionState>(
            "dimension_description_state",
            &self.dimension_description_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DimensionNetworkState>(
            "dimension_network_state",
            &self.dimension_network_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DistantVisibleEntity>(
            "distant_visible_entity",
            &self.distant_visible_entity,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DistantVisibleEntityDesc>(
            "distant_visible_entity_desc",
            &self.distant_visible_entity_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DroppedInventoryDespawnTimer>(
            "dropped_inventory_despawn_timer",
            &self.dropped_inventory_despawn_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DroppedInventoryOwnershipTimer>(
            "dropped_inventory_ownership_timer",
            &self.dropped_inventory_ownership_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DroppedInventoryState>(
            "dropped_inventory_state",
            &self.dropped_inventory_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DuelAgentTimer>(
            "duel_agent_timer",
            &self.duel_agent_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DuelDespawnTimer>(
            "duel_despawn_timer",
            &self.duel_despawn_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<DuelState>("duel_state", &self.duel_state, event);
        callbacks.invoke_table_row_callbacks::<ElevatorDesc>(
            "elevator_desc",
            &self.elevator_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmoteDesc>("emote_desc", &self.emote_desc, event);
        callbacks.invoke_table_row_callbacks::<EmpireChunkState>(
            "empire_chunk_state",
            &self.empire_chunk_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireColorDesc>(
            "empire_color_desc",
            &self.empire_color_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireExpansionState>(
            "empire_expansion_state",
            &self.empire_expansion_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireIconDesc>(
            "empire_icon_desc",
            &self.empire_icon_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireNodeSiegeState>(
            "empire_node_siege_state",
            &self.empire_node_siege_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireNodeState>(
            "empire_node_state",
            &self.empire_node_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireNotificationDesc>(
            "empire_notification_desc",
            &self.empire_notification_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpirePlayerDataState>(
            "empire_player_data_state",
            &self.empire_player_data_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireRankDesc>(
            "empire_rank_desc",
            &self.empire_rank_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireRankState>(
            "empire_rank_state",
            &self.empire_rank_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireSettlementState>(
            "empire_settlement_state",
            &self.empire_settlement_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireState>(
            "empire_state",
            &self.empire_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireSuppliesDesc>(
            "empire_supplies_desc",
            &self.empire_supplies_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EmpireTerritoryDesc>(
            "empire_territory_desc",
            &self.empire_territory_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EndGracePeriodTimer>(
            "end_grace_period_timer",
            &self.end_grace_period_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EnemyAiParamsDesc>(
            "enemy_ai_params_desc",
            &self.enemy_ai_params_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EnemyDesc>("enemy_desc", &self.enemy_desc, event);
        callbacks.invoke_table_row_callbacks::<EnemyDespawnTimer>(
            "enemy_despawn_timer",
            &self.enemy_despawn_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EnemyMobMonitorState>(
            "enemy_mob_monitor_state",
            &self.enemy_mob_monitor_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EnemyRegenLoopTimer>(
            "enemy_regen_loop_timer",
            &self.enemy_regen_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EnemyState>("enemy_state", &self.enemy_state, event);
        callbacks.invoke_table_row_callbacks::<EnvironmentDebuffDesc>(
            "environment_debuff_desc",
            &self.environment_debuff_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EnvironmentDebuffLoopTimer>(
            "environment_debuff_loop_timer",
            &self.environment_debuff_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EquipmentDesc>(
            "equipment_desc",
            &self.equipment_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<EquipmentState>(
            "equipment_state",
            &self.equipment_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ExperienceState>(
            "experience_state",
            &self.experience_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ExplorationChunksState>(
            "exploration_chunks_state",
            &self.exploration_chunks_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ExtractOutcomeState>(
            "extract_outcome_state",
            &self.extract_outcome_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ExtractionRecipeDesc>(
            "extraction_recipe_desc",
            &self.extraction_recipe_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<FoodDesc>("food_desc", &self.food_desc, event);
        callbacks.invoke_table_row_callbacks::<FootprintTileState>(
            "footprint_tile_state",
            &self.footprint_tile_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ForceGenerateTypes>(
            "force_generate_types",
            &self.force_generate_types,
            event,
        );
        callbacks.invoke_table_row_callbacks::<GateDesc>("gate_desc", &self.gate_desc, event);
        callbacks.invoke_table_row_callbacks::<GlobalSearchState>(
            "global_search_state",
            &self.global_search_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<Globals>("globals", &self.globals, event);
        callbacks.invoke_table_row_callbacks::<GrowthLoopTimer>(
            "growth_loop_timer",
            &self.growth_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<GrowthState>(
            "growth_state",
            &self.growth_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<HealthState>(
            "health_state",
            &self.health_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<HerdState>("herd_state", &self.herd_state, event);
        callbacks.invoke_table_row_callbacks::<HexiteExchangeEntryDesc>(
            "hexite_exchange_entry_desc",
            &self.hexite_exchange_entry_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<HideDeployableTimer>(
            "hide_deployable_timer",
            &self.hide_deployable_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<IdentityRole>(
            "identity_role",
            &self.identity_role,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InterModuleMessage>(
            "inter_module_message",
            &self.inter_module_message,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InterModuleMessageCounter>(
            "inter_module_message_counter",
            &self.inter_module_message_counter,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InterModuleResponseMessageCounter>(
            "inter_module_response_message_counter",
            &self.inter_module_response_message_counter,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InteriorCollapseTriggerState>(
            "interior_collapse_trigger_state",
            &self.interior_collapse_trigger_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InteriorEnvironmentDesc>(
            "interior_environment_desc",
            &self.interior_environment_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InteriorInstanceDesc>(
            "interior_instance_desc",
            &self.interior_instance_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InteriorNetworkDesc>(
            "interior_network_desc",
            &self.interior_network_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InteriorPortalConnectionsDesc>(
            "interior_portal_connections_desc",
            &self.interior_portal_connections_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InteriorSetCollapsedTimer>(
            "interior_set_collapsed_timer",
            &self.interior_set_collapsed_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InteriorShapeDesc>(
            "interior_shape_desc",
            &self.interior_shape_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InteriorSpawnDesc>(
            "interior_spawn_desc",
            &self.interior_spawn_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<InventoryState>(
            "inventory_state",
            &self.inventory_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ItemConversionRecipeDesc>(
            "item_conversion_recipe_desc",
            &self.item_conversion_recipe_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ItemDesc>("item_desc", &self.item_desc, event);
        callbacks.invoke_table_row_callbacks::<ItemListDesc>(
            "item_list_desc",
            &self.item_list_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeAchievementState>(
            "knowledge_achievement_state",
            &self.knowledge_achievement_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeBattleActionState>(
            "knowledge_battle_action_state",
            &self.knowledge_battle_action_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeBuildingState>(
            "knowledge_building_state",
            &self.knowledge_building_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeCargoState>(
            "knowledge_cargo_state",
            &self.knowledge_cargo_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeClaimState>(
            "knowledge_claim_state",
            &self.knowledge_claim_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeConstructionState>(
            "knowledge_construction_state",
            &self.knowledge_construction_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeCraftState>(
            "knowledge_craft_state",
            &self.knowledge_craft_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeDeployableState>(
            "knowledge_deployable_state",
            &self.knowledge_deployable_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeEnemyState>(
            "knowledge_enemy_state",
            &self.knowledge_enemy_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeExtractState>(
            "knowledge_extract_state",
            &self.knowledge_extract_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeItemState>(
            "knowledge_item_state",
            &self.knowledge_item_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeLoreState>(
            "knowledge_lore_state",
            &self.knowledge_lore_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeNpcState>(
            "knowledge_npc_state",
            &self.knowledge_npc_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgePavingState>(
            "knowledge_paving_state",
            &self.knowledge_paving_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgePillarShapingState>(
            "knowledge_pillar_shaping_state",
            &self.knowledge_pillar_shaping_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeResourcePlacementState>(
            "knowledge_resource_placement_state",
            &self.knowledge_resource_placement_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeResourceState>(
            "knowledge_resource_state",
            &self.knowledge_resource_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeRuinsState>(
            "knowledge_ruins_state",
            &self.knowledge_ruins_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeScrollDesc>(
            "knowledge_scroll_desc",
            &self.knowledge_scroll_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeScrollTypeDesc>(
            "knowledge_scroll_type_desc",
            &self.knowledge_scroll_type_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeSecondaryState>(
            "knowledge_secondary_state",
            &self.knowledge_secondary_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeStatModifierDesc>(
            "knowledge_stat_modifier_desc",
            &self.knowledge_stat_modifier_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<KnowledgeVaultState>(
            "knowledge_vault_state",
            &self.knowledge_vault_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<LightSourceState>(
            "light_source_state",
            &self.light_source_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<LocationCache>(
            "location_cache",
            &self.location_cache,
            event,
        );
        callbacks.invoke_table_row_callbacks::<LocationState>(
            "location_state",
            &self.location_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<LootChestDesc>(
            "loot_chest_desc",
            &self.loot_chest_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<LootChestDespawnTimer>(
            "loot_chest_despawn_timer",
            &self.loot_chest_despawn_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<LootChestSpawnTimer>(
            "loot_chest_spawn_timer",
            &self.loot_chest_spawn_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<LootChestState>(
            "loot_chest_state",
            &self.loot_chest_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<LootRarityDesc>(
            "loot_rarity_desc",
            &self.loot_rarity_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<LootTableDesc>(
            "loot_table_desc",
            &self.loot_table_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<LostItemsState>(
            "lost_items_state",
            &self.lost_items_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<MobileEntityState>(
            "mobile_entity_state",
            &self.mobile_entity_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<MountingState>(
            "mounting_state",
            &self.mounting_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<MoveValidationStrikeCounterState>(
            "move_validation_strike_counter_state",
            &self.move_validation_strike_counter_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<NpcAiLoopTimer>(
            "npc_ai_loop_timer",
            &self.npc_ai_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<NpcDesc>("npc_desc", &self.npc_desc, event);
        callbacks.invoke_table_row_callbacks::<NpcState>("npc_state", &self.npc_state, event);
        callbacks.invoke_table_row_callbacks::<OnDurabilityZeroTimer>(
            "on_durability_zero_timer",
            &self.on_durability_zero_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<OnboardingRewardDesc>(
            "onboarding_reward_desc",
            &self.onboarding_reward_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<OnboardingState>(
            "onboarding_state",
            &self.onboarding_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ParametersDesc>(
            "parameters_desc",
            &self.parameters_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ParametersPlayerMoveDesc>(
            "parameters_player_move_desc",
            &self.parameters_player_move_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PassiveCraftState>(
            "passive_craft_state",
            &self.passive_craft_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PassiveCraftTimer>(
            "passive_craft_timer",
            &self.passive_craft_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PathfindingDesc>(
            "pathfinding_desc",
            &self.pathfinding_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PavedTileState>(
            "paved_tile_state",
            &self.paved_tile_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PavingTileDesc>(
            "paving_tile_desc",
            &self.paving_tile_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PermissionState>(
            "permission_state",
            &self.permission_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PillarShapingDesc>(
            "pillar_shaping_desc",
            &self.pillar_shaping_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PillarShapingState>(
            "pillar_shaping_state",
            &self.pillar_shaping_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerActionDesc>(
            "player_action_desc",
            &self.player_action_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerActionState>(
            "player_action_state",
            &self.player_action_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerDeathTimer>(
            "player_death_timer",
            &self.player_death_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerHousingDesc>(
            "player_housing_desc",
            &self.player_housing_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerHousingEvictPlayerTimer>(
            "player_housing_evict_player_timer",
            &self.player_housing_evict_player_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerHousingIncomeLoopTimer>(
            "player_housing_income_loop_timer",
            &self.player_housing_income_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerHousingState>(
            "player_housing_state",
            &self.player_housing_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerLowercaseUsernameState>(
            "player_lowercase_username_state",
            &self.player_lowercase_username_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerNoteState>(
            "player_note_state",
            &self.player_note_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerNotificationEvent>(
            "player_notification_event",
            &self.player_notification_event,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerPrefsState>(
            "player_prefs_state",
            &self.player_prefs_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerQueueState>(
            "player_queue_state",
            &self.player_queue_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerRegenLoopTimer>(
            "player_regen_loop_timer",
            &self.player_regen_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerRegionTransferEvent>(
            "player_region_transfer_event",
            &self.player_region_transfer_event,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerReportState>(
            "player_report_state",
            &self.player_report_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerSetNameOutcomeEvent>(
            "player_set_name_outcome_event",
            &self.player_set_name_outcome_event,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerState>(
            "player_state",
            &self.player_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerTimestampState>(
            "player_timestamp_state",
            &self.player_timestamp_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerUseElevatorTimer>(
            "player_use_elevator_timer",
            &self.player_use_elevator_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerUsernameState>(
            "player_username_state",
            &self.player_username_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerVoteConcludeTimer>(
            "player_vote_conclude_timer",
            &self.player_vote_conclude_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PlayerVoteState>(
            "player_vote_state",
            &self.player_vote_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PortalState>(
            "portal_state",
            &self.portal_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<PrivateParametersDesc>(
            "private_parameters_desc",
            &self.private_parameters_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ProgressiveActionState>(
            "progressive_action_state",
            &self.progressive_action_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ProjectSiteState>(
            "project_site_state",
            &self.project_site_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<RegionConnectionInfo>(
            "region_connection_info",
            &self.region_connection_info,
            event,
        );
        callbacks.invoke_table_row_callbacks::<RegionPopulationInfo>(
            "region_population_info",
            &self.region_population_info,
            event,
        );
        callbacks.invoke_table_row_callbacks::<RegionPopulationLoopTimer>(
            "region_popuplation_loop_timer",
            &self.region_popuplation_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<RegionSignInParameters>(
            "region_sign_in_parameters",
            &self.region_sign_in_parameters,
            event,
        );
        callbacks.invoke_table_row_callbacks::<RentCollectorLoopTimer>(
            "rent_collector_loop_timer",
            &self.rent_collector_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<RentEvictTimer>(
            "rent_evict_timer",
            &self.rent_evict_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<RentState>("rent_state", &self.rent_state, event);
        callbacks.invoke_table_row_callbacks::<ResetChunkIndexTimer>(
            "reset_chunk_index_timer",
            &self.reset_chunk_index_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResetMobileEntityTimer>(
            "reset_mobile_entity_timer",
            &self.reset_mobile_entity_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResourceClumpDesc>(
            "resource_clump_desc",
            &self.resource_clump_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResourceCount>(
            "resource_count",
            &self.resource_count,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResourceDesc>(
            "resource_desc",
            &self.resource_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResourceGrowthRecipeDesc>(
            "resource_growth_recipe_desc",
            &self.resource_growth_recipe_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResourceHealthState>(
            "resource_health_state",
            &self.resource_health_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResourcePlacementRecipeDesc>(
            "resource_placement_recipe_desc",
            &self.resource_placement_recipe_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResourceSpawnTimer>(
            "resource_spawn_timer",
            &self.resource_spawn_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResourceState>(
            "resource_state",
            &self.resource_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResourcesLog>(
            "resources_log",
            &self.resources_log,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ResourcesRegenLoopTimer>(
            "resources_regen_loop_timer",
            &self.resources_regen_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<RespawnResourceInChunkTimer>(
            "respawn_resource_in_chunk_timer",
            &self.respawn_resource_in_chunk_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<RezSickLongTermState>(
            "rez_sick_long_term_state",
            &self.rez_sick_long_term_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<SatiationState>(
            "satiation_state",
            &self.satiation_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<SecondaryKnowledgeDesc>(
            "secondary_knowledge_desc",
            &self.secondary_knowledge_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<AuctionListingState>(
            "sell_order_state",
            &self.sell_order_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ServerIdentity>(
            "server_identity",
            &self.server_identity,
            event,
        );
        callbacks.invoke_table_row_callbacks::<SignedInPlayerState>(
            "signed_in_player_state",
            &self.signed_in_player_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<SingleResourceClumpInfo>(
            "single_resource_clump_info",
            &self.single_resource_clump_info,
            event,
        );
        callbacks.invoke_table_row_callbacks::<SingleResourceToClumpDesc>(
            "single_resource_to_clump_desc",
            &self.single_resource_to_clump_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<SkillDesc>("skill_desc", &self.skill_desc, event);
        callbacks.invoke_table_row_callbacks::<StagedStaticData>(
            "staged_static_data",
            &self.staged_static_data,
            event,
        );
        callbacks.invoke_table_row_callbacks::<StaminaState>(
            "stamina_state",
            &self.stamina_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<StarvingLoopTimer>(
            "starving_loop_timer",
            &self.starving_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<StarvingPlayerState>(
            "starving_player_state",
            &self.starving_player_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TargetState>(
            "target_state",
            &self.target_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TargetableState>(
            "targetable_state",
            &self.targetable_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TargetingMatrixDesc>(
            "targeting_matrix_desc",
            &self.targeting_matrix_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TeleportItemDesc>(
            "teleport_item_desc",
            &self.teleport_item_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TeleportPlayerTimer>(
            "teleport_player_timer",
            &self.teleport_player_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TeleportationEnergyRegenLoopTimer>(
            "teleportation_energy_regen_loop_timer",
            &self.teleportation_energy_regen_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TeleportationEnergyState>(
            "teleportation_energy_state",
            &self.teleportation_energy_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TerraformProgressState>(
            "terraform_progress_state",
            &self.terraform_progress_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TerraformRecipeDesc>(
            "terraform_recipe_desc",
            &self.terraform_recipe_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TerrainChunkState>(
            "terrain_chunk_state",
            &self.terrain_chunk_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TheGreatPlaceHolderTable>(
            "the_great_placeholder_table",
            &self.the_great_placeholder_table,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ThreatState>(
            "threat_state",
            &self.threat_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ToolDesc>("tool_desc", &self.tool_desc, event);
        callbacks.invoke_table_row_callbacks::<ToolTypeDesc>(
            "tool_type_desc",
            &self.tool_type_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<ToolbarState>(
            "toolbar_state",
            &self.toolbar_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TradeOrderState>(
            "trade_order_state",
            &self.trade_order_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TradeSessionLoopTimer>(
            "trade_session_loop_timer",
            &self.trade_session_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TradeSessionState>(
            "trade_session_state",
            &self.trade_session_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TransferPlayerTimer>(
            "transfer_player_timer",
            &self.transfer_player_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TravelerTaskDesc>(
            "traveler_task_desc",
            &self.traveler_task_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TravelerTaskLoopTimer>(
            "traveler_task_loop_timer",
            &self.traveler_task_loop_timer,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TravelerTaskState>(
            "traveler_task_state",
            &self.traveler_task_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<TravelerTradeOrderDesc>(
            "traveler_trade_order_desc",
            &self.traveler_trade_order_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<UnclaimedCollectiblesState>(
            "unclaimed_collectibles_state",
            &self.unclaimed_collectibles_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<UnclaimedShardsState>(
            "unclaimed_shards_state",
            &self.unclaimed_shards_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<UserAuthenticationState>(
            "user_authentication_state",
            &self.user_authentication_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<UserModerationState>(
            "user_moderation_state",
            &self.user_moderation_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<UserPreviousRegionState>(
            "user_previous_region_state",
            &self.user_previous_region_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<UserState>("user_state", &self.user_state, event);
        callbacks.invoke_table_row_callbacks::<VaultState>("vault_state", &self.vault_state, event);
        callbacks.invoke_table_row_callbacks::<WallDesc>("wall_desc", &self.wall_desc, event);
        callbacks.invoke_table_row_callbacks::<WeaponDesc>("weapon_desc", &self.weapon_desc, event);
        callbacks.invoke_table_row_callbacks::<WeaponTypeDesc>(
            "weapon_type_desc",
            &self.weapon_type_desc,
            event,
        );
        callbacks.invoke_table_row_callbacks::<WorldRegionNameState>(
            "world_region_name_state",
            &self.world_region_name_state,
            event,
        );
        callbacks.invoke_table_row_callbacks::<WorldRegionState>(
            "world_region_state",
            &self.world_region_state,
            event,
        );
    }
}

#[doc(hidden)]
pub struct RemoteModule;

impl __sdk::InModule for RemoteModule {
    type Module = Self;
}

/// The `reducers` field of [`EventContext`] and [`DbConnection`],
/// with methods provided by extension traits for each reducer defined by the module.
pub struct RemoteReducers {
    imp: __sdk::DbContextImpl<RemoteModule>,
}

impl __sdk::InModule for RemoteReducers {
    type Module = RemoteModule;
}

#[doc(hidden)]
/// The `set_reducer_flags` field of [`DbConnection`],
/// with methods provided by extension traits for each reducer defined by the module.
/// Each method sets the flags for the reducer with the same name.
///
/// This type is currently unstable and may be removed without a major version bump.
pub struct SetReducerFlags {
    imp: __sdk::DbContextImpl<RemoteModule>,
}

impl __sdk::InModule for SetReducerFlags {
    type Module = RemoteModule;
}

/// The `db` field of [`EventContext`] and [`DbConnection`],
/// with methods provided by extension traits for each table defined by the module.
pub struct RemoteTables {
    imp: __sdk::DbContextImpl<RemoteModule>,
}

impl __sdk::InModule for RemoteTables {
    type Module = RemoteModule;
}

/// A connection to a remote module, including a materialized view of a subset of the database.
///
/// Connect to a remote module by calling [`DbConnection::builder`]
/// and using the [`__sdk::DbConnectionBuilder`] builder-pattern constructor.
///
/// You must explicitly advance the connection by calling any one of:
///
/// - [`DbConnection::frame_tick`].
/// - [`DbConnection::run_threaded`].
/// - [`DbConnection::run_async`].
/// - [`DbConnection::advance_one_message`].
/// - [`DbConnection::advance_one_message_blocking`].
/// - [`DbConnection::advance_one_message_async`].
///
/// Which of these methods you should call depends on the specific needs of your application,
/// but you must call one of them, or else the connection will never progress.
pub struct DbConnection {
    /// Access to tables defined by the module via extension traits implemented for [`RemoteTables`].
    pub db: RemoteTables,
    /// Access to reducers defined by the module via extension traits implemented for [`RemoteReducers`].
    pub reducers: RemoteReducers,
    #[doc(hidden)]
    /// Access to setting the call-flags of each reducer defined for each reducer defined by the module
    /// via extension traits implemented for [`SetReducerFlags`].
    ///
    /// This type is currently unstable and may be removed without a major version bump.
    pub set_reducer_flags: SetReducerFlags,

    imp: __sdk::DbContextImpl<RemoteModule>,
}

impl __sdk::InModule for DbConnection {
    type Module = RemoteModule;
}

impl __sdk::DbContext for DbConnection {
    type DbView = RemoteTables;
    type Reducers = RemoteReducers;
    type SetReducerFlags = SetReducerFlags;

    fn db(&self) -> &Self::DbView {
        &self.db
    }
    fn reducers(&self) -> &Self::Reducers {
        &self.reducers
    }
    fn set_reducer_flags(&self) -> &Self::SetReducerFlags {
        &self.set_reducer_flags
    }

    fn is_active(&self) -> bool {
        self.imp.is_active()
    }

    fn disconnect(&self) -> __sdk::Result<()> {
        self.imp.disconnect()
    }

    type SubscriptionBuilder = __sdk::SubscriptionBuilder<RemoteModule>;

    fn subscription_builder(&self) -> Self::SubscriptionBuilder {
        __sdk::SubscriptionBuilder::new(&self.imp)
    }

    fn try_identity(&self) -> Option<__sdk::Identity> {
        self.imp.try_identity()
    }
    fn connection_id(&self) -> __sdk::ConnectionId {
        self.imp.connection_id()
    }
}

impl DbConnection {
    /// Builder-pattern constructor for a connection to a remote module.
    ///
    /// See [`__sdk::DbConnectionBuilder`] for required and optional configuration for the new connection.
    pub fn builder() -> __sdk::DbConnectionBuilder<RemoteModule> {
        __sdk::DbConnectionBuilder::new()
    }

    /// If any WebSocket messages are waiting, process one of them.
    ///
    /// Returns `true` if a message was processed, or `false` if the queue is empty.
    /// Callers should invoke this message in a loop until it returns `false`
    /// or for as much time is available to process messages.
    ///
    /// Returns an error if the connection is disconnected.
    /// If the disconnection in question was normal,
    ///  i.e. the result of a call to [`__sdk::DbContext::disconnect`],
    /// the returned error will be downcastable to [`__sdk::DisconnectedError`].
    ///
    /// This is a low-level primitive exposed for power users who need significant control over scheduling.
    /// Most applications should call [`Self::frame_tick`] each frame
    /// to fully exhaust the queue whenever time is available.
    pub fn advance_one_message(&self) -> __sdk::Result<bool> {
        self.imp.advance_one_message()
    }

    /// Process one WebSocket message, potentially blocking the current thread until one is received.
    ///
    /// Returns an error if the connection is disconnected.
    /// If the disconnection in question was normal,
    ///  i.e. the result of a call to [`__sdk::DbContext::disconnect`],
    /// the returned error will be downcastable to [`__sdk::DisconnectedError`].
    ///
    /// This is a low-level primitive exposed for power users who need significant control over scheduling.
    /// Most applications should call [`Self::run_threaded`] to spawn a thread
    /// which advances the connection automatically.
    pub fn advance_one_message_blocking(&self) -> __sdk::Result<()> {
        self.imp.advance_one_message_blocking()
    }

    /// Process one WebSocket message, `await`ing until one is received.
    ///
    /// Returns an error if the connection is disconnected.
    /// If the disconnection in question was normal,
    ///  i.e. the result of a call to [`__sdk::DbContext::disconnect`],
    /// the returned error will be downcastable to [`__sdk::DisconnectedError`].
    ///
    /// This is a low-level primitive exposed for power users who need significant control over scheduling.
    /// Most applications should call [`Self::run_async`] to run an `async` loop
    /// which advances the connection when polled.
    pub async fn advance_one_message_async(&self) -> __sdk::Result<()> {
        self.imp.advance_one_message_async().await
    }

    /// Process all WebSocket messages waiting in the queue,
    /// then return without `await`ing or blocking the current thread.
    pub fn frame_tick(&self) -> __sdk::Result<()> {
        self.imp.frame_tick()
    }

    /// Spawn a thread which processes WebSocket messages as they are received.
    pub fn run_threaded(&self) -> std::thread::JoinHandle<()> {
        self.imp.run_threaded()
    }

    /// Run an `async` loop which processes WebSocket messages when polled.
    pub async fn run_async(&self) -> __sdk::Result<()> {
        self.imp.run_async().await
    }
}

impl __sdk::DbConnection for DbConnection {
    fn new(imp: __sdk::DbContextImpl<RemoteModule>) -> Self {
        Self {
            db: RemoteTables { imp: imp.clone() },
            reducers: RemoteReducers { imp: imp.clone() },
            set_reducer_flags: SetReducerFlags { imp: imp.clone() },
            imp,
        }
    }
}

/// A handle on a subscribed query.
// TODO: Document this better after implementing the new subscription API.
#[derive(Clone)]
pub struct SubscriptionHandle {
    imp: __sdk::SubscriptionHandleImpl<RemoteModule>,
}

impl __sdk::InModule for SubscriptionHandle {
    type Module = RemoteModule;
}

impl __sdk::SubscriptionHandle for SubscriptionHandle {
    fn new(imp: __sdk::SubscriptionHandleImpl<RemoteModule>) -> Self {
        Self { imp }
    }

    /// Returns true if this subscription has been terminated due to an unsubscribe call or an error.
    fn is_ended(&self) -> bool {
        self.imp.is_ended()
    }

    /// Returns true if this subscription has been applied and has not yet been unsubscribed.
    fn is_active(&self) -> bool {
        self.imp.is_active()
    }

    /// Unsubscribe from the query controlled by this `SubscriptionHandle`,
    /// then run `on_end` when its rows are removed from the client cache.
    fn unsubscribe_then(self, on_end: __sdk::OnEndedCallback<RemoteModule>) -> __sdk::Result<()> {
        self.imp.unsubscribe_then(Some(on_end))
    }

    fn unsubscribe(self) -> __sdk::Result<()> {
        self.imp.unsubscribe_then(None)
    }
}

/// Alias trait for a [`__sdk::DbContext`] connected to this module,
/// with that trait's associated types bounded to this module's concrete types.
///
/// Users can use this trait as a boundary on definitions which should accept
/// either a [`DbConnection`] or an [`EventContext`] and operate on either.
pub trait RemoteDbContext:
    __sdk::DbContext<
        DbView = RemoteTables,
        Reducers = RemoteReducers,
        SetReducerFlags = SetReducerFlags,
        SubscriptionBuilder = __sdk::SubscriptionBuilder<RemoteModule>,
    >
{
}
impl<
    Ctx: __sdk::DbContext<
            DbView = RemoteTables,
            Reducers = RemoteReducers,
            SetReducerFlags = SetReducerFlags,
            SubscriptionBuilder = __sdk::SubscriptionBuilder<RemoteModule>,
        >,
> RemoteDbContext for Ctx
{
}

/// An [`__sdk::DbContext`] augmented with a [`__sdk::Event`],
/// passed to [`__sdk::Table::on_insert`], [`__sdk::Table::on_delete`] and [`__sdk::TableWithPrimaryKey::on_update`] callbacks.
pub struct EventContext {
    /// Access to tables defined by the module via extension traits implemented for [`RemoteTables`].
    pub db: RemoteTables,
    /// Access to reducers defined by the module via extension traits implemented for [`RemoteReducers`].
    pub reducers: RemoteReducers,
    /// Access to setting the call-flags of each reducer defined for each reducer defined by the module
    /// via extension traits implemented for [`SetReducerFlags`].
    ///
    /// This type is currently unstable and may be removed without a major version bump.
    pub set_reducer_flags: SetReducerFlags,
    /// The event which caused these callbacks to run.
    pub event: __sdk::Event<Reducer>,
    imp: __sdk::DbContextImpl<RemoteModule>,
}

impl __sdk::AbstractEventContext for EventContext {
    type Event = __sdk::Event<Reducer>;
    fn event(&self) -> &Self::Event {
        &self.event
    }
    fn new(imp: __sdk::DbContextImpl<RemoteModule>, event: Self::Event) -> Self {
        Self {
            db: RemoteTables { imp: imp.clone() },
            reducers: RemoteReducers { imp: imp.clone() },
            set_reducer_flags: SetReducerFlags { imp: imp.clone() },
            event,
            imp,
        }
    }
}

impl __sdk::InModule for EventContext {
    type Module = RemoteModule;
}

impl __sdk::DbContext for EventContext {
    type DbView = RemoteTables;
    type Reducers = RemoteReducers;
    type SetReducerFlags = SetReducerFlags;

    fn db(&self) -> &Self::DbView {
        &self.db
    }
    fn reducers(&self) -> &Self::Reducers {
        &self.reducers
    }
    fn set_reducer_flags(&self) -> &Self::SetReducerFlags {
        &self.set_reducer_flags
    }

    fn is_active(&self) -> bool {
        self.imp.is_active()
    }

    fn disconnect(&self) -> __sdk::Result<()> {
        self.imp.disconnect()
    }

    type SubscriptionBuilder = __sdk::SubscriptionBuilder<RemoteModule>;

    fn subscription_builder(&self) -> Self::SubscriptionBuilder {
        __sdk::SubscriptionBuilder::new(&self.imp)
    }

    fn try_identity(&self) -> Option<__sdk::Identity> {
        self.imp.try_identity()
    }
    fn connection_id(&self) -> __sdk::ConnectionId {
        self.imp.connection_id()
    }
}

impl __sdk::EventContext for EventContext {}

/// An [`__sdk::DbContext`] augmented with a [`__sdk::ReducerEvent`],
/// passed to on-reducer callbacks.
pub struct ReducerEventContext {
    /// Access to tables defined by the module via extension traits implemented for [`RemoteTables`].
    pub db: RemoteTables,
    /// Access to reducers defined by the module via extension traits implemented for [`RemoteReducers`].
    pub reducers: RemoteReducers,
    /// Access to setting the call-flags of each reducer defined for each reducer defined by the module
    /// via extension traits implemented for [`SetReducerFlags`].
    ///
    /// This type is currently unstable and may be removed without a major version bump.
    pub set_reducer_flags: SetReducerFlags,
    /// The event which caused these callbacks to run.
    pub event: __sdk::ReducerEvent<Reducer>,
    imp: __sdk::DbContextImpl<RemoteModule>,
}

impl __sdk::AbstractEventContext for ReducerEventContext {
    type Event = __sdk::ReducerEvent<Reducer>;
    fn event(&self) -> &Self::Event {
        &self.event
    }
    fn new(imp: __sdk::DbContextImpl<RemoteModule>, event: Self::Event) -> Self {
        Self {
            db: RemoteTables { imp: imp.clone() },
            reducers: RemoteReducers { imp: imp.clone() },
            set_reducer_flags: SetReducerFlags { imp: imp.clone() },
            event,
            imp,
        }
    }
}

impl __sdk::InModule for ReducerEventContext {
    type Module = RemoteModule;
}

impl __sdk::DbContext for ReducerEventContext {
    type DbView = RemoteTables;
    type Reducers = RemoteReducers;
    type SetReducerFlags = SetReducerFlags;

    fn db(&self) -> &Self::DbView {
        &self.db
    }
    fn reducers(&self) -> &Self::Reducers {
        &self.reducers
    }
    fn set_reducer_flags(&self) -> &Self::SetReducerFlags {
        &self.set_reducer_flags
    }

    fn is_active(&self) -> bool {
        self.imp.is_active()
    }

    fn disconnect(&self) -> __sdk::Result<()> {
        self.imp.disconnect()
    }

    type SubscriptionBuilder = __sdk::SubscriptionBuilder<RemoteModule>;

    fn subscription_builder(&self) -> Self::SubscriptionBuilder {
        __sdk::SubscriptionBuilder::new(&self.imp)
    }

    fn try_identity(&self) -> Option<__sdk::Identity> {
        self.imp.try_identity()
    }
    fn connection_id(&self) -> __sdk::ConnectionId {
        self.imp.connection_id()
    }
}

impl __sdk::ReducerEventContext for ReducerEventContext {}

/// An [`__sdk::DbContext`] passed to [`__sdk::SubscriptionBuilder::on_applied`] and [`SubscriptionHandle::unsubscribe_then`] callbacks.
pub struct SubscriptionEventContext {
    /// Access to tables defined by the module via extension traits implemented for [`RemoteTables`].
    pub db: RemoteTables,
    /// Access to reducers defined by the module via extension traits implemented for [`RemoteReducers`].
    pub reducers: RemoteReducers,
    /// Access to setting the call-flags of each reducer defined for each reducer defined by the module
    /// via extension traits implemented for [`SetReducerFlags`].
    ///
    /// This type is currently unstable and may be removed without a major version bump.
    pub set_reducer_flags: SetReducerFlags,
    imp: __sdk::DbContextImpl<RemoteModule>,
}

impl __sdk::AbstractEventContext for SubscriptionEventContext {
    type Event = ();
    fn event(&self) -> &Self::Event {
        &()
    }
    fn new(imp: __sdk::DbContextImpl<RemoteModule>, _event: Self::Event) -> Self {
        Self {
            db: RemoteTables { imp: imp.clone() },
            reducers: RemoteReducers { imp: imp.clone() },
            set_reducer_flags: SetReducerFlags { imp: imp.clone() },
            imp,
        }
    }
}

impl __sdk::InModule for SubscriptionEventContext {
    type Module = RemoteModule;
}

impl __sdk::DbContext for SubscriptionEventContext {
    type DbView = RemoteTables;
    type Reducers = RemoteReducers;
    type SetReducerFlags = SetReducerFlags;

    fn db(&self) -> &Self::DbView {
        &self.db
    }
    fn reducers(&self) -> &Self::Reducers {
        &self.reducers
    }
    fn set_reducer_flags(&self) -> &Self::SetReducerFlags {
        &self.set_reducer_flags
    }

    fn is_active(&self) -> bool {
        self.imp.is_active()
    }

    fn disconnect(&self) -> __sdk::Result<()> {
        self.imp.disconnect()
    }

    type SubscriptionBuilder = __sdk::SubscriptionBuilder<RemoteModule>;

    fn subscription_builder(&self) -> Self::SubscriptionBuilder {
        __sdk::SubscriptionBuilder::new(&self.imp)
    }

    fn try_identity(&self) -> Option<__sdk::Identity> {
        self.imp.try_identity()
    }
    fn connection_id(&self) -> __sdk::ConnectionId {
        self.imp.connection_id()
    }
}

impl __sdk::SubscriptionEventContext for SubscriptionEventContext {}

/// An [`__sdk::DbContext`] augmented with a [`__sdk::Error`],
/// passed to [`__sdk::DbConnectionBuilder::on_disconnect`], [`__sdk::DbConnectionBuilder::on_connect_error`] and [`__sdk::SubscriptionBuilder::on_error`] callbacks.
pub struct ErrorContext {
    /// Access to tables defined by the module via extension traits implemented for [`RemoteTables`].
    pub db: RemoteTables,
    /// Access to reducers defined by the module via extension traits implemented for [`RemoteReducers`].
    pub reducers: RemoteReducers,
    /// Access to setting the call-flags of each reducer defined for each reducer defined by the module
    /// via extension traits implemented for [`SetReducerFlags`].
    ///
    /// This type is currently unstable and may be removed without a major version bump.
    pub set_reducer_flags: SetReducerFlags,
    /// The event which caused these callbacks to run.
    pub event: Option<__sdk::Error>,
    imp: __sdk::DbContextImpl<RemoteModule>,
}

impl __sdk::AbstractEventContext for ErrorContext {
    type Event = Option<__sdk::Error>;
    fn event(&self) -> &Self::Event {
        &self.event
    }
    fn new(imp: __sdk::DbContextImpl<RemoteModule>, event: Self::Event) -> Self {
        Self {
            db: RemoteTables { imp: imp.clone() },
            reducers: RemoteReducers { imp: imp.clone() },
            set_reducer_flags: SetReducerFlags { imp: imp.clone() },
            event,
            imp,
        }
    }
}

impl __sdk::InModule for ErrorContext {
    type Module = RemoteModule;
}

impl __sdk::DbContext for ErrorContext {
    type DbView = RemoteTables;
    type Reducers = RemoteReducers;
    type SetReducerFlags = SetReducerFlags;

    fn db(&self) -> &Self::DbView {
        &self.db
    }
    fn reducers(&self) -> &Self::Reducers {
        &self.reducers
    }
    fn set_reducer_flags(&self) -> &Self::SetReducerFlags {
        &self.set_reducer_flags
    }

    fn is_active(&self) -> bool {
        self.imp.is_active()
    }

    fn disconnect(&self) -> __sdk::Result<()> {
        self.imp.disconnect()
    }

    type SubscriptionBuilder = __sdk::SubscriptionBuilder<RemoteModule>;

    fn subscription_builder(&self) -> Self::SubscriptionBuilder {
        __sdk::SubscriptionBuilder::new(&self.imp)
    }

    fn try_identity(&self) -> Option<__sdk::Identity> {
        self.imp.try_identity()
    }
    fn connection_id(&self) -> __sdk::ConnectionId {
        self.imp.connection_id()
    }
}

impl __sdk::ErrorContext for ErrorContext {}

impl __sdk::SpacetimeModule for RemoteModule {
    type DbConnection = DbConnection;
    type EventContext = EventContext;
    type ReducerEventContext = ReducerEventContext;
    type SubscriptionEventContext = SubscriptionEventContext;
    type ErrorContext = ErrorContext;
    type Reducer = Reducer;
    type DbView = RemoteTables;
    type Reducers = RemoteReducers;
    type SetReducerFlags = SetReducerFlags;
    type DbUpdate = DbUpdate;
    type AppliedDiff<'r> = AppliedDiff<'r>;
    type SubscriptionHandle = SubscriptionHandle;

    fn register_tables(client_cache: &mut __sdk::ClientCache<Self>) {
        a_i_debug_state_table::register_table(client_cache);
        achievement_desc_table::register_table(client_cache);
        action_state_table::register_table(client_cache);
        active_buff_state_table::register_table(client_cache);
        admin_broadcast_table::register_table(client_cache);
        admin_restore_player_state_timer_table::register_table(client_cache);
        alert_desc_table::register_table(client_cache);
        alert_state_table::register_table(client_cache);
        attached_herds_state_table::register_table(client_cache);
        attack_impact_timer_table::register_table(client_cache);
        attack_outcome_state_table::register_table(client_cache);
        attack_timer_table::register_table(client_cache);
        auto_claim_state_table::register_table(client_cache);
        auto_logout_loop_timer_table::register_table(client_cache);
        barter_stall_state_table::register_table(client_cache);
        biome_desc_table::register_table(client_cache);
        buff_desc_table::register_table(client_cache);
        buff_type_desc_table::register_table(client_cache);
        building_claim_desc_table::register_table(client_cache);
        building_decay_loop_timer_table::register_table(client_cache);
        building_desc_table::register_table(client_cache);
        building_despawn_timer_table::register_table(client_cache);
        building_function_type_mapping_desc_table::register_table(client_cache);
        building_nickname_state_table::register_table(client_cache);
        building_portal_desc_table::register_table(client_cache);
        building_repairs_desc_table::register_table(client_cache);
        building_spawn_desc_table::register_table(client_cache);
        building_state_table::register_table(client_cache);
        building_type_desc_table::register_table(client_cache);
        buy_order_state_table::register_table(client_cache);
        cargo_desc_table::register_table(client_cache);
        character_stat_desc_table::register_table(client_cache);
        character_stats_state_table::register_table(client_cache);
        chat_message_state_table::register_table(client_cache);
        chest_rarity_desc_table::register_table(client_cache);
        claim_local_state_table::register_table(client_cache);
        claim_member_state_table::register_table(client_cache);
        claim_recruitment_state_table::register_table(client_cache);
        claim_state_table::register_table(client_cache);
        claim_tech_desc_table::register_table(client_cache);
        claim_tech_state_table::register_table(client_cache);
        claim_tech_unlock_timer_table::register_table(client_cache);
        claim_tile_cost_table::register_table(client_cache);
        claim_tile_state_table::register_table(client_cache);
        climb_requirement_desc_table::register_table(client_cache);
        closed_listing_state_table::register_table(client_cache);
        clothing_desc_table::register_table(client_cache);
        collect_stats_timer_table::register_table(client_cache);
        collectible_desc_table::register_table(client_cache);
        combat_action_desc_table::register_table(client_cache);
        combat_state_table::register_table(client_cache);
        config_table::register_table(client_cache);
        construction_recipe_desc_table::register_table(client_cache);
        crafting_recipe_desc_table::register_table(client_cache);
        day_night_loop_timer_table::register_table(client_cache);
        deconstruction_recipe_desc_table::register_table(client_cache);
        deployable_collectible_state_table::register_table(client_cache);
        deployable_desc_table::register_table(client_cache);
        deployable_dismount_timer_table::register_table(client_cache);
        deployable_state_table::register_table(client_cache);
        destroy_dimension_network_timer_table::register_table(client_cache);
        dimension_description_state_table::register_table(client_cache);
        dimension_network_state_table::register_table(client_cache);
        distant_visible_entity_table::register_table(client_cache);
        distant_visible_entity_desc_table::register_table(client_cache);
        dropped_inventory_despawn_timer_table::register_table(client_cache);
        dropped_inventory_ownership_timer_table::register_table(client_cache);
        dropped_inventory_state_table::register_table(client_cache);
        duel_agent_timer_table::register_table(client_cache);
        duel_despawn_timer_table::register_table(client_cache);
        duel_state_table::register_table(client_cache);
        elevator_desc_table::register_table(client_cache);
        emote_desc_table::register_table(client_cache);
        empire_chunk_state_table::register_table(client_cache);
        empire_color_desc_table::register_table(client_cache);
        empire_expansion_state_table::register_table(client_cache);
        empire_icon_desc_table::register_table(client_cache);
        empire_node_siege_state_table::register_table(client_cache);
        empire_node_state_table::register_table(client_cache);
        empire_notification_desc_table::register_table(client_cache);
        empire_player_data_state_table::register_table(client_cache);
        empire_rank_desc_table::register_table(client_cache);
        empire_rank_state_table::register_table(client_cache);
        empire_settlement_state_table::register_table(client_cache);
        empire_state_table::register_table(client_cache);
        empire_supplies_desc_table::register_table(client_cache);
        empire_territory_desc_table::register_table(client_cache);
        end_grace_period_timer_table::register_table(client_cache);
        enemy_ai_params_desc_table::register_table(client_cache);
        enemy_desc_table::register_table(client_cache);
        enemy_despawn_timer_table::register_table(client_cache);
        enemy_mob_monitor_state_table::register_table(client_cache);
        enemy_regen_loop_timer_table::register_table(client_cache);
        enemy_state_table::register_table(client_cache);
        environment_debuff_desc_table::register_table(client_cache);
        environment_debuff_loop_timer_table::register_table(client_cache);
        equipment_desc_table::register_table(client_cache);
        equipment_state_table::register_table(client_cache);
        experience_state_table::register_table(client_cache);
        exploration_chunks_state_table::register_table(client_cache);
        extract_outcome_state_table::register_table(client_cache);
        extraction_recipe_desc_table::register_table(client_cache);
        food_desc_table::register_table(client_cache);
        footprint_tile_state_table::register_table(client_cache);
        force_generate_types_table::register_table(client_cache);
        gate_desc_table::register_table(client_cache);
        global_search_state_table::register_table(client_cache);
        globals_table::register_table(client_cache);
        growth_loop_timer_table::register_table(client_cache);
        growth_state_table::register_table(client_cache);
        health_state_table::register_table(client_cache);
        herd_state_table::register_table(client_cache);
        hexite_exchange_entry_desc_table::register_table(client_cache);
        hide_deployable_timer_table::register_table(client_cache);
        identity_role_table::register_table(client_cache);
        inter_module_message_table::register_table(client_cache);
        inter_module_message_counter_table::register_table(client_cache);
        inter_module_response_message_counter_table::register_table(client_cache);
        interior_collapse_trigger_state_table::register_table(client_cache);
        interior_environment_desc_table::register_table(client_cache);
        interior_instance_desc_table::register_table(client_cache);
        interior_network_desc_table::register_table(client_cache);
        interior_portal_connections_desc_table::register_table(client_cache);
        interior_set_collapsed_timer_table::register_table(client_cache);
        interior_shape_desc_table::register_table(client_cache);
        interior_spawn_desc_table::register_table(client_cache);
        inventory_state_table::register_table(client_cache);
        item_conversion_recipe_desc_table::register_table(client_cache);
        item_desc_table::register_table(client_cache);
        item_list_desc_table::register_table(client_cache);
        knowledge_achievement_state_table::register_table(client_cache);
        knowledge_battle_action_state_table::register_table(client_cache);
        knowledge_building_state_table::register_table(client_cache);
        knowledge_cargo_state_table::register_table(client_cache);
        knowledge_claim_state_table::register_table(client_cache);
        knowledge_construction_state_table::register_table(client_cache);
        knowledge_craft_state_table::register_table(client_cache);
        knowledge_deployable_state_table::register_table(client_cache);
        knowledge_enemy_state_table::register_table(client_cache);
        knowledge_extract_state_table::register_table(client_cache);
        knowledge_item_state_table::register_table(client_cache);
        knowledge_lore_state_table::register_table(client_cache);
        knowledge_npc_state_table::register_table(client_cache);
        knowledge_paving_state_table::register_table(client_cache);
        knowledge_pillar_shaping_state_table::register_table(client_cache);
        knowledge_resource_placement_state_table::register_table(client_cache);
        knowledge_resource_state_table::register_table(client_cache);
        knowledge_ruins_state_table::register_table(client_cache);
        knowledge_scroll_desc_table::register_table(client_cache);
        knowledge_scroll_type_desc_table::register_table(client_cache);
        knowledge_secondary_state_table::register_table(client_cache);
        knowledge_stat_modifier_desc_table::register_table(client_cache);
        knowledge_vault_state_table::register_table(client_cache);
        light_source_state_table::register_table(client_cache);
        location_cache_table::register_table(client_cache);
        location_state_table::register_table(client_cache);
        loot_chest_desc_table::register_table(client_cache);
        loot_chest_despawn_timer_table::register_table(client_cache);
        loot_chest_spawn_timer_table::register_table(client_cache);
        loot_chest_state_table::register_table(client_cache);
        loot_rarity_desc_table::register_table(client_cache);
        loot_table_desc_table::register_table(client_cache);
        lost_items_state_table::register_table(client_cache);
        mobile_entity_state_table::register_table(client_cache);
        mounting_state_table::register_table(client_cache);
        move_validation_strike_counter_state_table::register_table(client_cache);
        npc_ai_loop_timer_table::register_table(client_cache);
        npc_desc_table::register_table(client_cache);
        npc_state_table::register_table(client_cache);
        on_durability_zero_timer_table::register_table(client_cache);
        onboarding_reward_desc_table::register_table(client_cache);
        onboarding_state_table::register_table(client_cache);
        parameters_desc_table::register_table(client_cache);
        parameters_player_move_desc_table::register_table(client_cache);
        passive_craft_state_table::register_table(client_cache);
        passive_craft_timer_table::register_table(client_cache);
        pathfinding_desc_table::register_table(client_cache);
        paved_tile_state_table::register_table(client_cache);
        paving_tile_desc_table::register_table(client_cache);
        permission_state_table::register_table(client_cache);
        pillar_shaping_desc_table::register_table(client_cache);
        pillar_shaping_state_table::register_table(client_cache);
        player_action_desc_table::register_table(client_cache);
        player_action_state_table::register_table(client_cache);
        player_death_timer_table::register_table(client_cache);
        player_housing_desc_table::register_table(client_cache);
        player_housing_evict_player_timer_table::register_table(client_cache);
        player_housing_income_loop_timer_table::register_table(client_cache);
        player_housing_state_table::register_table(client_cache);
        player_lowercase_username_state_table::register_table(client_cache);
        player_note_state_table::register_table(client_cache);
        player_notification_event_table::register_table(client_cache);
        player_prefs_state_table::register_table(client_cache);
        player_queue_state_table::register_table(client_cache);
        player_regen_loop_timer_table::register_table(client_cache);
        player_region_transfer_event_table::register_table(client_cache);
        player_report_state_table::register_table(client_cache);
        player_set_name_outcome_event_table::register_table(client_cache);
        player_state_table::register_table(client_cache);
        player_timestamp_state_table::register_table(client_cache);
        player_use_elevator_timer_table::register_table(client_cache);
        player_username_state_table::register_table(client_cache);
        player_vote_conclude_timer_table::register_table(client_cache);
        player_vote_state_table::register_table(client_cache);
        portal_state_table::register_table(client_cache);
        private_parameters_desc_table::register_table(client_cache);
        progressive_action_state_table::register_table(client_cache);
        project_site_state_table::register_table(client_cache);
        region_connection_info_table::register_table(client_cache);
        region_population_info_table::register_table(client_cache);
        region_popuplation_loop_timer_table::register_table(client_cache);
        region_sign_in_parameters_table::register_table(client_cache);
        rent_collector_loop_timer_table::register_table(client_cache);
        rent_evict_timer_table::register_table(client_cache);
        rent_state_table::register_table(client_cache);
        reset_chunk_index_timer_table::register_table(client_cache);
        reset_mobile_entity_timer_table::register_table(client_cache);
        resource_clump_desc_table::register_table(client_cache);
        resource_count_table::register_table(client_cache);
        resource_desc_table::register_table(client_cache);
        resource_growth_recipe_desc_table::register_table(client_cache);
        resource_health_state_table::register_table(client_cache);
        resource_placement_recipe_desc_table::register_table(client_cache);
        resource_spawn_timer_table::register_table(client_cache);
        resource_state_table::register_table(client_cache);
        resources_log_table::register_table(client_cache);
        resources_regen_loop_timer_table::register_table(client_cache);
        respawn_resource_in_chunk_timer_table::register_table(client_cache);
        rez_sick_long_term_state_table::register_table(client_cache);
        satiation_state_table::register_table(client_cache);
        secondary_knowledge_desc_table::register_table(client_cache);
        sell_order_state_table::register_table(client_cache);
        server_identity_table::register_table(client_cache);
        signed_in_player_state_table::register_table(client_cache);
        single_resource_clump_info_table::register_table(client_cache);
        single_resource_to_clump_desc_table::register_table(client_cache);
        skill_desc_table::register_table(client_cache);
        staged_static_data_table::register_table(client_cache);
        stamina_state_table::register_table(client_cache);
        starving_loop_timer_table::register_table(client_cache);
        starving_player_state_table::register_table(client_cache);
        target_state_table::register_table(client_cache);
        targetable_state_table::register_table(client_cache);
        targeting_matrix_desc_table::register_table(client_cache);
        teleport_item_desc_table::register_table(client_cache);
        teleport_player_timer_table::register_table(client_cache);
        teleportation_energy_regen_loop_timer_table::register_table(client_cache);
        teleportation_energy_state_table::register_table(client_cache);
        terraform_progress_state_table::register_table(client_cache);
        terraform_recipe_desc_table::register_table(client_cache);
        terrain_chunk_state_table::register_table(client_cache);
        the_great_placeholder_table_table::register_table(client_cache);
        threat_state_table::register_table(client_cache);
        tool_desc_table::register_table(client_cache);
        tool_type_desc_table::register_table(client_cache);
        toolbar_state_table::register_table(client_cache);
        trade_order_state_table::register_table(client_cache);
        trade_session_loop_timer_table::register_table(client_cache);
        trade_session_state_table::register_table(client_cache);
        transfer_player_timer_table::register_table(client_cache);
        traveler_task_desc_table::register_table(client_cache);
        traveler_task_loop_timer_table::register_table(client_cache);
        traveler_task_state_table::register_table(client_cache);
        traveler_trade_order_desc_table::register_table(client_cache);
        unclaimed_collectibles_state_table::register_table(client_cache);
        unclaimed_shards_state_table::register_table(client_cache);
        user_authentication_state_table::register_table(client_cache);
        user_moderation_state_table::register_table(client_cache);
        user_previous_region_state_table::register_table(client_cache);
        user_state_table::register_table(client_cache);
        vault_state_table::register_table(client_cache);
        wall_desc_table::register_table(client_cache);
        weapon_desc_table::register_table(client_cache);
        weapon_type_desc_table::register_table(client_cache);
        world_region_name_state_table::register_table(client_cache);
        world_region_state_table::register_table(client_cache);
    }
}
